//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_CUSTOMER_REFERENCE_CITY", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.City), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Customer), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_DISTRICT_REFERENCE_CITY", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.City), "District", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.District), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GROUPBYC_REFERENCE_CITY", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.City), "GroupByCity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByCity), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_User_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.City), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.User), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_CODETABL_REFERENCE_CODETYPE", "CodeType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.CodeType), "CodeTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.CodeTable), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_CUSTOMER_REFERENCE_DISTRICT", "District", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.District), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Customer), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_Customer_SubIndustry", "SubIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.SubIndustry), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Customer), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Customer), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_User_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Customer), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.User), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_DEPARTME_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Department), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_USERDEPA_REFERENCE_DEPARTME", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Department), "UserDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.UserDepartment), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_PRIVILEG_REFERENCE_FUNCTION", "Function", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Function), "Privilege", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Privilege), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByCity_GroupByItem", "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByItem), "GroupByCity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByCity), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_SubIndustry", "SubIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.SubIndustry), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_GroupByGroup", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByGroup), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupBySales_GroupBySales", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByGroup), "GroupBySales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupBySales), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_GroupByPortal", "GroupByPortal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByPortal), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_OrderDetail_GroupByItem", "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByItem), "OrderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.OrderDetail), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupBySales_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupBySales", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupBySales), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_SUBINDUS_REFERENCE_INDUSTRY", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Industry), "SubIndustry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.SubIndustry), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_PRIVILEG_REFERENCE_ROLE", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Role), "Privilege", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Privilege), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_USERROLE_REFERENCE_ROLE", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.UserRole), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_USERDEPA_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "UserDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.UserDepartment), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_USERROLE_REFERENCE_USER", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.UserRole), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.City), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User3", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User4", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_User2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_User3", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_User4", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.User), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_ApproveRecordGroupBy_GroupByGroup", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.GroupByGroup), "ApproveRecordGroupBy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.ApproveRecordGroupBy), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_ApproveRecordGroupBy_GroupByPortal", "GroupByPortal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByPortal), "ApproveRecordGroupBy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.ApproveRecordGroupBy), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile", "UploadFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.UploadFile), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile1", "UploadFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.UploadFile), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile2", "UploadFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.UploadFile), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile3", "UploadFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.UploadFile), "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByGroup), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupDRDWuLiu_GroupByGroup", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.GroupByGroup), "GroupDRDWuLiu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupDRDWuLiu), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupByItem_UploadFile", "UploadFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.UploadFile), "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupByItem), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_Payment_GroupByItem", "GroupByItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSHOrder.Entity.GroupByItem), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.Payment), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_FinApplyInstance_Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.Payment), "FinApplyInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.FinApplyInstance), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_FinApprovalRecord_FinApplyInstance", "FinApplyInstance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.FinApplyInstance), "FinApprovalRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.FinApprovalRecord), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupGeneral_GroupByGroup", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.GroupByGroup), "GroupGeneral", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupGeneral), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupSheYing_GroupByGroup", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.GroupByGroup), "GroupSheYing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupSheYing), true)]
[assembly: EdmRelationshipAttribute("DSHOrderManagementModel", "FK_GroupLvYou_GroupByGroup", "GroupByGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSHOrder.Entity.GroupByGroup), "GroupLvYou", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSHOrder.Entity.GroupLvYou), true)]

#endregion

namespace DSHOrder.Entity
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class DSHOrderManagementEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“DSHOrderManagementEntities”部分中的连接字符串初始化新 DSHOrderManagementEntities 对象。
        /// </summary>
        public DSHOrderManagementEntities() : base("name=DSHOrderManagementEntities", "DSHOrderManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 DSHOrderManagementEntities 对象。
        /// </summary>
        public DSHOrderManagementEntities(string connectionString) : base(connectionString, "DSHOrderManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 DSHOrderManagementEntities 对象。
        /// </summary>
        public DSHOrderManagementEntities(EntityConnection connection) : base(connection, "DSHOrderManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CodeTable> CodeTable
        {
            get
            {
                if ((_CodeTable == null))
                {
                    _CodeTable = base.CreateObjectSet<CodeTable>("CodeTable");
                }
                return _CodeTable;
            }
        }
        private ObjectSet<CodeTable> _CodeTable;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CodeType> CodeType
        {
            get
            {
                if ((_CodeType == null))
                {
                    _CodeType = base.CreateObjectSet<CodeType>("CodeType");
                }
                return _CodeType;
            }
        }
        private ObjectSet<CodeType> _CodeType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Department> Department
        {
            get
            {
                if ((_Department == null))
                {
                    _Department = base.CreateObjectSet<Department>("Department");
                }
                return _Department;
            }
        }
        private ObjectSet<Department> _Department;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<District> District
        {
            get
            {
                if ((_District == null))
                {
                    _District = base.CreateObjectSet<District>("District");
                }
                return _District;
            }
        }
        private ObjectSet<District> _District;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FinApprovalRecord> FinApprovalRecord
        {
            get
            {
                if ((_FinApprovalRecord == null))
                {
                    _FinApprovalRecord = base.CreateObjectSet<FinApprovalRecord>("FinApprovalRecord");
                }
                return _FinApprovalRecord;
            }
        }
        private ObjectSet<FinApprovalRecord> _FinApprovalRecord;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Function> Function
        {
            get
            {
                if ((_Function == null))
                {
                    _Function = base.CreateObjectSet<Function>("Function");
                }
                return _Function;
            }
        }
        private ObjectSet<Function> _Function;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupByCity> GroupByCity
        {
            get
            {
                if ((_GroupByCity == null))
                {
                    _GroupByCity = base.CreateObjectSet<GroupByCity>("GroupByCity");
                }
                return _GroupByCity;
            }
        }
        private ObjectSet<GroupByCity> _GroupByCity;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupByGroup> GroupByGroup
        {
            get
            {
                if ((_GroupByGroup == null))
                {
                    _GroupByGroup = base.CreateObjectSet<GroupByGroup>("GroupByGroup");
                }
                return _GroupByGroup;
            }
        }
        private ObjectSet<GroupByGroup> _GroupByGroup;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupByItem> GroupByItem
        {
            get
            {
                if ((_GroupByItem == null))
                {
                    _GroupByItem = base.CreateObjectSet<GroupByItem>("GroupByItem");
                }
                return _GroupByItem;
            }
        }
        private ObjectSet<GroupByItem> _GroupByItem;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupByPortal> GroupByPortal
        {
            get
            {
                if ((_GroupByPortal == null))
                {
                    _GroupByPortal = base.CreateObjectSet<GroupByPortal>("GroupByPortal");
                }
                return _GroupByPortal;
            }
        }
        private ObjectSet<GroupByPortal> _GroupByPortal;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupBySales> GroupBySales
        {
            get
            {
                if ((_GroupBySales == null))
                {
                    _GroupBySales = base.CreateObjectSet<GroupBySales>("GroupBySales");
                }
                return _GroupBySales;
            }
        }
        private ObjectSet<GroupBySales> _GroupBySales;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Industry> Industry
        {
            get
            {
                if ((_Industry == null))
                {
                    _Industry = base.CreateObjectSet<Industry>("Industry");
                }
                return _Industry;
            }
        }
        private ObjectSet<Industry> _Industry;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<LogisticsInfo> LogisticsInfo
        {
            get
            {
                if ((_LogisticsInfo == null))
                {
                    _LogisticsInfo = base.CreateObjectSet<LogisticsInfo>("LogisticsInfo");
                }
                return _LogisticsInfo;
            }
        }
        private ObjectSet<LogisticsInfo> _LogisticsInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderDetail> OrderDetail
        {
            get
            {
                if ((_OrderDetail == null))
                {
                    _OrderDetail = base.CreateObjectSet<OrderDetail>("OrderDetail");
                }
                return _OrderDetail;
            }
        }
        private ObjectSet<OrderDetail> _OrderDetail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Payment> Payment
        {
            get
            {
                if ((_Payment == null))
                {
                    _Payment = base.CreateObjectSet<Payment>("Payment");
                }
                return _Payment;
            }
        }
        private ObjectSet<Payment> _Payment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PhoneFeeInfo> PhoneFeeInfo
        {
            get
            {
                if ((_PhoneFeeInfo == null))
                {
                    _PhoneFeeInfo = base.CreateObjectSet<PhoneFeeInfo>("PhoneFeeInfo");
                }
                return _PhoneFeeInfo;
            }
        }
        private ObjectSet<PhoneFeeInfo> _PhoneFeeInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Privilege> Privilege
        {
            get
            {
                if ((_Privilege == null))
                {
                    _Privilege = base.CreateObjectSet<Privilege>("Privilege");
                }
                return _Privilege;
            }
        }
        private ObjectSet<Privilege> _Privilege;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SubIndustry> SubIndustry
        {
            get
            {
                if ((_SubIndustry == null))
                {
                    _SubIndustry = base.CreateObjectSet<SubIndustry>("SubIndustry");
                }
                return _SubIndustry;
            }
        }
        private ObjectSet<SubIndustry> _SubIndustry;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SystemParam> SystemParam
        {
            get
            {
                if ((_SystemParam == null))
                {
                    _SystemParam = base.CreateObjectSet<SystemParam>("SystemParam");
                }
                return _SystemParam;
            }
        }
        private ObjectSet<SystemParam> _SystemParam;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserDepartment> UserDepartment
        {
            get
            {
                if ((_UserDepartment == null))
                {
                    _UserDepartment = base.CreateObjectSet<UserDepartment>("UserDepartment");
                }
                return _UserDepartment;
            }
        }
        private ObjectSet<UserDepartment> _UserDepartment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserRole> UserRole
        {
            get
            {
                if ((_UserRole == null))
                {
                    _UserRole = base.CreateObjectSet<UserRole>("UserRole");
                }
                return _UserRole;
            }
        }
        private ObjectSet<UserRole> _UserRole;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ApproveRecordGroupBy> ApproveRecordGroupBy
        {
            get
            {
                if ((_ApproveRecordGroupBy == null))
                {
                    _ApproveRecordGroupBy = base.CreateObjectSet<ApproveRecordGroupBy>("ApproveRecordGroupBy");
                }
                return _ApproveRecordGroupBy;
            }
        }
        private ObjectSet<ApproveRecordGroupBy> _ApproveRecordGroupBy;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupDRDWuLiu> GroupDRDWuLiu
        {
            get
            {
                if ((_GroupDRDWuLiu == null))
                {
                    _GroupDRDWuLiu = base.CreateObjectSet<GroupDRDWuLiu>("GroupDRDWuLiu");
                }
                return _GroupDRDWuLiu;
            }
        }
        private ObjectSet<GroupDRDWuLiu> _GroupDRDWuLiu;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UploadFile> UploadFile
        {
            get
            {
                if ((_UploadFile == null))
                {
                    _UploadFile = base.CreateObjectSet<UploadFile>("UploadFile");
                }
                return _UploadFile;
            }
        }
        private ObjectSet<UploadFile> _UploadFile;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FinApplyInstance> FinApplyInstance
        {
            get
            {
                if ((_FinApplyInstance == null))
                {
                    _FinApplyInstance = base.CreateObjectSet<FinApplyInstance>("FinApplyInstance");
                }
                return _FinApplyInstance;
            }
        }
        private ObjectSet<FinApplyInstance> _FinApplyInstance;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupGeneral> GroupGeneral
        {
            get
            {
                if ((_GroupGeneral == null))
                {
                    _GroupGeneral = base.CreateObjectSet<GroupGeneral>("GroupGeneral");
                }
                return _GroupGeneral;
            }
        }
        private ObjectSet<GroupGeneral> _GroupGeneral;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupSheYing> GroupSheYing
        {
            get
            {
                if ((_GroupSheYing == null))
                {
                    _GroupSheYing = base.CreateObjectSet<GroupSheYing>("GroupSheYing");
                }
                return _GroupSheYing;
            }
        }
        private ObjectSet<GroupSheYing> _GroupSheYing;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GroupLvYou> GroupLvYou
        {
            get
            {
                if ((_GroupLvYou == null))
                {
                    _GroupLvYou = base.CreateObjectSet<GroupLvYou>("GroupLvYou");
                }
                return _GroupLvYou;
            }
        }
        private ObjectSet<GroupLvYou> _GroupLvYou;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 City EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// 用于向 CodeTable EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCodeTable(CodeTable codeTable)
        {
            base.AddObject("CodeTable", codeTable);
        }
    
        /// <summary>
        /// 用于向 CodeType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCodeType(CodeType codeType)
        {
            base.AddObject("CodeType", codeType);
        }
    
        /// <summary>
        /// 用于向 Customer EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// 用于向 Department EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDepartment(Department department)
        {
            base.AddObject("Department", department);
        }
    
        /// <summary>
        /// 用于向 District EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDistrict(District district)
        {
            base.AddObject("District", district);
        }
    
        /// <summary>
        /// 用于向 FinApprovalRecord EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFinApprovalRecord(FinApprovalRecord finApprovalRecord)
        {
            base.AddObject("FinApprovalRecord", finApprovalRecord);
        }
    
        /// <summary>
        /// 用于向 Function EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFunction(Function function)
        {
            base.AddObject("Function", function);
        }
    
        /// <summary>
        /// 用于向 GroupByCity EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupByCity(GroupByCity groupByCity)
        {
            base.AddObject("GroupByCity", groupByCity);
        }
    
        /// <summary>
        /// 用于向 GroupByGroup EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupByGroup(GroupByGroup groupByGroup)
        {
            base.AddObject("GroupByGroup", groupByGroup);
        }
    
        /// <summary>
        /// 用于向 GroupByItem EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupByItem(GroupByItem groupByItem)
        {
            base.AddObject("GroupByItem", groupByItem);
        }
    
        /// <summary>
        /// 用于向 GroupByPortal EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupByPortal(GroupByPortal groupByPortal)
        {
            base.AddObject("GroupByPortal", groupByPortal);
        }
    
        /// <summary>
        /// 用于向 GroupBySales EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupBySales(GroupBySales groupBySales)
        {
            base.AddObject("GroupBySales", groupBySales);
        }
    
        /// <summary>
        /// 用于向 Industry EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToIndustry(Industry industry)
        {
            base.AddObject("Industry", industry);
        }
    
        /// <summary>
        /// 用于向 LogisticsInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLogisticsInfo(LogisticsInfo logisticsInfo)
        {
            base.AddObject("LogisticsInfo", logisticsInfo);
        }
    
        /// <summary>
        /// 用于向 OrderDetail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderDetail(OrderDetail orderDetail)
        {
            base.AddObject("OrderDetail", orderDetail);
        }
    
        /// <summary>
        /// 用于向 Payment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPayment(Payment payment)
        {
            base.AddObject("Payment", payment);
        }
    
        /// <summary>
        /// 用于向 PhoneFeeInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPhoneFeeInfo(PhoneFeeInfo phoneFeeInfo)
        {
            base.AddObject("PhoneFeeInfo", phoneFeeInfo);
        }
    
        /// <summary>
        /// 用于向 Privilege EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPrivilege(Privilege privilege)
        {
            base.AddObject("Privilege", privilege);
        }
    
        /// <summary>
        /// 用于向 Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// 用于向 SubIndustry EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSubIndustry(SubIndustry subIndustry)
        {
            base.AddObject("SubIndustry", subIndustry);
        }
    
        /// <summary>
        /// 用于向 SystemParam EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSystemParam(SystemParam systemParam)
        {
            base.AddObject("SystemParam", systemParam);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// 用于向 UserDepartment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserDepartment(UserDepartment userDepartment)
        {
            base.AddObject("UserDepartment", userDepartment);
        }
    
        /// <summary>
        /// 用于向 UserRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserRole(UserRole userRole)
        {
            base.AddObject("UserRole", userRole);
        }
    
        /// <summary>
        /// 用于向 ApproveRecordGroupBy EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToApproveRecordGroupBy(ApproveRecordGroupBy approveRecordGroupBy)
        {
            base.AddObject("ApproveRecordGroupBy", approveRecordGroupBy);
        }
    
        /// <summary>
        /// 用于向 GroupDRDWuLiu EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupDRDWuLiu(GroupDRDWuLiu groupDRDWuLiu)
        {
            base.AddObject("GroupDRDWuLiu", groupDRDWuLiu);
        }
    
        /// <summary>
        /// 用于向 UploadFile EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUploadFile(UploadFile uploadFile)
        {
            base.AddObject("UploadFile", uploadFile);
        }
    
        /// <summary>
        /// 用于向 FinApplyInstance EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFinApplyInstance(FinApplyInstance finApplyInstance)
        {
            base.AddObject("FinApplyInstance", finApplyInstance);
        }
    
        /// <summary>
        /// 用于向 GroupGeneral EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupGeneral(GroupGeneral groupGeneral)
        {
            base.AddObject("GroupGeneral", groupGeneral);
        }
    
        /// <summary>
        /// 用于向 GroupSheYing EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupSheYing(GroupSheYing groupSheYing)
        {
            base.AddObject("GroupSheYing", groupSheYing);
        }
    
        /// <summary>
        /// 用于向 GroupLvYou EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroupLvYou(GroupLvYou groupLvYou)
        {
            base.AddObject("GroupLvYou", groupLvYou);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="ApproveRecordGroupBy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApproveRecordGroupBy : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ApproveRecordGroupBy 对象。
        /// </summary>
        /// <param name="approveRecordGroupByID">ApproveRecordGroupByID 属性的初始值。</param>
        /// <param name="groupByGroupID">GroupByGroupID 属性的初始值。</param>
        /// <param name="groupByGroupName">GroupByGroupName 属性的初始值。</param>
        public static ApproveRecordGroupBy CreateApproveRecordGroupBy(global::System.Int32 approveRecordGroupByID, global::System.Int32 groupByGroupID, global::System.String groupByGroupName)
        {
            ApproveRecordGroupBy approveRecordGroupBy = new ApproveRecordGroupBy();
            approveRecordGroupBy.ApproveRecordGroupByID = approveRecordGroupByID;
            approveRecordGroupBy.GroupByGroupID = groupByGroupID;
            approveRecordGroupBy.GroupByGroupName = groupByGroupName;
            return approveRecordGroupBy;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApproveRecordGroupByID
        {
            get
            {
                return _ApproveRecordGroupByID;
            }
            set
            {
                if (_ApproveRecordGroupByID != value)
                {
                    OnApproveRecordGroupByIDChanging(value);
                    ReportPropertyChanging("ApproveRecordGroupByID");
                    _ApproveRecordGroupByID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApproveRecordGroupByID");
                    OnApproveRecordGroupByIDChanged();
                }
            }
        }
        private global::System.Int32 _ApproveRecordGroupByID;
        partial void OnApproveRecordGroupByIDChanging(global::System.Int32 value);
        partial void OnApproveRecordGroupByIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(global::System.Int32 value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupByGroupName
        {
            get
            {
                return _GroupByGroupName;
            }
            set
            {
                OnGroupByGroupNameChanging(value);
                ReportPropertyChanging("GroupByGroupName");
                _GroupByGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupByGroupName");
                OnGroupByGroupNameChanged();
            }
        }
        private global::System.String _GroupByGroupName;
        partial void OnGroupByGroupNameChanging(global::System.String value);
        partial void OnGroupByGroupNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByPortalID
        {
            get
            {
                return _GroupByPortalID;
            }
            set
            {
                OnGroupByPortalIDChanging(value);
                ReportPropertyChanging("GroupByPortalID");
                _GroupByPortalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByPortalID");
                OnGroupByPortalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByPortalID;
        partial void OnGroupByPortalIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByPortalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortalName
        {
            get
            {
                return _PortalName;
            }
            set
            {
                OnPortalNameChanging(value);
                ReportPropertyChanging("PortalName");
                _PortalName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortalName");
                OnPortalNameChanged();
            }
        }
        private global::System.String _PortalName;
        partial void OnPortalNameChanging(global::System.String value);
        partial void OnPortalNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeCode
        {
            get
            {
                return _NodeCode;
            }
            set
            {
                OnNodeCodeChanging(value);
                ReportPropertyChanging("NodeCode");
                _NodeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeCode");
                OnNodeCodeChanged();
            }
        }
        private global::System.String _NodeCode;
        partial void OnNodeCodeChanging(global::System.String value);
        partial void OnNodeCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NodeName
        {
            get
            {
                return _NodeName;
            }
            set
            {
                OnNodeNameChanging(value);
                ReportPropertyChanging("NodeName");
                _NodeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NodeName");
                OnNodeNameChanged();
            }
        }
        private global::System.String _NodeName;
        partial void OnNodeNameChanging(global::System.String value);
        partial void OnNodeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HandleUserID
        {
            get
            {
                return _HandleUserID;
            }
            set
            {
                OnHandleUserIDChanging(value);
                ReportPropertyChanging("HandleUserID");
                _HandleUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HandleUserID");
                OnHandleUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HandleUserID;
        partial void OnHandleUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnHandleUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HandleUserName
        {
            get
            {
                return _HandleUserName;
            }
            set
            {
                OnHandleUserNameChanging(value);
                ReportPropertyChanging("HandleUserName");
                _HandleUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HandleUserName");
                OnHandleUserNameChanged();
            }
        }
        private global::System.String _HandleUserName;
        partial void OnHandleUserNameChanging(global::System.String value);
        partial void OnHandleUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HandleTime
        {
            get
            {
                return _HandleTime;
            }
            set
            {
                OnHandleTimeChanging(value);
                ReportPropertyChanging("HandleTime");
                _HandleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HandleTime");
                OnHandleTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _HandleTime;
        partial void OnHandleTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnHandleTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveResult
        {
            get
            {
                return _ApproveResult;
            }
            set
            {
                OnApproveResultChanging(value);
                ReportPropertyChanging("ApproveResult");
                _ApproveResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveResult");
                OnApproveResultChanged();
            }
        }
        private global::System.String _ApproveResult;
        partial void OnApproveResultChanging(global::System.String value);
        partial void OnApproveResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveMemo
        {
            get
            {
                return _ApproveMemo;
            }
            set
            {
                OnApproveMemoChanging(value);
                ReportPropertyChanging("ApproveMemo");
                _ApproveMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveMemo");
                OnApproveMemoChanged();
            }
        }
        private global::System.String _ApproveMemo;
        partial void OnApproveMemoChanging(global::System.String value);
        partial void OnApproveMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveMemoMore
        {
            get
            {
                return _ApproveMemoMore;
            }
            set
            {
                OnApproveMemoMoreChanging(value);
                ReportPropertyChanging("ApproveMemoMore");
                _ApproveMemoMore = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveMemoMore");
                OnApproveMemoMoreChanged();
            }
        }
        private global::System.String _ApproveMemoMore;
        partial void OnApproveMemoMoreChanging(global::System.String value);
        partial void OnApproveMemoMoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeleteInd;
        partial void OnDeleteIndChanging(Nullable<global::System.Boolean> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_ApproveRecordGroupBy_GroupByGroup", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByGroup", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByGroup", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByGroup", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByGroup", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_ApproveRecordGroupBy_GroupByPortal", "GroupByPortal")]
        public GroupByPortal GroupByPortal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByPortal", "GroupByPortal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByPortal", "GroupByPortal").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByPortal> GroupByPortalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByPortal", "GroupByPortal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByPortal", "GroupByPortal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 City 对象。
        /// </summary>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static City CreateCity(global::System.Int32 cityID)
        {
            City city = new City();
            city.CityID = cityID;
            return city;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_CUSTOMER_REFERENCE_CITY", "Customer")]
        public EntityCollection<Customer> Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_CITY", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_CITY", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_DISTRICT_REFERENCE_CITY", "District")]
        public EntityCollection<District> District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<District>("DSHOrderManagementModel.FK_DISTRICT_REFERENCE_CITY", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<District>("DSHOrderManagementModel.FK_DISTRICT_REFERENCE_CITY", "District", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GROUPBYC_REFERENCE_CITY", "GroupByCity")]
        public EntityCollection<GroupByCity> GroupByCity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByCity>("DSHOrderManagementModel.FK_GROUPBYC_REFERENCE_CITY", "GroupByCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByCity>("DSHOrderManagementModel.FK_GROUPBYC_REFERENCE_CITY", "GroupByCity", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_User_City", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DSHOrderManagementModel.FK_User_City", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DSHOrderManagementModel.FK_User_City", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_City", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_City", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_City", "GroupByGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="CodeTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CodeTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CodeTable 对象。
        /// </summary>
        /// <param name="codeID">CodeID 属性的初始值。</param>
        /// <param name="codeValue">CodeValue 属性的初始值。</param>
        public static CodeTable CreateCodeTable(global::System.Int32 codeID, global::System.String codeValue)
        {
            CodeTable codeTable = new CodeTable();
            codeTable.CodeID = codeID;
            codeTable.CodeValue = codeValue;
            return codeTable;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeID
        {
            get
            {
                return _CodeID;
            }
            set
            {
                if (_CodeID != value)
                {
                    OnCodeIDChanging(value);
                    ReportPropertyChanging("CodeID");
                    _CodeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CodeID");
                    OnCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _CodeID;
        partial void OnCodeIDChanging(global::System.Int32 value);
        partial void OnCodeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CodeTypeID
        {
            get
            {
                return _CodeTypeID;
            }
            set
            {
                OnCodeTypeIDChanging(value);
                ReportPropertyChanging("CodeTypeID");
                _CodeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CodeTypeID");
                OnCodeTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CodeTypeID;
        partial void OnCodeTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCodeTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CodeValue
        {
            get
            {
                return _CodeValue;
            }
            set
            {
                OnCodeValueChanging(value);
                ReportPropertyChanging("CodeValue");
                _CodeValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CodeValue");
                OnCodeValueChanged();
            }
        }
        private global::System.String _CodeValue;
        partial void OnCodeValueChanging(global::System.String value);
        partial void OnCodeValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeDesc
        {
            get
            {
                return _CodeDesc;
            }
            set
            {
                OnCodeDescChanging(value);
                ReportPropertyChanging("CodeDesc");
                _CodeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeDesc");
                OnCodeDescChanged();
            }
        }
        private global::System.String _CodeDesc;
        partial void OnCodeDescChanging(global::System.String value);
        partial void OnCodeDescChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_CODETABL_REFERENCE_CODETYPE", "CodeType")]
        public CodeType CodeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CodeType>("DSHOrderManagementModel.FK_CODETABL_REFERENCE_CODETYPE", "CodeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CodeType>("DSHOrderManagementModel.FK_CODETABL_REFERENCE_CODETYPE", "CodeType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CodeType> CodeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CodeType>("DSHOrderManagementModel.FK_CODETABL_REFERENCE_CODETYPE", "CodeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CodeType>("DSHOrderManagementModel.FK_CODETABL_REFERENCE_CODETYPE", "CodeType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="CodeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CodeType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CodeType 对象。
        /// </summary>
        /// <param name="codeTypeID">CodeTypeID 属性的初始值。</param>
        public static CodeType CreateCodeType(global::System.Int32 codeTypeID)
        {
            CodeType codeType = new CodeType();
            codeType.CodeTypeID = codeTypeID;
            return codeType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CodeTypeID
        {
            get
            {
                return _CodeTypeID;
            }
            set
            {
                if (_CodeTypeID != value)
                {
                    OnCodeTypeIDChanging(value);
                    ReportPropertyChanging("CodeTypeID");
                    _CodeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CodeTypeID");
                    OnCodeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CodeTypeID;
        partial void OnCodeTypeIDChanging(global::System.Int32 value);
        partial void OnCodeTypeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeTypeName
        {
            get
            {
                return _CodeTypeName;
            }
            set
            {
                OnCodeTypeNameChanging(value);
                ReportPropertyChanging("CodeTypeName");
                _CodeTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeTypeName");
                OnCodeTypeNameChanged();
            }
        }
        private global::System.String _CodeTypeName;
        partial void OnCodeTypeNameChanging(global::System.String value);
        partial void OnCodeTypeNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_CODETABL_REFERENCE_CODETYPE", "CodeTable")]
        public EntityCollection<CodeTable> CodeTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CodeTable>("DSHOrderManagementModel.FK_CODETABL_REFERENCE_CODETYPE", "CodeTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CodeTable>("DSHOrderManagementModel.FK_CODETABL_REFERENCE_CODETYPE", "CodeTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Customer 对象。
        /// </summary>
        /// <param name="customerID">CustomerID 属性的初始值。</param>
        public static Customer CreateCustomer(global::System.Int32 customerID)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            return customer;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DistrictID;
        partial void OnDistrictIDChanging(Nullable<global::System.Int32> value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccount
        {
            get
            {
                return _BankAccount;
            }
            set
            {
                OnBankAccountChanging(value);
                ReportPropertyChanging("BankAccount");
                _BankAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccount");
                OnBankAccountChanged();
            }
        }
        private global::System.String _BankAccount;
        partial void OnBankAccountChanging(global::System.String value);
        partial void OnBankAccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankReceiver
        {
            get
            {
                return _BankReceiver;
            }
            set
            {
                OnBankReceiverChanging(value);
                ReportPropertyChanging("BankReceiver");
                _BankReceiver = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankReceiver");
                OnBankReceiverChanged();
            }
        }
        private global::System.String _BankReceiver;
        partial void OnBankReceiverChanging(global::System.String value);
        partial void OnBankReceiverChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPhoneNo
        {
            get
            {
                return _ContactPhoneNo;
            }
            set
            {
                OnContactPhoneNoChanging(value);
                ReportPropertyChanging("ContactPhoneNo");
                _ContactPhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPhoneNo");
                OnContactPhoneNoChanged();
            }
        }
        private global::System.String _ContactPhoneNo;
        partial void OnContactPhoneNoChanging(global::System.String value);
        partial void OnContactPhoneNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CutoffInd
        {
            get
            {
                return _CutoffInd;
            }
            set
            {
                OnCutoffIndChanging(value);
                ReportPropertyChanging("CutoffInd");
                _CutoffInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CutoffInd");
                OnCutoffIndChanged();
            }
        }
        private Nullable<global::System.Int32> _CutoffInd;
        partial void OnCutoffIndChanging(Nullable<global::System.Int32> value);
        partial void OnCutoffIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultPaymentType
        {
            get
            {
                return _DefaultPaymentType;
            }
            set
            {
                OnDefaultPaymentTypeChanging(value);
                ReportPropertyChanging("DefaultPaymentType");
                _DefaultPaymentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultPaymentType");
                OnDefaultPaymentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultPaymentType;
        partial void OnDefaultPaymentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultPaymentTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubIndustryID
        {
            get
            {
                return _SubIndustryID;
            }
            set
            {
                OnSubIndustryIDChanging(value);
                ReportPropertyChanging("SubIndustryID");
                _SubIndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubIndustryID");
                OnSubIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubIndustryID;
        partial void OnSubIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubIndustryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageDesignContact
        {
            get
            {
                return _PageDesignContact;
            }
            set
            {
                OnPageDesignContactChanging(value);
                ReportPropertyChanging("PageDesignContact");
                _PageDesignContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageDesignContact");
                OnPageDesignContactChanged();
            }
        }
        private global::System.String _PageDesignContact;
        partial void OnPageDesignContactChanging(global::System.String value);
        partial void OnPageDesignContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageDesignPhone
        {
            get
            {
                return _PageDesignPhone;
            }
            set
            {
                OnPageDesignPhoneChanging(value);
                ReportPropertyChanging("PageDesignPhone");
                _PageDesignPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageDesignPhone");
                OnPageDesignPhoneChanged();
            }
        }
        private global::System.String _PageDesignPhone;
        partial void OnPageDesignPhoneChanging(global::System.String value);
        partial void OnPageDesignPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageDesignEmail
        {
            get
            {
                return _PageDesignEmail;
            }
            set
            {
                OnPageDesignEmailChanging(value);
                ReportPropertyChanging("PageDesignEmail");
                _PageDesignEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageDesignEmail");
                OnPageDesignEmailChanged();
            }
        }
        private global::System.String _PageDesignEmail;
        partial void OnPageDesignEmailChanging(global::System.String value);
        partial void OnPageDesignEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageDesignQQ
        {
            get
            {
                return _PageDesignQQ;
            }
            set
            {
                OnPageDesignQQChanging(value);
                ReportPropertyChanging("PageDesignQQ");
                _PageDesignQQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageDesignQQ");
                OnPageDesignQQChanged();
            }
        }
        private global::System.String _PageDesignQQ;
        partial void OnPageDesignQQChanging(global::System.String value);
        partial void OnPageDesignQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageDesignMobile
        {
            get
            {
                return _PageDesignMobile;
            }
            set
            {
                OnPageDesignMobileChanging(value);
                ReportPropertyChanging("PageDesignMobile");
                _PageDesignMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageDesignMobile");
                OnPageDesignMobileChanged();
            }
        }
        private global::System.String _PageDesignMobile;
        partial void OnPageDesignMobileChanging(global::System.String value);
        partial void OnPageDesignMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageExecuteContact
        {
            get
            {
                return _PageExecuteContact;
            }
            set
            {
                OnPageExecuteContactChanging(value);
                ReportPropertyChanging("PageExecuteContact");
                _PageExecuteContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageExecuteContact");
                OnPageExecuteContactChanged();
            }
        }
        private global::System.String _PageExecuteContact;
        partial void OnPageExecuteContactChanging(global::System.String value);
        partial void OnPageExecuteContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageExecutePhone
        {
            get
            {
                return _PageExecutePhone;
            }
            set
            {
                OnPageExecutePhoneChanging(value);
                ReportPropertyChanging("PageExecutePhone");
                _PageExecutePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageExecutePhone");
                OnPageExecutePhoneChanged();
            }
        }
        private global::System.String _PageExecutePhone;
        partial void OnPageExecutePhoneChanging(global::System.String value);
        partial void OnPageExecutePhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageExecuteEmail
        {
            get
            {
                return _PageExecuteEmail;
            }
            set
            {
                OnPageExecuteEmailChanging(value);
                ReportPropertyChanging("PageExecuteEmail");
                _PageExecuteEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageExecuteEmail");
                OnPageExecuteEmailChanged();
            }
        }
        private global::System.String _PageExecuteEmail;
        partial void OnPageExecuteEmailChanging(global::System.String value);
        partial void OnPageExecuteEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageExecuteQQ
        {
            get
            {
                return _PageExecuteQQ;
            }
            set
            {
                OnPageExecuteQQChanging(value);
                ReportPropertyChanging("PageExecuteQQ");
                _PageExecuteQQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageExecuteQQ");
                OnPageExecuteQQChanged();
            }
        }
        private global::System.String _PageExecuteQQ;
        partial void OnPageExecuteQQChanging(global::System.String value);
        partial void OnPageExecuteQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PageExecuteMobile
        {
            get
            {
                return _PageExecuteMobile;
            }
            set
            {
                OnPageExecuteMobileChanging(value);
                ReportPropertyChanging("PageExecuteMobile");
                _PageExecuteMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PageExecuteMobile");
                OnPageExecuteMobileChanged();
            }
        }
        private global::System.String _PageExecuteMobile;
        partial void OnPageExecuteMobileChanging(global::System.String value);
        partial void OnPageExecuteMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplaintHandlingContact
        {
            get
            {
                return _ComplaintHandlingContact;
            }
            set
            {
                OnComplaintHandlingContactChanging(value);
                ReportPropertyChanging("ComplaintHandlingContact");
                _ComplaintHandlingContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ComplaintHandlingContact");
                OnComplaintHandlingContactChanged();
            }
        }
        private global::System.String _ComplaintHandlingContact;
        partial void OnComplaintHandlingContactChanging(global::System.String value);
        partial void OnComplaintHandlingContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplaintHandlingPhone
        {
            get
            {
                return _ComplaintHandlingPhone;
            }
            set
            {
                OnComplaintHandlingPhoneChanging(value);
                ReportPropertyChanging("ComplaintHandlingPhone");
                _ComplaintHandlingPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ComplaintHandlingPhone");
                OnComplaintHandlingPhoneChanged();
            }
        }
        private global::System.String _ComplaintHandlingPhone;
        partial void OnComplaintHandlingPhoneChanging(global::System.String value);
        partial void OnComplaintHandlingPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplaintHandlingEmail
        {
            get
            {
                return _ComplaintHandlingEmail;
            }
            set
            {
                OnComplaintHandlingEmailChanging(value);
                ReportPropertyChanging("ComplaintHandlingEmail");
                _ComplaintHandlingEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ComplaintHandlingEmail");
                OnComplaintHandlingEmailChanged();
            }
        }
        private global::System.String _ComplaintHandlingEmail;
        partial void OnComplaintHandlingEmailChanging(global::System.String value);
        partial void OnComplaintHandlingEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplaintHandlingQQ
        {
            get
            {
                return _ComplaintHandlingQQ;
            }
            set
            {
                OnComplaintHandlingQQChanging(value);
                ReportPropertyChanging("ComplaintHandlingQQ");
                _ComplaintHandlingQQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ComplaintHandlingQQ");
                OnComplaintHandlingQQChanged();
            }
        }
        private global::System.String _ComplaintHandlingQQ;
        partial void OnComplaintHandlingQQChanging(global::System.String value);
        partial void OnComplaintHandlingQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ComplaintHandlingMobile
        {
            get
            {
                return _ComplaintHandlingMobile;
            }
            set
            {
                OnComplaintHandlingMobileChanging(value);
                ReportPropertyChanging("ComplaintHandlingMobile");
                _ComplaintHandlingMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ComplaintHandlingMobile");
                OnComplaintHandlingMobileChanged();
            }
        }
        private global::System.String _ComplaintHandlingMobile;
        partial void OnComplaintHandlingMobileChanging(global::System.String value);
        partial void OnComplaintHandlingMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FinancialContact
        {
            get
            {
                return _FinancialContact;
            }
            set
            {
                OnFinancialContactChanging(value);
                ReportPropertyChanging("FinancialContact");
                _FinancialContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FinancialContact");
                OnFinancialContactChanged();
            }
        }
        private global::System.String _FinancialContact;
        partial void OnFinancialContactChanging(global::System.String value);
        partial void OnFinancialContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FinancialPhone
        {
            get
            {
                return _FinancialPhone;
            }
            set
            {
                OnFinancialPhoneChanging(value);
                ReportPropertyChanging("FinancialPhone");
                _FinancialPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FinancialPhone");
                OnFinancialPhoneChanged();
            }
        }
        private global::System.String _FinancialPhone;
        partial void OnFinancialPhoneChanging(global::System.String value);
        partial void OnFinancialPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FinancialEmail
        {
            get
            {
                return _FinancialEmail;
            }
            set
            {
                OnFinancialEmailChanging(value);
                ReportPropertyChanging("FinancialEmail");
                _FinancialEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FinancialEmail");
                OnFinancialEmailChanged();
            }
        }
        private global::System.String _FinancialEmail;
        partial void OnFinancialEmailChanging(global::System.String value);
        partial void OnFinancialEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FinancialQQ
        {
            get
            {
                return _FinancialQQ;
            }
            set
            {
                OnFinancialQQChanging(value);
                ReportPropertyChanging("FinancialQQ");
                _FinancialQQ = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FinancialQQ");
                OnFinancialQQChanged();
            }
        }
        private global::System.String _FinancialQQ;
        partial void OnFinancialQQChanging(global::System.String value);
        partial void OnFinancialQQChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FinancialMobile
        {
            get
            {
                return _FinancialMobile;
            }
            set
            {
                OnFinancialMobileChanging(value);
                ReportPropertyChanging("FinancialMobile");
                _FinancialMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FinancialMobile");
                OnFinancialMobileChanged();
            }
        }
        private global::System.String _FinancialMobile;
        partial void OnFinancialMobileChanging(global::System.String value);
        partial void OnFinancialMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessLisenceImg
        {
            get
            {
                return _BusinessLisenceImg;
            }
            set
            {
                OnBusinessLisenceImgChanging(value);
                ReportPropertyChanging("BusinessLisenceImg");
                _BusinessLisenceImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessLisenceImg");
                OnBusinessLisenceImgChanged();
            }
        }
        private global::System.String _BusinessLisenceImg;
        partial void OnBusinessLisenceImgChanging(global::System.String value);
        partial void OnBusinessLisenceImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxRegisterCertificateImg
        {
            get
            {
                return _TaxRegisterCertificateImg;
            }
            set
            {
                OnTaxRegisterCertificateImgChanging(value);
                ReportPropertyChanging("TaxRegisterCertificateImg");
                _TaxRegisterCertificateImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxRegisterCertificateImg");
                OnTaxRegisterCertificateImgChanged();
            }
        }
        private global::System.String _TaxRegisterCertificateImg;
        partial void OnTaxRegisterCertificateImgChanging(global::System.String value);
        partial void OnTaxRegisterCertificateImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HealthPermitImg
        {
            get
            {
                return _HealthPermitImg;
            }
            set
            {
                OnHealthPermitImgChanging(value);
                ReportPropertyChanging("HealthPermitImg");
                _HealthPermitImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HealthPermitImg");
                OnHealthPermitImgChanged();
            }
        }
        private global::System.String _HealthPermitImg;
        partial void OnHealthPermitImgChanging(global::System.String value);
        partial void OnHealthPermitImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LisenceImg
        {
            get
            {
                return _LisenceImg;
            }
            set
            {
                OnLisenceImgChanging(value);
                ReportPropertyChanging("LisenceImg");
                _LisenceImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LisenceImg");
                OnLisenceImgChanged();
            }
        }
        private global::System.String _LisenceImg;
        partial void OnLisenceImgChanging(global::System.String value);
        partial void OnLisenceImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherProfQualificationImg
        {
            get
            {
                return _OtherProfQualificationImg;
            }
            set
            {
                OnOtherProfQualificationImgChanging(value);
                ReportPropertyChanging("OtherProfQualificationImg");
                _OtherProfQualificationImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherProfQualificationImg");
                OnOtherProfQualificationImgChanged();
            }
        }
        private global::System.String _OtherProfQualificationImg;
        partial void OnOtherProfQualificationImgChanging(global::System.String value);
        partial void OnOtherProfQualificationImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PowerofAttorneyImg
        {
            get
            {
                return _PowerofAttorneyImg;
            }
            set
            {
                OnPowerofAttorneyImgChanging(value);
                ReportPropertyChanging("PowerofAttorneyImg");
                _PowerofAttorneyImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PowerofAttorneyImg");
                OnPowerofAttorneyImgChanged();
            }
        }
        private global::System.String _PowerofAttorneyImg;
        partial void OnPowerofAttorneyImgChanging(global::System.String value);
        partial void OnPowerofAttorneyImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalEnvImg
        {
            get
            {
                return _ExternalEnvImg;
            }
            set
            {
                OnExternalEnvImgChanging(value);
                ReportPropertyChanging("ExternalEnvImg");
                _ExternalEnvImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalEnvImg");
                OnExternalEnvImgChanged();
            }
        }
        private global::System.String _ExternalEnvImg;
        partial void OnExternalEnvImgChanging(global::System.String value);
        partial void OnExternalEnvImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalEnvImg
        {
            get
            {
                return _InternalEnvImg;
            }
            set
            {
                OnInternalEnvImgChanging(value);
                ReportPropertyChanging("InternalEnvImg");
                _InternalEnvImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalEnvImg");
                OnInternalEnvImgChanged();
            }
        }
        private global::System.String _InternalEnvImg;
        partial void OnInternalEnvImgChanging(global::System.String value);
        partial void OnInternalEnvImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCertified
        {
            get
            {
                return _IsCertified;
            }
            set
            {
                OnIsCertifiedChanging(value);
                ReportPropertyChanging("IsCertified");
                _IsCertified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCertified");
                OnIsCertifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCertified = false;
        partial void OnIsCertifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCertifiedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Evaluation
        {
            get
            {
                return _Evaluation;
            }
            set
            {
                OnEvaluationChanging(value);
                ReportPropertyChanging("Evaluation");
                _Evaluation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Evaluation");
                OnEvaluationChanged();
            }
        }
        private global::System.String _Evaluation;
        partial void OnEvaluationChanging(global::System.String value);
        partial void OnEvaluationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DefaultPaymentDate
        {
            get
            {
                return _DefaultPaymentDate;
            }
            set
            {
                OnDefaultPaymentDateChanging(value);
                ReportPropertyChanging("DefaultPaymentDate");
                _DefaultPaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultPaymentDate");
                OnDefaultPaymentDateChanged();
            }
        }
        private Nullable<global::System.Int32> _DefaultPaymentDate;
        partial void OnDefaultPaymentDateChanging(Nullable<global::System.Int32> value);
        partial void OnDefaultPaymentDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_CUSTOMER_REFERENCE_CITY", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_CITY", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_CITY", "City").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_CITY", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_CITY", "City", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_CUSTOMER_REFERENCE_DISTRICT", "District")]
        public District District
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_DISTRICT", "District").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_DISTRICT", "District").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<District> DistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<District>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_DISTRICT", "District");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<District>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_DISTRICT", "District", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_Customer_SubIndustry", "SubIndustry")]
        public SubIndustry SubIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_Customer_SubIndustry", "SubIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_Customer_SubIndustry", "SubIndustry").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubIndustry> SubIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_Customer_SubIndustry", "SubIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_Customer_SubIndustry", "SubIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_Customer", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_Customer", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_Customer", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_User_Customer", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DSHOrderManagementModel.FK_User_Customer", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DSHOrderManagementModel.FK_User_Customer", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Department 对象。
        /// </summary>
        /// <param name="departmentID">DepartmentID 属性的初始值。</param>
        public static Department CreateDepartment(global::System.Int32 departmentID)
        {
            Department department = new Department();
            department.DepartmentID = departmentID;
            return department;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                if (_DepartmentID != value)
                {
                    OnDepartmentIDChanging(value);
                    ReportPropertyChanging("DepartmentID");
                    _DepartmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentID");
                    OnDepartmentIDChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentManager
        {
            get
            {
                return _DepartmentManager;
            }
            set
            {
                OnDepartmentManagerChanging(value);
                ReportPropertyChanging("DepartmentManager");
                _DepartmentManager = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentManager");
                OnDepartmentManagerChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentManager;
        partial void OnDepartmentManagerChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentManagerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_DEPARTME_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_DEPARTME_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_DEPARTME_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_DEPARTME_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_DEPARTME_REFERENCE_USER", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERDEPA_REFERENCE_DEPARTME", "UserDepartment")]
        public EntityCollection<UserDepartment> UserDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserDepartment>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_DEPARTME", "UserDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserDepartment>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_DEPARTME", "UserDepartment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="District")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class District : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 District 对象。
        /// </summary>
        /// <param name="districtID">DistrictID 属性的初始值。</param>
        public static District CreateDistrict(global::System.Int32 districtID)
        {
            District district = new District();
            district.DistrictID = districtID;
            return district;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                if (_DistrictID != value)
                {
                    OnDistrictIDChanging(value);
                    ReportPropertyChanging("DistrictID");
                    _DistrictID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DistrictID");
                    OnDistrictIDChanged();
                }
            }
        }
        private global::System.Int32 _DistrictID;
        partial void OnDistrictIDChanging(global::System.Int32 value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistrictName
        {
            get
            {
                return _DistrictName;
            }
            set
            {
                OnDistrictNameChanging(value);
                ReportPropertyChanging("DistrictName");
                _DistrictName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistrictName");
                OnDistrictNameChanged();
            }
        }
        private global::System.String _DistrictName;
        partial void OnDistrictNameChanging(global::System.String value);
        partial void OnDistrictNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_DISTRICT_REFERENCE_CITY", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_DISTRICT_REFERENCE_CITY", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_DISTRICT_REFERENCE_CITY", "City").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_DISTRICT_REFERENCE_CITY", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DSHOrderManagementModel.FK_DISTRICT_REFERENCE_CITY", "City", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_CUSTOMER_REFERENCE_DISTRICT", "Customer")]
        public EntityCollection<Customer> Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_DISTRICT", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("DSHOrderManagementModel.FK_CUSTOMER_REFERENCE_DISTRICT", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="FinApplyInstance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinApplyInstance : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FinApplyInstance 对象。
        /// </summary>
        /// <param name="applyID">ApplyID 属性的初始值。</param>
        /// <param name="paymentID">PaymentID 属性的初始值。</param>
        public static FinApplyInstance CreateFinApplyInstance(global::System.Int32 applyID, global::System.Int32 paymentID)
        {
            FinApplyInstance finApplyInstance = new FinApplyInstance();
            finApplyInstance.ApplyID = applyID;
            finApplyInstance.PaymentID = paymentID;
            return finApplyInstance;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplyID
        {
            get
            {
                return _ApplyID;
            }
            set
            {
                if (_ApplyID != value)
                {
                    OnApplyIDChanging(value);
                    ReportPropertyChanging("ApplyID");
                    _ApplyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplyID");
                    OnApplyIDChanged();
                }
            }
        }
        private global::System.Int32 _ApplyID;
        partial void OnApplyIDChanging(global::System.Int32 value);
        partial void OnApplyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentID
        {
            get
            {
                return _PaymentID;
            }
            set
            {
                OnPaymentIDChanging(value);
                ReportPropertyChanging("PaymentID");
                _PaymentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentID");
                OnPaymentIDChanged();
            }
        }
        private global::System.Int32 _PaymentID;
        partial void OnPaymentIDChanging(global::System.Int32 value);
        partial void OnPaymentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Applicant
        {
            get
            {
                return _Applicant;
            }
            set
            {
                OnApplicantChanging(value);
                ReportPropertyChanging("Applicant");
                _Applicant = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Applicant");
                OnApplicantChanged();
            }
        }
        private global::System.String _Applicant;
        partial void OnApplicantChanging(global::System.String value);
        partial void OnApplicantChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApplyDate
        {
            get
            {
                return _ApplyDate;
            }
            set
            {
                OnApplyDateChanging(value);
                ReportPropertyChanging("ApplyDate");
                _ApplyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyDate");
                OnApplyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApplyDate;
        partial void OnApplyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApplyDateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_FinApplyInstance_Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("DSHOrderManagementModel.FK_FinApplyInstance_Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("DSHOrderManagementModel.FK_FinApplyInstance_Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("DSHOrderManagementModel.FK_FinApplyInstance_Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("DSHOrderManagementModel.FK_FinApplyInstance_Payment", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_FinApprovalRecord_FinApplyInstance", "FinApprovalRecord")]
        public EntityCollection<FinApprovalRecord> FinApprovalRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinApprovalRecord>("DSHOrderManagementModel.FK_FinApprovalRecord_FinApplyInstance", "FinApprovalRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinApprovalRecord>("DSHOrderManagementModel.FK_FinApprovalRecord_FinApplyInstance", "FinApprovalRecord", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="FinApprovalRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FinApprovalRecord : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FinApprovalRecord 对象。
        /// </summary>
        /// <param name="recordID">RecordID 属性的初始值。</param>
        /// <param name="approver">Approver 属性的初始值。</param>
        /// <param name="applyID">ApplyID 属性的初始值。</param>
        public static FinApprovalRecord CreateFinApprovalRecord(global::System.Int32 recordID, global::System.String approver, global::System.Int32 applyID)
        {
            FinApprovalRecord finApprovalRecord = new FinApprovalRecord();
            finApprovalRecord.RecordID = recordID;
            finApprovalRecord.Approver = approver;
            finApprovalRecord.ApplyID = applyID;
            return finApprovalRecord;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordID
        {
            get
            {
                return _RecordID;
            }
            set
            {
                if (_RecordID != value)
                {
                    OnRecordIDChanging(value);
                    ReportPropertyChanging("RecordID");
                    _RecordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecordID");
                    OnRecordIDChanged();
                }
            }
        }
        private global::System.Int32 _RecordID;
        partial void OnRecordIDChanging(global::System.Int32 value);
        partial void OnRecordIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Approver
        {
            get
            {
                return _Approver;
            }
            set
            {
                OnApproverChanging(value);
                ReportPropertyChanging("Approver");
                _Approver = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Approver");
                OnApproverChanged();
            }
        }
        private global::System.String _Approver;
        partial void OnApproverChanging(global::System.String value);
        partial void OnApproverChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovalResult
        {
            get
            {
                return _ApprovalResult;
            }
            set
            {
                OnApprovalResultChanging(value);
                ReportPropertyChanging("ApprovalResult");
                _ApprovalResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalResult");
                OnApprovalResultChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovalResult;
        partial void OnApprovalResultChanging(Nullable<global::System.Int32> value);
        partial void OnApprovalResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalDate;
        partial void OnApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovalComment
        {
            get
            {
                return _ApprovalComment;
            }
            set
            {
                OnApprovalCommentChanging(value);
                ReportPropertyChanging("ApprovalComment");
                _ApprovalComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovalComment");
                OnApprovalCommentChanged();
            }
        }
        private global::System.String _ApprovalComment;
        partial void OnApprovalCommentChanging(global::System.String value);
        partial void OnApprovalCommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplyID
        {
            get
            {
                return _ApplyID;
            }
            set
            {
                OnApplyIDChanging(value);
                ReportPropertyChanging("ApplyID");
                _ApplyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyID");
                OnApplyIDChanged();
            }
        }
        private global::System.Int32 _ApplyID;
        partial void OnApplyIDChanging(global::System.Int32 value);
        partial void OnApplyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualPaymentDeadline
        {
            get
            {
                return _ActualPaymentDeadline;
            }
            set
            {
                OnActualPaymentDeadlineChanging(value);
                ReportPropertyChanging("ActualPaymentDeadline");
                _ActualPaymentDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPaymentDeadline");
                OnActualPaymentDeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualPaymentDeadline;
        partial void OnActualPaymentDeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OnActualPaymentDeadlineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualPaymentProportion
        {
            get
            {
                return _ActualPaymentProportion;
            }
            set
            {
                OnActualPaymentProportionChanging(value);
                ReportPropertyChanging("ActualPaymentProportion");
                _ActualPaymentProportion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPaymentProportion");
                OnActualPaymentProportionChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualPaymentProportion;
        partial void OnActualPaymentProportionChanging(Nullable<global::System.Decimal> value);
        partial void OnActualPaymentProportionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualPaymentPrice
        {
            get
            {
                return _ActualPaymentPrice;
            }
            set
            {
                OnActualPaymentPriceChanging(value);
                ReportPropertyChanging("ActualPaymentPrice");
                _ActualPaymentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPaymentPrice");
                OnActualPaymentPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualPaymentPrice;
        partial void OnActualPaymentPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnActualPaymentPriceChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_FinApprovalRecord_FinApplyInstance", "FinApplyInstance")]
        public FinApplyInstance FinApplyInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinApplyInstance>("DSHOrderManagementModel.FK_FinApprovalRecord_FinApplyInstance", "FinApplyInstance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinApplyInstance>("DSHOrderManagementModel.FK_FinApprovalRecord_FinApplyInstance", "FinApplyInstance").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FinApplyInstance> FinApplyInstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FinApplyInstance>("DSHOrderManagementModel.FK_FinApprovalRecord_FinApplyInstance", "FinApplyInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FinApplyInstance>("DSHOrderManagementModel.FK_FinApprovalRecord_FinApplyInstance", "FinApplyInstance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Function")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Function : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Function 对象。
        /// </summary>
        /// <param name="functionID">FunctionID 属性的初始值。</param>
        /// <param name="functionName">FunctionName 属性的初始值。</param>
        /// <param name="parentID">ParentID 属性的初始值。</param>
        public static Function CreateFunction(global::System.Int32 functionID, global::System.String functionName, global::System.Int32 parentID)
        {
            Function function = new Function();
            function.FunctionID = functionID;
            function.FunctionName = functionName;
            function.ParentID = parentID;
            return function;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FunctionID
        {
            get
            {
                return _FunctionID;
            }
            set
            {
                if (_FunctionID != value)
                {
                    OnFunctionIDChanging(value);
                    ReportPropertyChanging("FunctionID");
                    _FunctionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FunctionID");
                    OnFunctionIDChanged();
                }
            }
        }
        private global::System.Int32 _FunctionID;
        partial void OnFunctionIDChanging(global::System.Int32 value);
        partial void OnFunctionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FunctionName
        {
            get
            {
                return _FunctionName;
            }
            set
            {
                OnFunctionNameChanging(value);
                ReportPropertyChanging("FunctionName");
                _FunctionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FunctionName");
                OnFunctionNameChanged();
            }
        }
        private global::System.String _FunctionName;
        partial void OnFunctionNameChanging(global::System.String value);
        partial void OnFunctionNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private global::System.Int32 _ParentID;
        partial void OnParentIDChanging(global::System.Int32 value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_PRIVILEG_REFERENCE_FUNCTION", "Privilege")]
        public EntityCollection<Privilege> Privilege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Privilege>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_FUNCTION", "Privilege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Privilege>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_FUNCTION", "Privilege", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupByCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupByCity : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupByCity 对象。
        /// </summary>
        /// <param name="groupByCityID">GroupByCityID 属性的初始值。</param>
        public static GroupByCity CreateGroupByCity(global::System.Int32 groupByCityID)
        {
            GroupByCity groupByCity = new GroupByCity();
            groupByCity.GroupByCityID = groupByCityID;
            return groupByCity;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByCityID
        {
            get
            {
                return _GroupByCityID;
            }
            set
            {
                if (_GroupByCityID != value)
                {
                    OnGroupByCityIDChanging(value);
                    ReportPropertyChanging("GroupByCityID");
                    _GroupByCityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupByCityID");
                    OnGroupByCityIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupByCityID;
        partial void OnGroupByCityIDChanging(global::System.Int32 value);
        partial void OnGroupByCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByItemID
        {
            get
            {
                return _GroupByItemID;
            }
            set
            {
                OnGroupByItemIDChanging(value);
                ReportPropertyChanging("GroupByItemID");
                _GroupByItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByItemID");
                OnGroupByItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByItemID;
        partial void OnGroupByItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GROUPBYC_REFERENCE_CITY", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_GROUPBYC_REFERENCE_CITY", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_GROUPBYC_REFERENCE_CITY", "City").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_GROUPBYC_REFERENCE_CITY", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DSHOrderManagementModel.FK_GROUPBYC_REFERENCE_CITY", "City", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByCity_GroupByItem", "GroupByItem")]
        public GroupByItem GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_GroupByCity_GroupByItem", "GroupByItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_GroupByCity_GroupByItem", "GroupByItem").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByItem> GroupByItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_GroupByCity_GroupByItem", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_GroupByCity_GroupByItem", "GroupByItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupByGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupByGroup : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupByGroup 对象。
        /// </summary>
        /// <param name="groupByGroupID">GroupByGroupID 属性的初始值。</param>
        public static GroupByGroup CreateGroupByGroup(global::System.Int32 groupByGroupID)
        {
            GroupByGroup groupByGroup = new GroupByGroup();
            groupByGroup.GroupByGroupID = groupByGroupID;
            return groupByGroup;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                if (_GroupByGroupID != value)
                {
                    OnGroupByGroupIDChanging(value);
                    ReportPropertyChanging("GroupByGroupID");
                    _GroupByGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupByGroupID");
                    OnGroupByGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(global::System.Int32 value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupByGroupName
        {
            get
            {
                return _GroupByGroupName;
            }
            set
            {
                OnGroupByGroupNameChanging(value);
                ReportPropertyChanging("GroupByGroupName");
                _GroupByGroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupByGroupName");
                OnGroupByGroupNameChanged();
            }
        }
        private global::System.String _GroupByGroupName;
        partial void OnGroupByGroupNameChanging(global::System.String value);
        partial void OnGroupByGroupNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubIndustryID
        {
            get
            {
                return _SubIndustryID;
            }
            set
            {
                OnSubIndustryIDChanging(value);
                ReportPropertyChanging("SubIndustryID");
                _SubIndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubIndustryID");
                OnSubIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubIndustryID;
        partial void OnSubIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubIndustryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OriginalPrice
        {
            get
            {
                return _OriginalPrice;
            }
            set
            {
                OnOriginalPriceChanging(value);
                ReportPropertyChanging("OriginalPrice");
                _OriginalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalPrice");
                OnOriginalPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _OriginalPrice;
        partial void OnOriginalPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnOriginalPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupByContent
        {
            get
            {
                return _GroupByContent;
            }
            set
            {
                OnGroupByContentChanging(value);
                ReportPropertyChanging("GroupByContent");
                _GroupByContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupByContent");
                OnGroupByContentChanged();
            }
        }
        private global::System.String _GroupByContent;
        partial void OnGroupByContentChanging(global::System.String value);
        partial void OnGroupByContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SettlementType
        {
            get
            {
                return _SettlementType;
            }
            set
            {
                OnSettlementTypeChanging(value);
                ReportPropertyChanging("SettlementType");
                _SettlementType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SettlementType");
                OnSettlementTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _SettlementType;
        partial void OnSettlementTypeChanging(Nullable<global::System.Int32> value);
        partial void OnSettlementTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RefundType
        {
            get
            {
                return _RefundType;
            }
            set
            {
                OnRefundTypeChanging(value);
                ReportPropertyChanging("RefundType");
                _RefundType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundType");
                OnRefundTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _RefundType;
        partial void OnRefundTypeChanging(Nullable<global::System.Int32> value);
        partial void OnRefundTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LogisticCharge
        {
            get
            {
                return _LogisticCharge;
            }
            set
            {
                OnLogisticChargeChanging(value);
                ReportPropertyChanging("LogisticCharge");
                _LogisticCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogisticCharge");
                OnLogisticChargeChanged();
            }
        }
        private Nullable<global::System.Decimal> _LogisticCharge;
        partial void OnLogisticChargeChanging(Nullable<global::System.Decimal> value);
        partial void OnLogisticChargeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupByContractNo
        {
            get
            {
                return _GroupByContractNo;
            }
            set
            {
                OnGroupByContractNoChanging(value);
                ReportPropertyChanging("GroupByContractNo");
                _GroupByContractNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupByContractNo");
                OnGroupByContractNoChanged();
            }
        }
        private global::System.String _GroupByContractNo;
        partial void OnGroupByContractNoChanging(global::System.String value);
        partial void OnGroupByContractNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupByCodeNo
        {
            get
            {
                return _GroupByCodeNo;
            }
            set
            {
                OnGroupByCodeNoChanging(value);
                ReportPropertyChanging("GroupByCodeNo");
                _GroupByCodeNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupByCodeNo");
                OnGroupByCodeNoChanged();
            }
        }
        private global::System.String _GroupByCodeNo;
        partial void OnGroupByCodeNoChanging(global::System.String value);
        partial void OnGroupByCodeNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FinalProfit
        {
            get
            {
                return _FinalProfit;
            }
            set
            {
                OnFinalProfitChanging(value);
                ReportPropertyChanging("FinalProfit");
                _FinalProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinalProfit");
                OnFinalProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _FinalProfit;
        partial void OnFinalProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnFinalProfitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductPicture1FileID
        {
            get
            {
                return _ProductPicture1FileID;
            }
            set
            {
                OnProductPicture1FileIDChanging(value);
                ReportPropertyChanging("ProductPicture1FileID");
                _ProductPicture1FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPicture1FileID");
                OnProductPicture1FileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductPicture1FileID;
        partial void OnProductPicture1FileIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductPicture1FileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductPicture2FileID
        {
            get
            {
                return _ProductPicture2FileID;
            }
            set
            {
                OnProductPicture2FileIDChanging(value);
                ReportPropertyChanging("ProductPicture2FileID");
                _ProductPicture2FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductPicture2FileID");
                OnProductPicture2FileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductPicture2FileID;
        partial void OnProductPicture2FileIDChanging(Nullable<global::System.Int32> value);
        partial void OnProductPicture2FileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaterialFileID
        {
            get
            {
                return _MaterialFileID;
            }
            set
            {
                OnMaterialFileIDChanging(value);
                ReportPropertyChanging("MaterialFileID");
                _MaterialFileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialFileID");
                OnMaterialFileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MaterialFileID;
        partial void OnMaterialFileIDChanging(Nullable<global::System.Int32> value);
        partial void OnMaterialFileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveBMJLUserID
        {
            get
            {
                return _ApproveBMJLUserID;
            }
            set
            {
                OnApproveBMJLUserIDChanging(value);
                ReportPropertyChanging("ApproveBMJLUserID");
                _ApproveBMJLUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveBMJLUserID");
                OnApproveBMJLUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveBMJLUserID;
        partial void OnApproveBMJLUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveBMJLUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveBMJLActionTime
        {
            get
            {
                return _ApproveBMJLActionTime;
            }
            set
            {
                OnApproveBMJLActionTimeChanging(value);
                ReportPropertyChanging("ApproveBMJLActionTime");
                _ApproveBMJLActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveBMJLActionTime");
                OnApproveBMJLActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveBMJLActionTime;
        partial void OnApproveBMJLActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveBMJLActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveBMJLResult
        {
            get
            {
                return _ApproveBMJLResult;
            }
            set
            {
                OnApproveBMJLResultChanging(value);
                ReportPropertyChanging("ApproveBMJLResult");
                _ApproveBMJLResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveBMJLResult");
                OnApproveBMJLResultChanged();
            }
        }
        private global::System.String _ApproveBMJLResult;
        partial void OnApproveBMJLResultChanging(global::System.String value);
        partial void OnApproveBMJLResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveBMJLMemo
        {
            get
            {
                return _ApproveBMJLMemo;
            }
            set
            {
                OnApproveBMJLMemoChanging(value);
                ReportPropertyChanging("ApproveBMJLMemo");
                _ApproveBMJLMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveBMJLMemo");
                OnApproveBMJLMemoChanged();
            }
        }
        private global::System.String _ApproveBMJLMemo;
        partial void OnApproveBMJLMemoChanging(global::System.String value);
        partial void OnApproveBMJLMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveFKRBUserID
        {
            get
            {
                return _ApproveFKRBUserID;
            }
            set
            {
                OnApproveFKRBUserIDChanging(value);
                ReportPropertyChanging("ApproveFKRBUserID");
                _ApproveFKRBUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveFKRBUserID");
                OnApproveFKRBUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveFKRBUserID;
        partial void OnApproveFKRBUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveFKRBUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveFKRBActionTime
        {
            get
            {
                return _ApproveFKRBActionTime;
            }
            set
            {
                OnApproveFKRBActionTimeChanging(value);
                ReportPropertyChanging("ApproveFKRBActionTime");
                _ApproveFKRBActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveFKRBActionTime");
                OnApproveFKRBActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveFKRBActionTime;
        partial void OnApproveFKRBActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveFKRBActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveFKRBResult
        {
            get
            {
                return _ApproveFKRBResult;
            }
            set
            {
                OnApproveFKRBResultChanging(value);
                ReportPropertyChanging("ApproveFKRBResult");
                _ApproveFKRBResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveFKRBResult");
                OnApproveFKRBResultChanged();
            }
        }
        private global::System.String _ApproveFKRBResult;
        partial void OnApproveFKRBResultChanging(global::System.String value);
        partial void OnApproveFKRBResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveFKRBMemo
        {
            get
            {
                return _ApproveFKRBMemo;
            }
            set
            {
                OnApproveFKRBMemoChanging(value);
                ReportPropertyChanging("ApproveFKRBMemo");
                _ApproveFKRBMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveFKRBMemo");
                OnApproveFKRBMemoChanged();
            }
        }
        private global::System.String _ApproveFKRBMemo;
        partial void OnApproveFKRBMemoChanging(global::System.String value);
        partial void OnApproveFKRBMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveZJLUserID
        {
            get
            {
                return _ApproveZJLUserID;
            }
            set
            {
                OnApproveZJLUserIDChanging(value);
                ReportPropertyChanging("ApproveZJLUserID");
                _ApproveZJLUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveZJLUserID");
                OnApproveZJLUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveZJLUserID;
        partial void OnApproveZJLUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveZJLUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveZJLActionTime
        {
            get
            {
                return _ApproveZJLActionTime;
            }
            set
            {
                OnApproveZJLActionTimeChanging(value);
                ReportPropertyChanging("ApproveZJLActionTime");
                _ApproveZJLActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveZJLActionTime");
                OnApproveZJLActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveZJLActionTime;
        partial void OnApproveZJLActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveZJLActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveZJLResult
        {
            get
            {
                return _ApproveZJLResult;
            }
            set
            {
                OnApproveZJLResultChanging(value);
                ReportPropertyChanging("ApproveZJLResult");
                _ApproveZJLResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveZJLResult");
                OnApproveZJLResultChanged();
            }
        }
        private global::System.String _ApproveZJLResult;
        partial void OnApproveZJLResultChanging(global::System.String value);
        partial void OnApproveZJLResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveZJLMemo
        {
            get
            {
                return _ApproveZJLMemo;
            }
            set
            {
                OnApproveZJLMemoChanging(value);
                ReportPropertyChanging("ApproveZJLMemo");
                _ApproveZJLMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveZJLMemo");
                OnApproveZJLMemoChanged();
            }
        }
        private global::System.String _ApproveZJLMemo;
        partial void OnApproveZJLMemoChanging(global::System.String value);
        partial void OnApproveZJLMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveXSZLUserID
        {
            get
            {
                return _ApproveXSZLUserID;
            }
            set
            {
                OnApproveXSZLUserIDChanging(value);
                ReportPropertyChanging("ApproveXSZLUserID");
                _ApproveXSZLUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLUserID");
                OnApproveXSZLUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveXSZLUserID;
        partial void OnApproveXSZLUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveXSZLUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveXSZLActionTime
        {
            get
            {
                return _ApproveXSZLActionTime;
            }
            set
            {
                OnApproveXSZLActionTimeChanging(value);
                ReportPropertyChanging("ApproveXSZLActionTime");
                _ApproveXSZLActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLActionTime");
                OnApproveXSZLActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveXSZLActionTime;
        partial void OnApproveXSZLActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveXSZLActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ApproveXSZLIsCrossCity
        {
            get
            {
                return _ApproveXSZLIsCrossCity;
            }
            set
            {
                OnApproveXSZLIsCrossCityChanging(value);
                ReportPropertyChanging("ApproveXSZLIsCrossCity");
                _ApproveXSZLIsCrossCity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLIsCrossCity");
                OnApproveXSZLIsCrossCityChanged();
            }
        }
        private Nullable<global::System.Boolean> _ApproveXSZLIsCrossCity;
        partial void OnApproveXSZLIsCrossCityChanging(Nullable<global::System.Boolean> value);
        partial void OnApproveXSZLIsCrossCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveXSZLCrossCityID
        {
            get
            {
                return _ApproveXSZLCrossCityID;
            }
            set
            {
                OnApproveXSZLCrossCityIDChanging(value);
                ReportPropertyChanging("ApproveXSZLCrossCityID");
                _ApproveXSZLCrossCityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLCrossCityID");
                OnApproveXSZLCrossCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveXSZLCrossCityID;
        partial void OnApproveXSZLCrossCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveXSZLCrossCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveXSZLCrossCityUserID
        {
            get
            {
                return _ApproveXSZLCrossCityUserID;
            }
            set
            {
                OnApproveXSZLCrossCityUserIDChanging(value);
                ReportPropertyChanging("ApproveXSZLCrossCityUserID");
                _ApproveXSZLCrossCityUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLCrossCityUserID");
                OnApproveXSZLCrossCityUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveXSZLCrossCityUserID;
        partial void OnApproveXSZLCrossCityUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveXSZLCrossCityUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveXSZLContractFileID
        {
            get
            {
                return _ApproveXSZLContractFileID;
            }
            set
            {
                OnApproveXSZLContractFileIDChanging(value);
                ReportPropertyChanging("ApproveXSZLContractFileID");
                _ApproveXSZLContractFileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLContractFileID");
                OnApproveXSZLContractFileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveXSZLContractFileID;
        partial void OnApproveXSZLContractFileIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveXSZLContractFileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentNode
        {
            get
            {
                return _CurrentNode;
            }
            set
            {
                OnCurrentNodeChanging(value);
                ReportPropertyChanging("CurrentNode");
                _CurrentNode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentNode");
                OnCurrentNodeChanged();
            }
        }
        private global::System.String _CurrentNode;
        partial void OnCurrentNodeChanging(global::System.String value);
        partial void OnCurrentNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherHistryCase
        {
            get
            {
                return _OtherHistryCase;
            }
            set
            {
                OnOtherHistryCaseChanging(value);
                ReportPropertyChanging("OtherHistryCase");
                _OtherHistryCase = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherHistryCase");
                OnOtherHistryCaseChanged();
            }
        }
        private global::System.String _OtherHistryCase;
        partial void OnOtherHistryCaseChanging(global::System.String value);
        partial void OnOtherHistryCaseChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DPOrKBAddress
        {
            get
            {
                return _DPOrKBAddress;
            }
            set
            {
                OnDPOrKBAddressChanging(value);
                ReportPropertyChanging("DPOrKBAddress");
                _DPOrKBAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DPOrKBAddress");
                OnDPOrKBAddressChanged();
            }
        }
        private global::System.String _DPOrKBAddress;
        partial void OnDPOrKBAddressChanging(global::System.String value);
        partial void OnDPOrKBAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceMarket
        {
            get
            {
                return _PriceMarket;
            }
            set
            {
                OnPriceMarketChanging(value);
                ReportPropertyChanging("PriceMarket");
                _PriceMarket = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceMarket");
                OnPriceMarketChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceMarket;
        partial void OnPriceMarketChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceMarketChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceSettlement
        {
            get
            {
                return _PriceSettlement;
            }
            set
            {
                OnPriceSettlementChanging(value);
                ReportPropertyChanging("PriceSettlement");
                _PriceSettlement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceSettlement");
                OnPriceSettlementChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceSettlement;
        partial void OnPriceSettlementChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceSettlementChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceSuggest
        {
            get
            {
                return _PriceSuggest;
            }
            set
            {
                OnPriceSuggestChanging(value);
                ReportPropertyChanging("PriceSuggest");
                _PriceSuggest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceSuggest");
                OnPriceSuggestChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceSuggest;
        partial void OnPriceSuggestChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceSuggestChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceOther
        {
            get
            {
                return _PriceOther;
            }
            set
            {
                OnPriceOtherChanging(value);
                ReportPropertyChanging("PriceOther");
                _PriceOther = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceOther");
                OnPriceOtherChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceOther;
        partial void OnPriceOtherChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceOtherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShopCount
        {
            get
            {
                return _ShopCount;
            }
            set
            {
                OnShopCountChanging(value);
                ReportPropertyChanging("ShopCount");
                _ShopCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShopCount");
                OnShopCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ShopCount;
        partial void OnShopCountChanging(Nullable<global::System.Int32> value);
        partial void OnShopCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShopNames
        {
            get
            {
                return _ShopNames;
            }
            set
            {
                OnShopNamesChanging(value);
                ReportPropertyChanging("ShopNames");
                _ShopNames = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShopNames");
                OnShopNamesChanged();
            }
        }
        private global::System.String _ShopNames;
        partial void OnShopNamesChanging(global::System.String value);
        partial void OnShopNamesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SettlementDate
        {
            get
            {
                return _SettlementDate;
            }
            set
            {
                OnSettlementDateChanging(value);
                ReportPropertyChanging("SettlementDate");
                _SettlementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SettlementDate");
                OnSettlementDateChanged();
            }
        }
        private Nullable<global::System.Int32> _SettlementDate;
        partial void OnSettlementDateChanging(Nullable<global::System.Int32> value);
        partial void OnSettlementDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentStatus
        {
            get
            {
                return _CurrentStatus;
            }
            set
            {
                OnCurrentStatusChanging(value);
                ReportPropertyChanging("CurrentStatus");
                _CurrentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentStatus");
                OnCurrentStatusChanged();
            }
        }
        private global::System.String _CurrentStatus;
        partial void OnCurrentStatusChanging(global::System.String value);
        partial void OnCurrentStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveXSZLResult
        {
            get
            {
                return _ApproveXSZLResult;
            }
            set
            {
                OnApproveXSZLResultChanging(value);
                ReportPropertyChanging("ApproveXSZLResult");
                _ApproveXSZLResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveXSZLResult");
                OnApproveXSZLResultChanged();
            }
        }
        private global::System.String _ApproveXSZLResult;
        partial void OnApproveXSZLResultChanging(global::System.String value);
        partial void OnApproveXSZLResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveXSZLMemo
        {
            get
            {
                return _ApproveXSZLMemo;
            }
            set
            {
                OnApproveXSZLMemoChanging(value);
                ReportPropertyChanging("ApproveXSZLMemo");
                _ApproveXSZLMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveXSZLMemo");
                OnApproveXSZLMemoChanged();
            }
        }
        private global::System.String _ApproveXSZLMemo;
        partial void OnApproveXSZLMemoChanging(global::System.String value);
        partial void OnApproveXSZLMemoChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DSHOrderManagementModel.FK_GroupByGroup_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DSHOrderManagementModel.FK_GroupByGroup_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DSHOrderManagementModel.FK_GroupByGroup_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("DSHOrderManagementModel.FK_GroupByGroup_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_SubIndustry", "SubIndustry")]
        public SubIndustry SubIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_GroupByGroup_SubIndustry", "SubIndustry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_GroupByGroup_SubIndustry", "SubIndustry").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubIndustry> SubIndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_GroupByGroup_SubIndustry", "SubIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubIndustry>("DSHOrderManagementModel.FK_GroupByGroup_SubIndustry", "SubIndustry", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_GroupByGroup", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_GroupByGroup", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_GroupByGroup", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupBySales_GroupBySales", "GroupBySales")]
        public EntityCollection<GroupBySales> GroupBySales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupBySales>("DSHOrderManagementModel.FK_GroupBySales_GroupBySales", "GroupBySales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupBySales>("DSHOrderManagementModel.FK_GroupBySales_GroupBySales", "GroupBySales", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_GroupByGroup_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_GroupByGroup_City", "City").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_GroupByGroup_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DSHOrderManagementModel.FK_GroupByGroup_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User", "User")]
        public User ApproveBMJLUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveBMJLUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User1", "User")]
        public User ApproveFKRBUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveFKRBUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User2", "User")]
        public User ApproveZJLUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User2", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveZJLUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User2", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User3", "User")]
        public User ApproveXSZLUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User3", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User3", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveXSZLUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User3", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User3", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User4", "User")]
        public User ApproveXSZLCrossCityUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User4", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User4", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveXSZLCrossCityUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User4", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByGroup_User4", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_ApproveRecordGroupBy_GroupByGroup", "ApproveRecordGroupBy")]
        public EntityCollection<ApproveRecordGroupBy> ApproveRecordGroupBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApproveRecordGroupBy>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByGroup", "ApproveRecordGroupBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApproveRecordGroupBy>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByGroup", "ApproveRecordGroupBy", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile", "UploadFile")]
        public UploadFile ProductPicture1File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile", "UploadFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile", "UploadFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadFile> ProductPicture1FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile", "UploadFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile", "UploadFile", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile1", "UploadFile")]
        public UploadFile ProductPicture2File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile1", "UploadFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile1", "UploadFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadFile> ProductPicture2FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile1", "UploadFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile1", "UploadFile", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile2", "UploadFile")]
        public UploadFile MaterialFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile2", "UploadFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile2", "UploadFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadFile> MaterialFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile2", "UploadFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile2", "UploadFile", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile3", "UploadFile")]
        public UploadFile ApproveXSZLContractFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile3", "UploadFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile3", "UploadFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadFile> ApproveXSZLContractFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile3", "UploadFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile3", "UploadFile", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupDRDWuLiu_GroupByGroup", "GroupDRDWuLiu")]
        public EntityCollection<GroupDRDWuLiu> GroupDRDWuLiu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupDRDWuLiu>("DSHOrderManagementModel.FK_GroupDRDWuLiu_GroupByGroup", "GroupDRDWuLiu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupDRDWuLiu>("DSHOrderManagementModel.FK_GroupDRDWuLiu_GroupByGroup", "GroupDRDWuLiu", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupGeneral_GroupByGroup", "GroupGeneral")]
        public EntityCollection<GroupGeneral> GroupGeneral
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupGeneral>("DSHOrderManagementModel.FK_GroupGeneral_GroupByGroup", "GroupGeneral");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupGeneral>("DSHOrderManagementModel.FK_GroupGeneral_GroupByGroup", "GroupGeneral", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupSheYing_GroupByGroup", "GroupSheYing")]
        public EntityCollection<GroupSheYing> GroupSheYing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupSheYing>("DSHOrderManagementModel.FK_GroupSheYing_GroupByGroup", "GroupSheYing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupSheYing>("DSHOrderManagementModel.FK_GroupSheYing_GroupByGroup", "GroupSheYing", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupLvYou_GroupByGroup", "GroupLvYou")]
        public EntityCollection<GroupLvYou> GroupLvYou
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupLvYou>("DSHOrderManagementModel.FK_GroupLvYou_GroupByGroup", "GroupLvYou");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupLvYou>("DSHOrderManagementModel.FK_GroupLvYou_GroupByGroup", "GroupLvYou", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupByItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupByItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupByItem 对象。
        /// </summary>
        /// <param name="groupByItemID">GroupByItemID 属性的初始值。</param>
        public static GroupByItem CreateGroupByItem(global::System.Int32 groupByItemID)
        {
            GroupByItem groupByItem = new GroupByItem();
            groupByItem.GroupByItemID = groupByItemID;
            return groupByItem;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByItemID
        {
            get
            {
                return _GroupByItemID;
            }
            set
            {
                if (_GroupByItemID != value)
                {
                    OnGroupByItemIDChanging(value);
                    ReportPropertyChanging("GroupByItemID");
                    _GroupByItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupByItemID");
                    OnGroupByItemIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupByItemID;
        partial void OnGroupByItemIDChanging(global::System.Int32 value);
        partial void OnGroupByItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByPortalID
        {
            get
            {
                return _GroupByPortalID;
            }
            set
            {
                OnGroupByPortalIDChanging(value);
                ReportPropertyChanging("GroupByPortalID");
                _GroupByPortalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByPortalID");
                OnGroupByPortalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByPortalID;
        partial void OnGroupByPortalIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByPortalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDay
        {
            get
            {
                return _StartDay;
            }
            set
            {
                OnStartDayChanging(value);
                ReportPropertyChanging("StartDay");
                _StartDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDay");
                OnStartDayChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDay;
        partial void OnStartDayChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDay
        {
            get
            {
                return _EndDay;
            }
            set
            {
                OnEndDayChanging(value);
                ReportPropertyChanging("EndDay");
                _EndDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDay");
                OnEndDayChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDay;
        partial void OnEndDayChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDay
        {
            get
            {
                return _ExpireDay;
            }
            set
            {
                OnExpireDayChanging(value);
                ReportPropertyChanging("ExpireDay");
                _ExpireDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDay");
                OnExpireDayChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDay;
        partial void OnExpireDayChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LowestNum
        {
            get
            {
                return _LowestNum;
            }
            set
            {
                OnLowestNumChanging(value);
                ReportPropertyChanging("LowestNum");
                _LowestNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestNum");
                OnLowestNumChanged();
            }
        }
        private Nullable<global::System.Int32> _LowestNum;
        partial void OnLowestNumChanging(Nullable<global::System.Int32> value);
        partial void OnLowestNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HighestNum
        {
            get
            {
                return _HighestNum;
            }
            set
            {
                OnHighestNumChanging(value);
                ReportPropertyChanging("HighestNum");
                _HighestNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestNum");
                OnHighestNumChanged();
            }
        }
        private Nullable<global::System.Int32> _HighestNum;
        partial void OnHighestNumChanging(Nullable<global::System.Int32> value);
        partial void OnHighestNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SellingPrice
        {
            get
            {
                return _SellingPrice;
            }
            set
            {
                OnSellingPriceChanging(value);
                ReportPropertyChanging("SellingPrice");
                _SellingPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellingPrice");
                OnSellingPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SellingPrice;
        partial void OnSellingPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSellingPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByNum
        {
            get
            {
                return _GroupByNum;
            }
            set
            {
                OnGroupByNumChanging(value);
                ReportPropertyChanging("GroupByNum");
                _GroupByNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByNum");
                OnGroupByNumChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByNum;
        partial void OnGroupByNumChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SellNum
        {
            get
            {
                return _SellNum;
            }
            set
            {
                OnSellNumChanging(value);
                ReportPropertyChanging("SellNum");
                _SellNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellNum");
                OnSellNumChanged();
            }
        }
        private Nullable<global::System.Int32> _SellNum;
        partial void OnSellNumChanging(Nullable<global::System.Int32> value);
        partial void OnSellNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RefundPrice
        {
            get
            {
                return _RefundPrice;
            }
            set
            {
                OnRefundPriceChanging(value);
                ReportPropertyChanging("RefundPrice");
                _RefundPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundPrice");
                OnRefundPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _RefundPrice;
        partial void OnRefundPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnRefundPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualConsumption
        {
            get
            {
                return _ActualConsumption;
            }
            set
            {
                OnActualConsumptionChanging(value);
                ReportPropertyChanging("ActualConsumption");
                _ActualConsumption = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualConsumption");
                OnActualConsumptionChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualConsumption;
        partial void OnActualConsumptionChanging(Nullable<global::System.Int32> value);
        partial void OnActualConsumptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaveAmount
        {
            get
            {
                return _LeaveAmount;
            }
            set
            {
                OnLeaveAmountChanging(value);
                ReportPropertyChanging("LeaveAmount");
                _LeaveAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveAmount");
                OnLeaveAmountChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaveAmount;
        partial void OnLeaveAmountChanging(Nullable<global::System.Int32> value);
        partial void OnLeaveAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankingValue
        {
            get
            {
                return _RankingValue;
            }
            set
            {
                OnRankingValueChanging(value);
                ReportPropertyChanging("RankingValue");
                _RankingValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankingValue");
                OnRankingValueChanged();
            }
        }
        private Nullable<global::System.Int32> _RankingValue;
        partial void OnRankingValueChanging(Nullable<global::System.Int32> value);
        partial void OnRankingValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankingNum
        {
            get
            {
                return _RankingNum;
            }
            set
            {
                OnRankingNumChanging(value);
                ReportPropertyChanging("RankingNum");
                _RankingNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankingNum");
                OnRankingNumChanged();
            }
        }
        private Nullable<global::System.Int32> _RankingNum;
        partial void OnRankingNumChanging(Nullable<global::System.Int32> value);
        partial void OnRankingNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SZOnlineSell
        {
            get
            {
                return _SZOnlineSell;
            }
            set
            {
                OnSZOnlineSellChanging(value);
                ReportPropertyChanging("SZOnlineSell");
                _SZOnlineSell = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SZOnlineSell");
                OnSZOnlineSellChanged();
            }
        }
        private Nullable<global::System.Int32> _SZOnlineSell;
        partial void OnSZOnlineSellChanging(Nullable<global::System.Int32> value);
        partial void OnSZOnlineSellChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaobaoProductID
        {
            get
            {
                return _TaobaoProductID;
            }
            set
            {
                OnTaobaoProductIDChanging(value);
                ReportPropertyChanging("TaobaoProductID");
                _TaobaoProductID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaobaoProductID");
                OnTaobaoProductIDChanged();
            }
        }
        private global::System.String _TaobaoProductID;
        partial void OnTaobaoProductIDChanging(global::System.String value);
        partial void OnTaobaoProductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupByItemCodeNo
        {
            get
            {
                return _GroupByItemCodeNo;
            }
            set
            {
                OnGroupByItemCodeNoChanging(value);
                ReportPropertyChanging("GroupByItemCodeNo");
                _GroupByItemCodeNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupByItemCodeNo");
                OnGroupByItemCodeNoChanged();
            }
        }
        private global::System.String _GroupByItemCodeNo;
        partial void OnGroupByItemCodeNoChanging(global::System.String value);
        partial void OnGroupByItemCodeNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveTZUserID
        {
            get
            {
                return _ApproveTZUserID;
            }
            set
            {
                OnApproveTZUserIDChanging(value);
                ReportPropertyChanging("ApproveTZUserID");
                _ApproveTZUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveTZUserID");
                OnApproveTZUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveTZUserID;
        partial void OnApproveTZUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveTZUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveTZActionTime
        {
            get
            {
                return _ApproveTZActionTime;
            }
            set
            {
                OnApproveTZActionTimeChanging(value);
                ReportPropertyChanging("ApproveTZActionTime");
                _ApproveTZActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveTZActionTime");
                OnApproveTZActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveTZActionTime;
        partial void OnApproveTZActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveTZActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveTZResult
        {
            get
            {
                return _ApproveTZResult;
            }
            set
            {
                OnApproveTZResultChanging(value);
                ReportPropertyChanging("ApproveTZResult");
                _ApproveTZResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveTZResult");
                OnApproveTZResultChanged();
            }
        }
        private global::System.String _ApproveTZResult;
        partial void OnApproveTZResultChanging(global::System.String value);
        partial void OnApproveTZResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveTZMemo
        {
            get
            {
                return _ApproveTZMemo;
            }
            set
            {
                OnApproveTZMemoChanging(value);
                ReportPropertyChanging("ApproveTZMemo");
                _ApproveTZMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveTZMemo");
                OnApproveTZMemoChanged();
            }
        }
        private global::System.String _ApproveTZMemo;
        partial void OnApproveTZMemoChanging(global::System.String value);
        partial void OnApproveTZMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveTZProcessTZTime
        {
            get
            {
                return _ApproveTZProcessTZTime;
            }
            set
            {
                OnApproveTZProcessTZTimeChanging(value);
                ReportPropertyChanging("ApproveTZProcessTZTime");
                _ApproveTZProcessTZTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveTZProcessTZTime");
                OnApproveTZProcessTZTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveTZProcessTZTime;
        partial void OnApproveTZProcessTZTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveTZProcessTZTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveTZGroupByFlowNo
        {
            get
            {
                return _ApproveTZGroupByFlowNo;
            }
            set
            {
                OnApproveTZGroupByFlowNoChanging(value);
                ReportPropertyChanging("ApproveTZGroupByFlowNo");
                _ApproveTZGroupByFlowNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveTZGroupByFlowNo");
                OnApproveTZGroupByFlowNoChanged();
            }
        }
        private global::System.String _ApproveTZGroupByFlowNo;
        partial void OnApproveTZGroupByFlowNoChanging(global::System.String value);
        partial void OnApproveTZGroupByFlowNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveCHBUserID
        {
            get
            {
                return _ApproveCHBUserID;
            }
            set
            {
                OnApproveCHBUserIDChanging(value);
                ReportPropertyChanging("ApproveCHBUserID");
                _ApproveCHBUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveCHBUserID");
                OnApproveCHBUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveCHBUserID;
        partial void OnApproveCHBUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveCHBUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveCHBActionTime
        {
            get
            {
                return _ApproveCHBActionTime;
            }
            set
            {
                OnApproveCHBActionTimeChanging(value);
                ReportPropertyChanging("ApproveCHBActionTime");
                _ApproveCHBActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveCHBActionTime");
                OnApproveCHBActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveCHBActionTime;
        partial void OnApproveCHBActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveCHBActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveCHBDesignStatus
        {
            get
            {
                return _ApproveCHBDesignStatus;
            }
            set
            {
                OnApproveCHBDesignStatusChanging(value);
                ReportPropertyChanging("ApproveCHBDesignStatus");
                _ApproveCHBDesignStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveCHBDesignStatus");
                OnApproveCHBDesignStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveCHBDesignStatus;
        partial void OnApproveCHBDesignStatusChanging(Nullable<global::System.Int32> value);
        partial void OnApproveCHBDesignStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveCHBUploadFileID
        {
            get
            {
                return _ApproveCHBUploadFileID;
            }
            set
            {
                OnApproveCHBUploadFileIDChanging(value);
                ReportPropertyChanging("ApproveCHBUploadFileID");
                _ApproveCHBUploadFileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveCHBUploadFileID");
                OnApproveCHBUploadFileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveCHBUploadFileID;
        partial void OnApproveCHBUploadFileIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveCHBUploadFileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveCHBMemo
        {
            get
            {
                return _ApproveCHBMemo;
            }
            set
            {
                OnApproveCHBMemoChanging(value);
                ReportPropertyChanging("ApproveCHBMemo");
                _ApproveCHBMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveCHBMemo");
                OnApproveCHBMemoChanged();
            }
        }
        private global::System.String _ApproveCHBMemo;
        partial void OnApproveCHBMemoChanging(global::System.String value);
        partial void OnApproveCHBMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveSJBUserID
        {
            get
            {
                return _ApproveSJBUserID;
            }
            set
            {
                OnApproveSJBUserIDChanging(value);
                ReportPropertyChanging("ApproveSJBUserID");
                _ApproveSJBUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveSJBUserID");
                OnApproveSJBUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveSJBUserID;
        partial void OnApproveSJBUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveSJBUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveSJBActionTime
        {
            get
            {
                return _ApproveSJBActionTime;
            }
            set
            {
                OnApproveSJBActionTimeChanging(value);
                ReportPropertyChanging("ApproveSJBActionTime");
                _ApproveSJBActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveSJBActionTime");
                OnApproveSJBActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveSJBActionTime;
        partial void OnApproveSJBActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveSJBActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveSJBResult
        {
            get
            {
                return _ApproveSJBResult;
            }
            set
            {
                OnApproveSJBResultChanging(value);
                ReportPropertyChanging("ApproveSJBResult");
                _ApproveSJBResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveSJBResult");
                OnApproveSJBResultChanged();
            }
        }
        private global::System.String _ApproveSJBResult;
        partial void OnApproveSJBResultChanging(global::System.String value);
        partial void OnApproveSJBResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveSJBMemo
        {
            get
            {
                return _ApproveSJBMemo;
            }
            set
            {
                OnApproveSJBMemoChanging(value);
                ReportPropertyChanging("ApproveSJBMemo");
                _ApproveSJBMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveSJBMemo");
                OnApproveSJBMemoChanged();
            }
        }
        private global::System.String _ApproveSJBMemo;
        partial void OnApproveSJBMemoChanging(global::System.String value);
        partial void OnApproveSJBMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApproveXSZLUserID
        {
            get
            {
                return _ApproveXSZLUserID;
            }
            set
            {
                OnApproveXSZLUserIDChanging(value);
                ReportPropertyChanging("ApproveXSZLUserID");
                _ApproveXSZLUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLUserID");
                OnApproveXSZLUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApproveXSZLUserID;
        partial void OnApproveXSZLUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnApproveXSZLUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApproveXSZLActionTime
        {
            get
            {
                return _ApproveXSZLActionTime;
            }
            set
            {
                OnApproveXSZLActionTimeChanging(value);
                ReportPropertyChanging("ApproveXSZLActionTime");
                _ApproveXSZLActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveXSZLActionTime");
                OnApproveXSZLActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApproveXSZLActionTime;
        partial void OnApproveXSZLActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApproveXSZLActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveXSZLResult
        {
            get
            {
                return _ApproveXSZLResult;
            }
            set
            {
                OnApproveXSZLResultChanging(value);
                ReportPropertyChanging("ApproveXSZLResult");
                _ApproveXSZLResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveXSZLResult");
                OnApproveXSZLResultChanged();
            }
        }
        private global::System.String _ApproveXSZLResult;
        partial void OnApproveXSZLResultChanging(global::System.String value);
        partial void OnApproveXSZLResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveXSZLMemo
        {
            get
            {
                return _ApproveXSZLMemo;
            }
            set
            {
                OnApproveXSZLMemoChanging(value);
                ReportPropertyChanging("ApproveXSZLMemo");
                _ApproveXSZLMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveXSZLMemo");
                OnApproveXSZLMemoChanged();
            }
        }
        private global::System.String _ApproveXSZLMemo;
        partial void OnApproveXSZLMemoChanging(global::System.String value);
        partial void OnApproveXSZLMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScoreUserID
        {
            get
            {
                return _ScoreUserID;
            }
            set
            {
                OnScoreUserIDChanging(value);
                ReportPropertyChanging("ScoreUserID");
                _ScoreUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreUserID");
                OnScoreUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ScoreUserID;
        partial void OnScoreUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnScoreUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScoreActionTime
        {
            get
            {
                return _ScoreActionTime;
            }
            set
            {
                OnScoreActionTimeChanging(value);
                ReportPropertyChanging("ScoreActionTime");
                _ScoreActionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreActionTime");
                OnScoreActionTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScoreActionTime;
        partial void OnScoreActionTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnScoreActionTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScoreTime
        {
            get
            {
                return _ScoreTime;
            }
            set
            {
                OnScoreTimeChanging(value);
                ReportPropertyChanging("ScoreTime");
                _ScoreTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreTime");
                OnScoreTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScoreTime;
        partial void OnScoreTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnScoreTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScoreMemo
        {
            get
            {
                return _ScoreMemo;
            }
            set
            {
                OnScoreMemoChanging(value);
                ReportPropertyChanging("ScoreMemo");
                _ScoreMemo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScoreMemo");
                OnScoreMemoChanged();
            }
        }
        private global::System.String _ScoreMemo;
        partial void OnScoreMemoChanging(global::System.String value);
        partial void OnScoreMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ScoreUserCount
        {
            get
            {
                return _ScoreUserCount;
            }
            set
            {
                OnScoreUserCountChanging(value);
                ReportPropertyChanging("ScoreUserCount");
                _ScoreUserCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScoreUserCount");
                OnScoreUserCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ScoreUserCount;
        partial void OnScoreUserCountChanging(Nullable<global::System.Int32> value);
        partial void OnScoreUserCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentNode
        {
            get
            {
                return _CurrentNode;
            }
            set
            {
                OnCurrentNodeChanging(value);
                ReportPropertyChanging("CurrentNode");
                _CurrentNode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentNode");
                OnCurrentNodeChanged();
            }
        }
        private global::System.String _CurrentNode;
        partial void OnCurrentNodeChanging(global::System.String value);
        partial void OnCurrentNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LogisticCharge
        {
            get
            {
                return _LogisticCharge;
            }
            set
            {
                OnLogisticChargeChanging(value);
                ReportPropertyChanging("LogisticCharge");
                _LogisticCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogisticCharge");
                OnLogisticChargeChanged();
            }
        }
        private Nullable<global::System.Decimal> _LogisticCharge;
        partial void OnLogisticChargeChanging(Nullable<global::System.Decimal> value);
        partial void OnLogisticChargeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OtherCharge
        {
            get
            {
                return _OtherCharge;
            }
            set
            {
                OnOtherChargeChanging(value);
                ReportPropertyChanging("OtherCharge");
                _OtherCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OtherCharge");
                OnOtherChargeChanged();
            }
        }
        private Nullable<global::System.Decimal> _OtherCharge;
        partial void OnOtherChargeChanging(Nullable<global::System.Decimal> value);
        partial void OnOtherChargeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OnlineRefundNum
        {
            get
            {
                return _OnlineRefundNum;
            }
            set
            {
                OnOnlineRefundNumChanging(value);
                ReportPropertyChanging("OnlineRefundNum");
                _OnlineRefundNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnlineRefundNum");
                OnOnlineRefundNumChanged();
            }
        }
        private Nullable<global::System.Int32> _OnlineRefundNum;
        partial void OnOnlineRefundNumChanging(Nullable<global::System.Int32> value);
        partial void OnOnlineRefundNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualOnlineRefundNum
        {
            get
            {
                return _ActualOnlineRefundNum;
            }
            set
            {
                OnActualOnlineRefundNumChanging(value);
                ReportPropertyChanging("ActualOnlineRefundNum");
                _ActualOnlineRefundNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualOnlineRefundNum");
                OnActualOnlineRefundNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualOnlineRefundNum;
        partial void OnActualOnlineRefundNumChanging(Nullable<global::System.Int32> value);
        partial void OnActualOnlineRefundNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OfflineRefundNum
        {
            get
            {
                return _OfflineRefundNum;
            }
            set
            {
                OnOfflineRefundNumChanging(value);
                ReportPropertyChanging("OfflineRefundNum");
                _OfflineRefundNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfflineRefundNum");
                OnOfflineRefundNumChanged();
            }
        }
        private Nullable<global::System.Int32> _OfflineRefundNum;
        partial void OnOfflineRefundNumChanging(Nullable<global::System.Int32> value);
        partial void OnOfflineRefundNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualOfflineRefundNum
        {
            get
            {
                return _ActualOfflineRefundNum;
            }
            set
            {
                OnActualOfflineRefundNumChanging(value);
                ReportPropertyChanging("ActualOfflineRefundNum");
                _ActualOfflineRefundNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualOfflineRefundNum");
                OnActualOfflineRefundNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualOfflineRefundNum;
        partial void OnActualOfflineRefundNumChanging(Nullable<global::System.Int32> value);
        partial void OnActualOfflineRefundNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualSellNum
        {
            get
            {
                return _ActualSellNum;
            }
            set
            {
                OnActualSellNumChanging(value);
                ReportPropertyChanging("ActualSellNum");
                _ActualSellNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualSellNum");
                OnActualSellNumChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualSellNum;
        partial void OnActualSellNumChanging(Nullable<global::System.Int32> value);
        partial void OnActualSellNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualRefundPrice
        {
            get
            {
                return _ActualRefundPrice;
            }
            set
            {
                OnActualRefundPriceChanging(value);
                ReportPropertyChanging("ActualRefundPrice");
                _ActualRefundPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualRefundPrice");
                OnActualRefundPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualRefundPrice;
        partial void OnActualRefundPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnActualRefundPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalProfit
        {
            get
            {
                return _TotalProfit;
            }
            set
            {
                OnTotalProfitChanging(value);
                ReportPropertyChanging("TotalProfit");
                _TotalProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalProfit");
                OnTotalProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalProfit;
        partial void OnTotalProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalProfitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualTotalProfit
        {
            get
            {
                return _ActualTotalProfit;
            }
            set
            {
                OnActualTotalProfitChanging(value);
                ReportPropertyChanging("ActualTotalProfit");
                _ActualTotalProfit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualTotalProfit");
                OnActualTotalProfitChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualTotalProfit;
        partial void OnActualTotalProfitChanging(Nullable<global::System.Decimal> value);
        partial void OnActualTotalProfitChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalPayment
        {
            get
            {
                return _TotalPayment;
            }
            set
            {
                OnTotalPaymentChanging(value);
                ReportPropertyChanging("TotalPayment");
                _TotalPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPayment");
                OnTotalPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalPayment;
        partial void OnTotalPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalPaymentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualTotalPayment
        {
            get
            {
                return _ActualTotalPayment;
            }
            set
            {
                OnActualTotalPaymentChanging(value);
                ReportPropertyChanging("ActualTotalPayment");
                _ActualTotalPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualTotalPayment");
                OnActualTotalPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualTotalPayment;
        partial void OnActualTotalPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnActualTotalPaymentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurrentStatus
        {
            get
            {
                return _CurrentStatus;
            }
            set
            {
                OnCurrentStatusChanging(value);
                ReportPropertyChanging("CurrentStatus");
                _CurrentStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurrentStatus");
                OnCurrentStatusChanged();
            }
        }
        private global::System.String _CurrentStatus;
        partial void OnCurrentStatusChanging(global::System.String value);
        partial void OnCurrentStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApproveCHBResult
        {
            get
            {
                return _ApproveCHBResult;
            }
            set
            {
                OnApproveCHBResultChanging(value);
                ReportPropertyChanging("ApproveCHBResult");
                _ApproveCHBResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApproveCHBResult");
                OnApproveCHBResultChanged();
            }
        }
        private global::System.String _ApproveCHBResult;
        partial void OnApproveCHBResultChanging(global::System.String value);
        partial void OnApproveCHBResultChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByCity_GroupByItem", "GroupByCity")]
        public EntityCollection<GroupByCity> GroupByCity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByCity>("DSHOrderManagementModel.FK_GroupByCity_GroupByItem", "GroupByCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByCity>("DSHOrderManagementModel.FK_GroupByCity_GroupByItem", "GroupByCity", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_GroupByGroup", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupByItem_GroupByGroup", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupByItem_GroupByGroup", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupByItem_GroupByGroup", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupByItem_GroupByGroup", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_GroupByPortal", "GroupByPortal")]
        public GroupByPortal GroupByPortal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_GroupByItem_GroupByPortal", "GroupByPortal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_GroupByItem_GroupByPortal", "GroupByPortal").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByPortal> GroupByPortalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_GroupByItem_GroupByPortal", "GroupByPortal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByPortal>("DSHOrderManagementModel.FK_GroupByItem_GroupByPortal", "GroupByPortal", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_OrderDetail_GroupByItem", "OrderDetail")]
        public EntityCollection<OrderDetail> OrderDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetail>("DSHOrderManagementModel.FK_OrderDetail_GroupByItem", "OrderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetail>("DSHOrderManagementModel.FK_OrderDetail_GroupByItem", "OrderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User2", "User")]
        public User User2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User3", "User")]
        public User User3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User4", "User")]
        public User User4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_UploadFile", "UploadFile")]
        public UploadFile UploadFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadFile> UploadFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_Payment_GroupByItem", "Payment")]
        public EntityCollection<Payment> Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("DSHOrderManagementModel.FK_Payment_GroupByItem", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("DSHOrderManagementModel.FK_Payment_GroupByItem", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User", "User")]
        public User ApproveTZUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveTZUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User1", "User")]
        public User ApproveCHBUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveCHBUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User2", "User")]
        public User ApproveSJBUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveSJBUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User2", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User3", "User")]
        public User ApproveXSZLUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ApproveXSZLUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User3", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User4", "User")]
        public User ScoreUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ScoreUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupByItem_User4", "User", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_UploadFile", "UploadFile")]
        public UploadFile ApproveCHBUploadFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadFile> ApproveCHBUploadFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadFile>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "UploadFile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupByPortal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupByPortal : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupByPortal 对象。
        /// </summary>
        /// <param name="groupByPortalID">GroupByPortalID 属性的初始值。</param>
        public static GroupByPortal CreateGroupByPortal(global::System.Int32 groupByPortalID)
        {
            GroupByPortal groupByPortal = new GroupByPortal();
            groupByPortal.GroupByPortalID = groupByPortalID;
            return groupByPortal;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByPortalID
        {
            get
            {
                return _GroupByPortalID;
            }
            set
            {
                if (_GroupByPortalID != value)
                {
                    OnGroupByPortalIDChanging(value);
                    ReportPropertyChanging("GroupByPortalID");
                    _GroupByPortalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupByPortalID");
                    OnGroupByPortalIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupByPortalID;
        partial void OnGroupByPortalIDChanging(global::System.Int32 value);
        partial void OnGroupByPortalIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortalName
        {
            get
            {
                return _PortalName;
            }
            set
            {
                OnPortalNameChanging(value);
                ReportPropertyChanging("PortalName");
                _PortalName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortalName");
                OnPortalNameChanged();
            }
        }
        private global::System.String _PortalName;
        partial void OnPortalNameChanging(global::System.String value);
        partial void OnPortalNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_GroupByPortal", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_GroupByPortal", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_GroupByPortal", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_ApproveRecordGroupBy_GroupByPortal", "ApproveRecordGroupBy")]
        public EntityCollection<ApproveRecordGroupBy> ApproveRecordGroupBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApproveRecordGroupBy>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByPortal", "ApproveRecordGroupBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApproveRecordGroupBy>("DSHOrderManagementModel.FK_ApproveRecordGroupBy_GroupByPortal", "ApproveRecordGroupBy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupBySales")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupBySales : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupBySales 对象。
        /// </summary>
        /// <param name="groupBySalesID">GroupBySalesID 属性的初始值。</param>
        public static GroupBySales CreateGroupBySales(global::System.Int32 groupBySalesID)
        {
            GroupBySales groupBySales = new GroupBySales();
            groupBySales.GroupBySalesID = groupBySalesID;
            return groupBySales;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupBySalesID
        {
            get
            {
                return _GroupBySalesID;
            }
            set
            {
                if (_GroupBySalesID != value)
                {
                    OnGroupBySalesIDChanging(value);
                    ReportPropertyChanging("GroupBySalesID");
                    _GroupBySalesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupBySalesID");
                    OnGroupBySalesIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupBySalesID;
        partial void OnGroupBySalesIDChanging(global::System.Int32 value);
        partial void OnGroupBySalesIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupBySales_GroupBySales", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupBySales_GroupBySales", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupBySales_GroupBySales", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupBySales_GroupBySales", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupBySales_GroupBySales", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupBySales_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupBySales_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupBySales_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_GroupBySales_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_GroupBySales_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupDRDWuLiu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupDRDWuLiu : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupDRDWuLiu 对象。
        /// </summary>
        /// <param name="groupDRDWuLiuID">GroupDRDWuLiuID 属性的初始值。</param>
        /// <param name="groupByGroupID">GroupByGroupID 属性的初始值。</param>
        public static GroupDRDWuLiu CreateGroupDRDWuLiu(global::System.Int32 groupDRDWuLiuID, global::System.Int32 groupByGroupID)
        {
            GroupDRDWuLiu groupDRDWuLiu = new GroupDRDWuLiu();
            groupDRDWuLiu.GroupDRDWuLiuID = groupDRDWuLiuID;
            groupDRDWuLiu.GroupByGroupID = groupByGroupID;
            return groupDRDWuLiu;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupDRDWuLiuID
        {
            get
            {
                return _GroupDRDWuLiuID;
            }
            set
            {
                if (_GroupDRDWuLiuID != value)
                {
                    OnGroupDRDWuLiuIDChanging(value);
                    ReportPropertyChanging("GroupDRDWuLiuID");
                    _GroupDRDWuLiuID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupDRDWuLiuID");
                    OnGroupDRDWuLiuIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupDRDWuLiuID;
        partial void OnGroupDRDWuLiuIDChanging(global::System.Int32 value);
        partial void OnGroupDRDWuLiuIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(global::System.Int32 value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceOrg
        {
            get
            {
                return _PriceOrg;
            }
            set
            {
                OnPriceOrgChanging(value);
                ReportPropertyChanging("PriceOrg");
                _PriceOrg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceOrg");
                OnPriceOrgChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceOrg;
        partial void OnPriceOrgChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceOrgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceInOffline
        {
            get
            {
                return _PriceInOffline;
            }
            set
            {
                OnPriceInOfflineChanging(value);
                ReportPropertyChanging("PriceInOffline");
                _PriceInOffline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceInOffline");
                OnPriceInOfflineChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceInOffline;
        partial void OnPriceInOfflineChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceInOfflineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceLowest
        {
            get
            {
                return _PriceLowest;
            }
            set
            {
                OnPriceLowestChanging(value);
                ReportPropertyChanging("PriceLowest");
                _PriceLowest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceLowest");
                OnPriceLowestChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceLowest;
        partial void OnPriceLowestChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceLowestChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceWuLiuFee
        {
            get
            {
                return _PriceWuLiuFee;
            }
            set
            {
                OnPriceWuLiuFeeChanging(value);
                ReportPropertyChanging("PriceWuLiuFee");
                _PriceWuLiuFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceWuLiuFee");
                OnPriceWuLiuFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceWuLiuFee;
        partial void OnPriceWuLiuFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceWuLiuFeeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PricePackage
        {
            get
            {
                return _PricePackage;
            }
            set
            {
                OnPricePackageChanging(value);
                ReportPropertyChanging("PricePackage");
                _PricePackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PricePackage");
                OnPricePackageChanged();
            }
        }
        private Nullable<global::System.Decimal> _PricePackage;
        partial void OnPricePackageChanging(Nullable<global::System.Decimal> value);
        partial void OnPricePackageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceSuggest
        {
            get
            {
                return _PriceSuggest;
            }
            set
            {
                OnPriceSuggestChanging(value);
                ReportPropertyChanging("PriceSuggest");
                _PriceSuggest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceSuggest");
                OnPriceSuggestChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceSuggest;
        partial void OnPriceSuggestChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceSuggestChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PriceDiscount
        {
            get
            {
                return _PriceDiscount;
            }
            set
            {
                OnPriceDiscountChanging(value);
                ReportPropertyChanging("PriceDiscount");
                _PriceDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceDiscount");
                OnPriceDiscountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PriceDiscount;
        partial void OnPriceDiscountChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceDiscountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WeightGross
        {
            get
            {
                return _WeightGross;
            }
            set
            {
                OnWeightGrossChanging(value);
                ReportPropertyChanging("WeightGross");
                _WeightGross = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightGross");
                OnWeightGrossChanged();
            }
        }
        private Nullable<global::System.Decimal> _WeightGross;
        partial void OnWeightGrossChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightGrossChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> WeightNet
        {
            get
            {
                return _WeightNet;
            }
            set
            {
                OnWeightNetChanging(value);
                ReportPropertyChanging("WeightNet");
                _WeightNet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightNet");
                OnWeightNetChanged();
            }
        }
        private Nullable<global::System.Decimal> _WeightNet;
        partial void OnWeightNetChanging(Nullable<global::System.Decimal> value);
        partial void OnWeightNetChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShelfLife
        {
            get
            {
                return _ShelfLife;
            }
            set
            {
                OnShelfLifeChanging(value);
                ReportPropertyChanging("ShelfLife");
                _ShelfLife = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShelfLife");
                OnShelfLifeChanged();
            }
        }
        private global::System.String _ShelfLife;
        partial void OnShelfLifeChanging(global::System.String value);
        partial void OnShelfLifeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReadyCount
        {
            get
            {
                return _ReadyCount;
            }
            set
            {
                OnReadyCountChanging(value);
                ReportPropertyChanging("ReadyCount");
                _ReadyCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReadyCount");
                OnReadyCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ReadyCount;
        partial void OnReadyCountChanging(Nullable<global::System.Int32> value);
        partial void OnReadyCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SendTimeType
        {
            get
            {
                return _SendTimeType;
            }
            set
            {
                OnSendTimeTypeChanging(value);
                ReportPropertyChanging("SendTimeType");
                _SendTimeType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SendTimeType");
                OnSendTimeTypeChanged();
            }
        }
        private global::System.String _SendTimeType;
        partial void OnSendTimeTypeChanging(global::System.String value);
        partial void OnSendTimeTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaRangType
        {
            get
            {
                return _AreaRangType;
            }
            set
            {
                OnAreaRangTypeChanging(value);
                ReportPropertyChanging("AreaRangType");
                _AreaRangType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaRangType");
                OnAreaRangTypeChanged();
            }
        }
        private global::System.String _AreaRangType;
        partial void OnAreaRangTypeChanging(global::System.String value);
        partial void OnAreaRangTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShapeType
        {
            get
            {
                return _ShapeType;
            }
            set
            {
                OnShapeTypeChanging(value);
                ReportPropertyChanging("ShapeType");
                _ShapeType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShapeType");
                OnShapeTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ShapeType;
        partial void OnShapeTypeChanging(Nullable<global::System.Int32> value);
        partial void OnShapeTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsLegal
        {
            get
            {
                return _IsLegal;
            }
            set
            {
                OnIsLegalChanging(value);
                ReportPropertyChanging("IsLegal");
                _IsLegal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLegal");
                OnIsLegalChanged();
            }
        }
        private Nullable<global::System.Int32> _IsLegal;
        partial void OnIsLegalChanging(Nullable<global::System.Int32> value);
        partial void OnIsLegalChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                OnFeatureChanging(value);
                ReportPropertyChanging("Feature");
                _Feature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Feature");
                OnFeatureChanged();
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeleteInd;
        partial void OnDeleteIndChanging(Nullable<global::System.Boolean> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupDRDWuLiu_GroupByGroup", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupDRDWuLiu_GroupByGroup", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupDRDWuLiu_GroupByGroup", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupDRDWuLiu_GroupByGroup", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupDRDWuLiu_GroupByGroup", "GroupByGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupGeneral")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupGeneral : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupGeneral 对象。
        /// </summary>
        /// <param name="groupGeneralID">GroupGeneralID 属性的初始值。</param>
        /// <param name="groupByGroupID">GroupByGroupID 属性的初始值。</param>
        public static GroupGeneral CreateGroupGeneral(global::System.Int32 groupGeneralID, global::System.Int32 groupByGroupID)
        {
            GroupGeneral groupGeneral = new GroupGeneral();
            groupGeneral.GroupGeneralID = groupGeneralID;
            groupGeneral.GroupByGroupID = groupByGroupID;
            return groupGeneral;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupGeneralID
        {
            get
            {
                return _GroupGeneralID;
            }
            set
            {
                if (_GroupGeneralID != value)
                {
                    OnGroupGeneralIDChanging(value);
                    ReportPropertyChanging("GroupGeneralID");
                    _GroupGeneralID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupGeneralID");
                    OnGroupGeneralIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupGeneralID;
        partial void OnGroupGeneralIDChanging(global::System.Int32 value);
        partial void OnGroupGeneralIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(global::System.Int32 value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserCountPerTicket
        {
            get
            {
                return _UserCountPerTicket;
            }
            set
            {
                OnUserCountPerTicketChanging(value);
                ReportPropertyChanging("UserCountPerTicket");
                _UserCountPerTicket = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserCountPerTicket");
                OnUserCountPerTicketChanged();
            }
        }
        private Nullable<global::System.Int32> _UserCountPerTicket;
        partial void OnUserCountPerTicketChanging(Nullable<global::System.Int32> value);
        partial void OnUserCountPerTicketChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TicketCountPerTime
        {
            get
            {
                return _TicketCountPerTime;
            }
            set
            {
                OnTicketCountPerTimeChanging(value);
                ReportPropertyChanging("TicketCountPerTime");
                _TicketCountPerTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketCountPerTime");
                OnTicketCountPerTimeChanged();
            }
        }
        private Nullable<global::System.Int32> _TicketCountPerTime;
        partial void OnTicketCountPerTimeChanging(Nullable<global::System.Int32> value);
        partial void OnTicketCountPerTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DayCountAhead
        {
            get
            {
                return _DayCountAhead;
            }
            set
            {
                OnDayCountAheadChanging(value);
                ReportPropertyChanging("DayCountAhead");
                _DayCountAhead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayCountAhead");
                OnDayCountAheadChanged();
            }
        }
        private Nullable<global::System.Int32> _DayCountAhead;
        partial void OnDayCountAheadChanging(Nullable<global::System.Int32> value);
        partial void OnDayCountAheadChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimeCountPerDay
        {
            get
            {
                return _TimeCountPerDay;
            }
            set
            {
                OnTimeCountPerDayChanging(value);
                ReportPropertyChanging("TimeCountPerDay");
                _TimeCountPerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeCountPerDay");
                OnTimeCountPerDayChanged();
            }
        }
        private Nullable<global::System.Int32> _TimeCountPerDay;
        partial void OnTimeCountPerDayChanging(Nullable<global::System.Int32> value);
        partial void OnTimeCountPerDayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDayBegin
        {
            get
            {
                return _EffectiveDayBegin;
            }
            set
            {
                OnEffectiveDayBeginChanging(value);
                ReportPropertyChanging("EffectiveDayBegin");
                _EffectiveDayBegin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDayBegin");
                OnEffectiveDayBeginChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDayBegin;
        partial void OnEffectiveDayBeginChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDayBeginChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDayEnd
        {
            get
            {
                return _EffectiveDayEnd;
            }
            set
            {
                OnEffectiveDayEndChanging(value);
                ReportPropertyChanging("EffectiveDayEnd");
                _EffectiveDayEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDayEnd");
                OnEffectiveDayEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDayEnd;
        partial void OnEffectiveDayEndChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDayEndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpperLimitCount
        {
            get
            {
                return _UpperLimitCount;
            }
            set
            {
                OnUpperLimitCountChanging(value);
                ReportPropertyChanging("UpperLimitCount");
                _UpperLimitCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpperLimitCount");
                OnUpperLimitCountChanged();
            }
        }
        private Nullable<global::System.Int32> _UpperLimitCount;
        partial void OnUpperLimitCountChanging(Nullable<global::System.Int32> value);
        partial void OnUpperLimitCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceiveTime
        {
            get
            {
                return _ReceiveTime;
            }
            set
            {
                OnReceiveTimeChanging(value);
                ReportPropertyChanging("ReceiveTime");
                _ReceiveTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiveTime");
                OnReceiveTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceiveTime;
        partial void OnReceiveTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnReceiveTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoinJWY
        {
            get
            {
                return _JoinJWY;
            }
            set
            {
                OnJoinJWYChanging(value);
                ReportPropertyChanging("JoinJWY");
                _JoinJWY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JoinJWY");
                OnJoinJWYChanged();
            }
        }
        private global::System.String _JoinJWY;
        partial void OnJoinJWYChanging(global::System.String value);
        partial void OnJoinJWYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private global::System.String _Other;
        partial void OnOtherChanging(global::System.String value);
        partial void OnOtherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> IfBelowScoreTM
        {
            get
            {
                return _IfBelowScoreTM;
            }
            set
            {
                OnIfBelowScoreTMChanging(value);
                ReportPropertyChanging("IfBelowScoreTM");
                _IfBelowScoreTM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IfBelowScoreTM");
                OnIfBelowScoreTMChanged();
            }
        }
        private Nullable<global::System.Decimal> _IfBelowScoreTM;
        partial void OnIfBelowScoreTMChanging(Nullable<global::System.Decimal> value);
        partial void OnIfBelowScoreTMChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YiPayJiaTM
        {
            get
            {
                return _YiPayJiaTM;
            }
            set
            {
                OnYiPayJiaTMChanging(value);
                ReportPropertyChanging("YiPayJiaTM");
                _YiPayJiaTM = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YiPayJiaTM");
                OnYiPayJiaTMChanged();
            }
        }
        private Nullable<global::System.Int32> _YiPayJiaTM;
        partial void OnYiPayJiaTMChanging(Nullable<global::System.Int32> value);
        partial void OnYiPayJiaTMChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> IfBelowScoreTB
        {
            get
            {
                return _IfBelowScoreTB;
            }
            set
            {
                OnIfBelowScoreTBChanging(value);
                ReportPropertyChanging("IfBelowScoreTB");
                _IfBelowScoreTB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IfBelowScoreTB");
                OnIfBelowScoreTBChanged();
            }
        }
        private Nullable<global::System.Decimal> _IfBelowScoreTB;
        partial void OnIfBelowScoreTBChanging(Nullable<global::System.Decimal> value);
        partial void OnIfBelowScoreTBChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YiPayJiaTB
        {
            get
            {
                return _YiPayJiaTB;
            }
            set
            {
                OnYiPayJiaTBChanging(value);
                ReportPropertyChanging("YiPayJiaTB");
                _YiPayJiaTB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YiPayJiaTB");
                OnYiPayJiaTBChanged();
            }
        }
        private Nullable<global::System.Int32> _YiPayJiaTB;
        partial void OnYiPayJiaTBChanging(Nullable<global::System.Int32> value);
        partial void OnYiPayJiaTBChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeleteInd;
        partial void OnDeleteIndChanging(Nullable<global::System.Boolean> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupGeneral_GroupByGroup", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupGeneral_GroupByGroup", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupGeneral_GroupByGroup", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupGeneral_GroupByGroup", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupGeneral_GroupByGroup", "GroupByGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupLvYou")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupLvYou : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupLvYou 对象。
        /// </summary>
        /// <param name="groupLvYouID">GroupLvYouID 属性的初始值。</param>
        /// <param name="groupByGroupID">GroupByGroupID 属性的初始值。</param>
        public static GroupLvYou CreateGroupLvYou(global::System.Int32 groupLvYouID, global::System.Int32 groupByGroupID)
        {
            GroupLvYou groupLvYou = new GroupLvYou();
            groupLvYou.GroupLvYouID = groupLvYouID;
            groupLvYou.GroupByGroupID = groupByGroupID;
            return groupLvYou;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupLvYouID
        {
            get
            {
                return _GroupLvYouID;
            }
            set
            {
                if (_GroupLvYouID != value)
                {
                    OnGroupLvYouIDChanging(value);
                    ReportPropertyChanging("GroupLvYouID");
                    _GroupLvYouID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupLvYouID");
                    OnGroupLvYouIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupLvYouID;
        partial void OnGroupLvYouIDChanging(global::System.Int32 value);
        partial void OnGroupLvYouIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(global::System.Int32 value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LYCPXLAP
        {
            get
            {
                return _LYCPXLAP;
            }
            set
            {
                OnLYCPXLAPChanging(value);
                ReportPropertyChanging("LYCPXLAP");
                _LYCPXLAP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LYCPXLAP");
                OnLYCPXLAPChanged();
            }
        }
        private global::System.String _LYCPXLAP;
        partial void OnLYCPXLAPChanging(global::System.String value);
        partial void OnLYCPXLAPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FYYBH
        {
            get
            {
                return _FYYBH;
            }
            set
            {
                OnFYYBHChanging(value);
                ReportPropertyChanging("FYYBH");
                _FYYBH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FYYBH");
                OnFYYBHChanged();
            }
        }
        private global::System.String _FYYBH;
        partial void OnFYYBHChanging(global::System.String value);
        partial void OnFYYBHChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FYWBH
        {
            get
            {
                return _FYWBH;
            }
            set
            {
                OnFYWBHChanging(value);
                ReportPropertyChanging("FYWBH");
                _FYWBH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FYWBH");
                OnFYWBHChanged();
            }
        }
        private global::System.String _FYWBH;
        partial void OnFYWBHChanging(global::System.String value);
        partial void OnFYWBHChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JiuDianJB
        {
            get
            {
                return _JiuDianJB;
            }
            set
            {
                OnJiuDianJBChanging(value);
                ReportPropertyChanging("JiuDianJB");
                _JiuDianJB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JiuDianJB");
                OnJiuDianJBChanged();
            }
        }
        private global::System.String _JiuDianJB;
        partial void OnJiuDianJBChanging(global::System.String value);
        partial void OnJiuDianJBChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CanBiao
        {
            get
            {
                return _CanBiao;
            }
            set
            {
                OnCanBiaoChanging(value);
                ReportPropertyChanging("CanBiao");
                _CanBiao = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanBiao");
                OnCanBiaoChanged();
            }
        }
        private Nullable<global::System.Decimal> _CanBiao;
        partial void OnCanBiaoChanging(Nullable<global::System.Decimal> value);
        partial void OnCanBiaoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PreDays
        {
            get
            {
                return _PreDays;
            }
            set
            {
                OnPreDaysChanging(value);
                ReportPropertyChanging("PreDays");
                _PreDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreDays");
                OnPreDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _PreDays;
        partial void OnPreDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnPreDaysChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeJieDaiCount
        {
            get
            {
                return _KeJieDaiCount;
            }
            set
            {
                OnKeJieDaiCountChanging(value);
                ReportPropertyChanging("KeJieDaiCount");
                _KeJieDaiCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeJieDaiCount");
                OnKeJieDaiCountChanged();
            }
        }
        private Nullable<global::System.Int32> _KeJieDaiCount;
        partial void OnKeJieDaiCountChanging(Nullable<global::System.Int32> value);
        partial void OnKeJieDaiCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JiaTongGongJu
        {
            get
            {
                return _JiaTongGongJu;
            }
            set
            {
                OnJiaTongGongJuChanging(value);
                ReportPropertyChanging("JiaTongGongJu");
                _JiaTongGongJu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JiaTongGongJu");
                OnJiaTongGongJuChanged();
            }
        }
        private Nullable<global::System.Int32> _JiaTongGongJu;
        partial void OnJiaTongGongJuChanging(Nullable<global::System.Int32> value);
        partial void OnJiaTongGongJuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JiaTongGongJuOther
        {
            get
            {
                return _JiaTongGongJuOther;
            }
            set
            {
                OnJiaTongGongJuOtherChanging(value);
                ReportPropertyChanging("JiaTongGongJuOther");
                _JiaTongGongJuOther = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JiaTongGongJuOther");
                OnJiaTongGongJuOtherChanged();
            }
        }
        private global::System.String _JiaTongGongJuOther;
        partial void OnJiaTongGongJuOtherChanging(global::System.String value);
        partial void OnJiaTongGongJuOtherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChuTuanTime
        {
            get
            {
                return _ChuTuanTime;
            }
            set
            {
                OnChuTuanTimeChanging(value);
                ReportPropertyChanging("ChuTuanTime");
                _ChuTuanTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChuTuanTime");
                OnChuTuanTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChuTuanTime;
        partial void OnChuTuanTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnChuTuanTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Shopping
        {
            get
            {
                return _Shopping;
            }
            set
            {
                OnShoppingChanging(value);
                ReportPropertyChanging("Shopping");
                _Shopping = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shopping");
                OnShoppingChanged();
            }
        }
        private Nullable<global::System.Int32> _Shopping;
        partial void OnShoppingChanging(Nullable<global::System.Int32> value);
        partial void OnShoppingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShoppingCount
        {
            get
            {
                return _ShoppingCount;
            }
            set
            {
                OnShoppingCountChanging(value);
                ReportPropertyChanging("ShoppingCount");
                _ShoppingCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShoppingCount");
                OnShoppingCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ShoppingCount;
        partial void OnShoppingCountChanging(Nullable<global::System.Int32> value);
        partial void OnShoppingCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChenTuanReShu
        {
            get
            {
                return _ChenTuanReShu;
            }
            set
            {
                OnChenTuanReShuChanging(value);
                ReportPropertyChanging("ChenTuanReShu");
                _ChenTuanReShu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChenTuanReShu");
                OnChenTuanReShuChanged();
            }
        }
        private Nullable<global::System.Int32> _ChenTuanReShu;
        partial void OnChenTuanReShuChanging(Nullable<global::System.Int32> value);
        partial void OnChenTuanReShuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CanJiaJWY
        {
            get
            {
                return _CanJiaJWY;
            }
            set
            {
                OnCanJiaJWYChanging(value);
                ReportPropertyChanging("CanJiaJWY");
                _CanJiaJWY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanJiaJWY");
                OnCanJiaJWYChanged();
            }
        }
        private Nullable<global::System.Int32> _CanJiaJWY;
        partial void OnCanJiaJWYChanging(Nullable<global::System.Int32> value);
        partial void OnCanJiaJWYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private global::System.String _Other;
        partial void OnOtherChanging(global::System.String value);
        partial void OnOtherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> IfBelowScore
        {
            get
            {
                return _IfBelowScore;
            }
            set
            {
                OnIfBelowScoreChanging(value);
                ReportPropertyChanging("IfBelowScore");
                _IfBelowScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IfBelowScore");
                OnIfBelowScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _IfBelowScore;
        partial void OnIfBelowScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnIfBelowScoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YiPayJia
        {
            get
            {
                return _YiPayJia;
            }
            set
            {
                OnYiPayJiaChanging(value);
                ReportPropertyChanging("YiPayJia");
                _YiPayJia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YiPayJia");
                OnYiPayJiaChanged();
            }
        }
        private Nullable<global::System.Decimal> _YiPayJia;
        partial void OnYiPayJiaChanging(Nullable<global::System.Decimal> value);
        partial void OnYiPayJiaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeleteInd;
        partial void OnDeleteIndChanging(Nullable<global::System.Boolean> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupLvYou_GroupByGroup", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupLvYou_GroupByGroup", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupLvYou_GroupByGroup", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupLvYou_GroupByGroup", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupLvYou_GroupByGroup", "GroupByGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="GroupSheYing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupSheYing : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GroupSheYing 对象。
        /// </summary>
        /// <param name="groupSheYingID">GroupSheYingID 属性的初始值。</param>
        /// <param name="groupByGroupID">GroupByGroupID 属性的初始值。</param>
        public static GroupSheYing CreateGroupSheYing(global::System.Int32 groupSheYingID, global::System.Int32 groupByGroupID)
        {
            GroupSheYing groupSheYing = new GroupSheYing();
            groupSheYing.GroupSheYingID = groupSheYingID;
            groupSheYing.GroupByGroupID = groupByGroupID;
            return groupSheYing;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupSheYingID
        {
            get
            {
                return _GroupSheYingID;
            }
            set
            {
                if (_GroupSheYingID != value)
                {
                    OnGroupSheYingIDChanging(value);
                    ReportPropertyChanging("GroupSheYingID");
                    _GroupSheYingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupSheYingID");
                    OnGroupSheYingIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupSheYingID;
        partial void OnGroupSheYingIDChanging(global::System.Int32 value);
        partial void OnGroupSheYingIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupByGroupID
        {
            get
            {
                return _GroupByGroupID;
            }
            set
            {
                OnGroupByGroupIDChanging(value);
                ReportPropertyChanging("GroupByGroupID");
                _GroupByGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByGroupID");
                OnGroupByGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupByGroupID;
        partial void OnGroupByGroupIDChanging(global::System.Int32 value);
        partial void OnGroupByGroupIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SheYingType
        {
            get
            {
                return _SheYingType;
            }
            set
            {
                OnSheYingTypeChanging(value);
                ReportPropertyChanging("SheYingType");
                _SheYingType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SheYingType");
                OnSheYingTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _SheYingType;
        partial void OnSheYingTypeChanging(Nullable<global::System.Int32> value);
        partial void OnSheYingTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaiSheDays
        {
            get
            {
                return _PaiSheDays;
            }
            set
            {
                OnPaiSheDaysChanging(value);
                ReportPropertyChanging("PaiSheDays");
                _PaiSheDays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaiSheDays");
                OnPaiSheDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaiSheDays;
        partial void OnPaiSheDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnPaiSheDaysChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaiSheAddressInner
        {
            get
            {
                return _PaiSheAddressInner;
            }
            set
            {
                OnPaiSheAddressInnerChanging(value);
                ReportPropertyChanging("PaiSheAddressInner");
                _PaiSheAddressInner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaiSheAddressInner");
                OnPaiSheAddressInnerChanged();
            }
        }
        private global::System.String _PaiSheAddressInner;
        partial void OnPaiSheAddressInnerChanging(global::System.String value);
        partial void OnPaiSheAddressInnerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaiSheAddressOut
        {
            get
            {
                return _PaiSheAddressOut;
            }
            set
            {
                OnPaiSheAddressOutChanging(value);
                ReportPropertyChanging("PaiSheAddressOut");
                _PaiSheAddressOut = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaiSheAddressOut");
                OnPaiSheAddressOutChanged();
            }
        }
        private global::System.String _PaiSheAddressOut;
        partial void OnPaiSheAddressOutChanging(global::System.String value);
        partial void OnPaiSheAddressOutChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreDays
        {
            get
            {
                return _PreDays;
            }
            set
            {
                OnPreDaysChanging(value);
                ReportPropertyChanging("PreDays");
                _PreDays = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreDays");
                OnPreDaysChanged();
            }
        }
        private global::System.String _PreDays;
        partial void OnPreDaysChanging(global::System.String value);
        partial void OnPreDaysChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuJinDays
        {
            get
            {
                return _QuJinDays;
            }
            set
            {
                OnQuJinDaysChanging(value);
                ReportPropertyChanging("QuJinDays");
                _QuJinDays = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuJinDays");
                OnQuJinDaysChanged();
            }
        }
        private global::System.String _QuJinDays;
        partial void OnQuJinDaysChanging(global::System.String value);
        partial void OnQuJinDaysChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaiSheCount
        {
            get
            {
                return _PaiSheCount;
            }
            set
            {
                OnPaiSheCountChanging(value);
                ReportPropertyChanging("PaiSheCount");
                _PaiSheCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaiSheCount");
                OnPaiSheCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PaiSheCount;
        partial void OnPaiSheCountChanging(Nullable<global::System.Int32> value);
        partial void OnPaiSheCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JingXiuCount
        {
            get
            {
                return _JingXiuCount;
            }
            set
            {
                OnJingXiuCountChanging(value);
                ReportPropertyChanging("JingXiuCount");
                _JingXiuCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JingXiuCount");
                OnJingXiuCountChanged();
            }
        }
        private Nullable<global::System.Int32> _JingXiuCount;
        partial void OnJingXiuCountChanging(Nullable<global::System.Int32> value);
        partial void OnJingXiuCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InDisCount
        {
            get
            {
                return _InDisCount;
            }
            set
            {
                OnInDisCountChanging(value);
                ReportPropertyChanging("InDisCount");
                _InDisCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InDisCount");
                OnInDisCountChanged();
            }
        }
        private Nullable<global::System.Int32> _InDisCount;
        partial void OnInDisCountChanging(Nullable<global::System.Int32> value);
        partial void OnInDisCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> JingXiuPriceExta
        {
            get
            {
                return _JingXiuPriceExta;
            }
            set
            {
                OnJingXiuPriceExtaChanging(value);
                ReportPropertyChanging("JingXiuPriceExta");
                _JingXiuPriceExta = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JingXiuPriceExta");
                OnJingXiuPriceExtaChanged();
            }
        }
        private Nullable<global::System.Decimal> _JingXiuPriceExta;
        partial void OnJingXiuPriceExtaChanging(Nullable<global::System.Decimal> value);
        partial void OnJingXiuPriceExtaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> JingXiuPriceExtaRuCe
        {
            get
            {
                return _JingXiuPriceExtaRuCe;
            }
            set
            {
                OnJingXiuPriceExtaRuCeChanging(value);
                ReportPropertyChanging("JingXiuPriceExtaRuCe");
                _JingXiuPriceExtaRuCe = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JingXiuPriceExtaRuCe");
                OnJingXiuPriceExtaRuCeChanged();
            }
        }
        private Nullable<global::System.Decimal> _JingXiuPriceExtaRuCe;
        partial void OnJingXiuPriceExtaRuCeChanging(Nullable<global::System.Decimal> value);
        partial void OnJingXiuPriceExtaRuCeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Size1
        {
            get
            {
                return _Size1;
            }
            set
            {
                OnSize1Changing(value);
                ReportPropertyChanging("Size1");
                _Size1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size1");
                OnSize1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Size1;
        partial void OnSize1Changing(Nullable<global::System.Decimal> value);
        partial void OnSize1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GongYi1
        {
            get
            {
                return _GongYi1;
            }
            set
            {
                OnGongYi1Changing(value);
                ReportPropertyChanging("GongYi1");
                _GongYi1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GongYi1");
                OnGongYi1Changed();
            }
        }
        private global::System.String _GongYi1;
        partial void OnGongYi1Changing(global::System.String value);
        partial void OnGongYi1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Size2
        {
            get
            {
                return _Size2;
            }
            set
            {
                OnSize2Changing(value);
                ReportPropertyChanging("Size2");
                _Size2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size2");
                OnSize2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Size2;
        partial void OnSize2Changing(Nullable<global::System.Decimal> value);
        partial void OnSize2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GongYi2
        {
            get
            {
                return _GongYi2;
            }
            set
            {
                OnGongYi2Changing(value);
                ReportPropertyChanging("GongYi2");
                _GongYi2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GongYi2");
                OnGongYi2Changed();
            }
        }
        private global::System.String _GongYi2;
        partial void OnGongYi2Changing(global::System.String value);
        partial void OnGongYi2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Size3
        {
            get
            {
                return _Size3;
            }
            set
            {
                OnSize3Changing(value);
                ReportPropertyChanging("Size3");
                _Size3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size3");
                OnSize3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Size3;
        partial void OnSize3Changing(Nullable<global::System.Decimal> value);
        partial void OnSize3Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GongYi3
        {
            get
            {
                return _GongYi3;
            }
            set
            {
                OnGongYi3Changing(value);
                ReportPropertyChanging("GongYi3");
                _GongYi3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GongYi3");
                OnGongYi3Changed();
            }
        }
        private global::System.String _GongYi3;
        partial void OnGongYi3Changing(global::System.String value);
        partial void OnGongYi3Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RuCeCount1
        {
            get
            {
                return _RuCeCount1;
            }
            set
            {
                OnRuCeCount1Changing(value);
                ReportPropertyChanging("RuCeCount1");
                _RuCeCount1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuCeCount1");
                OnRuCeCount1Changed();
            }
        }
        private Nullable<global::System.Int32> _RuCeCount1;
        partial void OnRuCeCount1Changing(Nullable<global::System.Int32> value);
        partial void OnRuCeCount1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RuCeSize1
        {
            get
            {
                return _RuCeSize1;
            }
            set
            {
                OnRuCeSize1Changing(value);
                ReportPropertyChanging("RuCeSize1");
                _RuCeSize1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuCeSize1");
                OnRuCeSize1Changed();
            }
        }
        private Nullable<global::System.Decimal> _RuCeSize1;
        partial void OnRuCeSize1Changing(Nullable<global::System.Decimal> value);
        partial void OnRuCeSize1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuCeGongYi1
        {
            get
            {
                return _RuCeGongYi1;
            }
            set
            {
                OnRuCeGongYi1Changing(value);
                ReportPropertyChanging("RuCeGongYi1");
                _RuCeGongYi1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RuCeGongYi1");
                OnRuCeGongYi1Changed();
            }
        }
        private global::System.String _RuCeGongYi1;
        partial void OnRuCeGongYi1Changing(global::System.String value);
        partial void OnRuCeGongYi1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RuCeCount2
        {
            get
            {
                return _RuCeCount2;
            }
            set
            {
                OnRuCeCount2Changing(value);
                ReportPropertyChanging("RuCeCount2");
                _RuCeCount2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuCeCount2");
                OnRuCeCount2Changed();
            }
        }
        private Nullable<global::System.Int32> _RuCeCount2;
        partial void OnRuCeCount2Changing(Nullable<global::System.Int32> value);
        partial void OnRuCeCount2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RuCeSize2
        {
            get
            {
                return _RuCeSize2;
            }
            set
            {
                OnRuCeSize2Changing(value);
                ReportPropertyChanging("RuCeSize2");
                _RuCeSize2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RuCeSize2");
                OnRuCeSize2Changed();
            }
        }
        private Nullable<global::System.Decimal> _RuCeSize2;
        partial void OnRuCeSize2Changing(Nullable<global::System.Decimal> value);
        partial void OnRuCeSize2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuCeGongYi2
        {
            get
            {
                return _RuCeGongYi2;
            }
            set
            {
                OnRuCeGongYi2Changing(value);
                ReportPropertyChanging("RuCeGongYi2");
                _RuCeGongYi2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RuCeGongYi2");
                OnRuCeGongYi2Changed();
            }
        }
        private global::System.String _RuCeGongYi2;
        partial void OnRuCeGongYi2Changing(global::System.String value);
        partial void OnRuCeGongYi2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClothCount
        {
            get
            {
                return _ClothCount;
            }
            set
            {
                OnClothCountChanging(value);
                ReportPropertyChanging("ClothCount");
                _ClothCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClothCount");
                OnClothCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ClothCount;
        partial void OnClothCountChanging(Nullable<global::System.Int32> value);
        partial void OnClothCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HuaZhuangType
        {
            get
            {
                return _HuaZhuangType;
            }
            set
            {
                OnHuaZhuangTypeChanging(value);
                ReportPropertyChanging("HuaZhuangType");
                _HuaZhuangType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HuaZhuangType");
                OnHuaZhuangTypeChanged();
            }
        }
        private global::System.String _HuaZhuangType;
        partial void OnHuaZhuangTypeChanging(global::System.String value);
        partial void OnHuaZhuangTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BaiTai
        {
            get
            {
                return _BaiTai;
            }
            set
            {
                OnBaiTaiChanging(value);
                ReportPropertyChanging("BaiTai");
                _BaiTai = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaiTai");
                OnBaiTaiChanged();
            }
        }
        private Nullable<global::System.Int32> _BaiTai;
        partial void OnBaiTaiChanging(Nullable<global::System.Int32> value);
        partial void OnBaiTaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CaiZhi
        {
            get
            {
                return _CaiZhi;
            }
            set
            {
                OnCaiZhiChanging(value);
                ReportPropertyChanging("CaiZhi");
                _CaiZhi = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CaiZhi");
                OnCaiZhiChanged();
            }
        }
        private global::System.String _CaiZhi;
        partial void OnCaiZhiChanging(global::System.String value);
        partial void OnCaiZhiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HaiBaoCount
        {
            get
            {
                return _HaiBaoCount;
            }
            set
            {
                OnHaiBaoCountChanging(value);
                ReportPropertyChanging("HaiBaoCount");
                _HaiBaoCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HaiBaoCount");
                OnHaiBaoCountChanged();
            }
        }
        private Nullable<global::System.Int32> _HaiBaoCount;
        partial void OnHaiBaoCountChanging(Nullable<global::System.Int32> value);
        partial void OnHaiBaoCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HaiBaoSize
        {
            get
            {
                return _HaiBaoSize;
            }
            set
            {
                OnHaiBaoSizeChanging(value);
                ReportPropertyChanging("HaiBaoSize");
                _HaiBaoSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HaiBaoSize");
                OnHaiBaoSizeChanged();
            }
        }
        private Nullable<global::System.Decimal> _HaiBaoSize;
        partial void OnHaiBaoSizeChanging(Nullable<global::System.Decimal> value);
        partial void OnHaiBaoSizeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QianBaoCount
        {
            get
            {
                return _QianBaoCount;
            }
            set
            {
                OnQianBaoCountChanging(value);
                ReportPropertyChanging("QianBaoCount");
                _QianBaoCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QianBaoCount");
                OnQianBaoCountChanged();
            }
        }
        private Nullable<global::System.Int32> _QianBaoCount;
        partial void OnQianBaoCountChanging(Nullable<global::System.Int32> value);
        partial void OnQianBaoCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SongJieMao
        {
            get
            {
                return _SongJieMao;
            }
            set
            {
                OnSongJieMaoChanging(value);
                ReportPropertyChanging("SongJieMao");
                _SongJieMao = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SongJieMao");
                OnSongJieMaoChanged();
            }
        }
        private Nullable<global::System.Int32> _SongJieMao;
        partial void OnSongJieMaoChanging(Nullable<global::System.Int32> value);
        partial void OnSongJieMaoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BaoMenPiao
        {
            get
            {
                return _BaoMenPiao;
            }
            set
            {
                OnBaoMenPiaoChanging(value);
                ReportPropertyChanging("BaoMenPiao");
                _BaoMenPiao = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaoMenPiao");
                OnBaoMenPiaoChanged();
            }
        }
        private Nullable<global::System.Int32> _BaoMenPiao;
        partial void OnBaoMenPiaoChanging(Nullable<global::System.Int32> value);
        partial void OnBaoMenPiaoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JieDaiCount
        {
            get
            {
                return _JieDaiCount;
            }
            set
            {
                OnJieDaiCountChanging(value);
                ReportPropertyChanging("JieDaiCount");
                _JieDaiCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JieDaiCount");
                OnJieDaiCountChanged();
            }
        }
        private Nullable<global::System.Int32> _JieDaiCount;
        partial void OnJieDaiCountChanging(Nullable<global::System.Int32> value);
        partial void OnJieDaiCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CanJiaJWY
        {
            get
            {
                return _CanJiaJWY;
            }
            set
            {
                OnCanJiaJWYChanging(value);
                ReportPropertyChanging("CanJiaJWY");
                _CanJiaJWY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanJiaJWY");
                OnCanJiaJWYChanged();
            }
        }
        private Nullable<global::System.Int32> _CanJiaJWY;
        partial void OnCanJiaJWYChanging(Nullable<global::System.Int32> value);
        partial void OnCanJiaJWYChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Other
        {
            get
            {
                return _Other;
            }
            set
            {
                OnOtherChanging(value);
                ReportPropertyChanging("Other");
                _Other = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Other");
                OnOtherChanged();
            }
        }
        private global::System.String _Other;
        partial void OnOtherChanging(global::System.String value);
        partial void OnOtherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> IfBelowScore
        {
            get
            {
                return _IfBelowScore;
            }
            set
            {
                OnIfBelowScoreChanging(value);
                ReportPropertyChanging("IfBelowScore");
                _IfBelowScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IfBelowScore");
                OnIfBelowScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _IfBelowScore;
        partial void OnIfBelowScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnIfBelowScoreChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YiPayJia
        {
            get
            {
                return _YiPayJia;
            }
            set
            {
                OnYiPayJiaChanging(value);
                ReportPropertyChanging("YiPayJia");
                _YiPayJia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YiPayJia");
                OnYiPayJiaChanged();
            }
        }
        private Nullable<global::System.Decimal> _YiPayJia;
        partial void OnYiPayJiaChanging(Nullable<global::System.Decimal> value);
        partial void OnYiPayJiaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeleteInd;
        partial void OnDeleteIndChanging(Nullable<global::System.Boolean> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupSheYing_GroupByGroup", "GroupByGroup")]
        public GroupByGroup GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupSheYing_GroupByGroup", "GroupByGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupSheYing_GroupByGroup", "GroupByGroup").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByGroup> GroupByGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupSheYing_GroupByGroup", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByGroup>("DSHOrderManagementModel.FK_GroupSheYing_GroupByGroup", "GroupByGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Industry : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Industry 对象。
        /// </summary>
        /// <param name="industryID">IndustryID 属性的初始值。</param>
        /// <param name="industryName">IndustryName 属性的初始值。</param>
        public static Industry CreateIndustry(global::System.Int32 industryID, global::System.String industryName)
        {
            Industry industry = new Industry();
            industry.IndustryID = industryID;
            industry.IndustryName = industryName;
            return industry;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                if (_IndustryID != value)
                {
                    OnIndustryIDChanging(value);
                    ReportPropertyChanging("IndustryID");
                    _IndustryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryID");
                    OnIndustryIDChanged();
                }
            }
        }
        private global::System.Int32 _IndustryID;
        partial void OnIndustryIDChanging(global::System.Int32 value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndustryName
        {
            get
            {
                return _IndustryName;
            }
            set
            {
                OnIndustryNameChanging(value);
                ReportPropertyChanging("IndustryName");
                _IndustryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IndustryName");
                OnIndustryNameChanged();
            }
        }
        private global::System.String _IndustryName;
        partial void OnIndustryNameChanging(global::System.String value);
        partial void OnIndustryNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_SUBINDUS_REFERENCE_INDUSTRY", "SubIndustry")]
        public EntityCollection<SubIndustry> SubIndustry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubIndustry>("DSHOrderManagementModel.FK_SUBINDUS_REFERENCE_INDUSTRY", "SubIndustry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubIndustry>("DSHOrderManagementModel.FK_SUBINDUS_REFERENCE_INDUSTRY", "SubIndustry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="LogisticsInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogisticsInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 LogisticsInfo 对象。
        /// </summary>
        /// <param name="logisticsID">LogisticsID 属性的初始值。</param>
        public static LogisticsInfo CreateLogisticsInfo(global::System.Int32 logisticsID)
        {
            LogisticsInfo logisticsInfo = new LogisticsInfo();
            logisticsInfo.LogisticsID = logisticsID;
            return logisticsInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogisticsID
        {
            get
            {
                return _LogisticsID;
            }
            set
            {
                if (_LogisticsID != value)
                {
                    OnLogisticsIDChanging(value);
                    ReportPropertyChanging("LogisticsID");
                    _LogisticsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogisticsID");
                    OnLogisticsIDChanged();
                }
            }
        }
        private global::System.Int32 _LogisticsID;
        partial void OnLogisticsIDChanging(global::System.Int32 value);
        partial void OnLogisticsIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNum
        {
            get
            {
                return _SerialNum;
            }
            set
            {
                OnSerialNumChanging(value);
                ReportPropertyChanging("SerialNum");
                _SerialNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNum");
                OnSerialNumChanged();
            }
        }
        private global::System.String _SerialNum;
        partial void OnSerialNumChanging(global::System.String value);
        partial void OnSerialNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.String _OrderID;
        partial void OnOrderIDChanging(global::System.String value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Project
        {
            get
            {
                return _Project;
            }
            set
            {
                OnProjectChanging(value);
                ReportPropertyChanging("Project");
                _Project = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Project");
                OnProjectChanged();
            }
        }
        private global::System.String _Project;
        partial void OnProjectChanging(global::System.String value);
        partial void OnProjectChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GetGoodsDate
        {
            get
            {
                return _GetGoodsDate;
            }
            set
            {
                OnGetGoodsDateChanging(value);
                ReportPropertyChanging("GetGoodsDate");
                _GetGoodsDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GetGoodsDate");
                OnGetGoodsDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _GetGoodsDate;
        partial void OnGetGoodsDateChanging(Nullable<global::System.DateTime> value);
        partial void OnGetGoodsDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceStop
        {
            get
            {
                return _SourceStop;
            }
            set
            {
                OnSourceStopChanging(value);
                ReportPropertyChanging("SourceStop");
                _SourceStop = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceStop");
                OnSourceStopChanged();
            }
        }
        private global::System.String _SourceStop;
        partial void OnSourceStopChanging(global::System.String value);
        partial void OnSourceStopChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DestStop
        {
            get
            {
                return _DestStop;
            }
            set
            {
                OnDestStopChanging(value);
                ReportPropertyChanging("DestStop");
                _DestStop = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DestStop");
                OnDestStopChanged();
            }
        }
        private global::System.String _DestStop;
        partial void OnDestStopChanging(global::System.String value);
        partial void OnDestStopChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OperateDate
        {
            get
            {
                return _OperateDate;
            }
            set
            {
                OnOperateDateChanging(value);
                ReportPropertyChanging("OperateDate");
                _OperateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperateDate");
                OnOperateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OperateDate;
        partial void OnOperateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOperateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArriveStopDate
        {
            get
            {
                return _ArriveStopDate;
            }
            set
            {
                OnArriveStopDateChanging(value);
                ReportPropertyChanging("ArriveStopDate");
                _ArriveStopDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArriveStopDate");
                OnArriveStopDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArriveStopDate;
        partial void OnArriveStopDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArriveStopDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelPhone
        {
            get
            {
                return _TelPhone;
            }
            set
            {
                OnTelPhoneChanging(value);
                ReportPropertyChanging("TelPhone");
                _TelPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TelPhone");
                OnTelPhoneChanged();
            }
        }
        private global::System.String _TelPhone;
        partial void OnTelPhoneChanging(global::System.String value);
        partial void OnTelPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GoodsName
        {
            get
            {
                return _GoodsName;
            }
            set
            {
                OnGoodsNameChanging(value);
                ReportPropertyChanging("GoodsName");
                _GoodsName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GoodsName");
                OnGoodsNameChanged();
            }
        }
        private global::System.String _GoodsName;
        partial void OnGoodsNameChanging(global::System.String value);
        partial void OnGoodsNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalesNum
        {
            get
            {
                return _SalesNum;
            }
            set
            {
                OnSalesNumChanging(value);
                ReportPropertyChanging("SalesNum");
                _SalesNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesNum");
                OnSalesNumChanged();
            }
        }
        private Nullable<global::System.Int32> _SalesNum;
        partial void OnSalesNumChanging(Nullable<global::System.Int32> value);
        partial void OnSalesNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carrier
        {
            get
            {
                return _Carrier;
            }
            set
            {
                OnCarrierChanging(value);
                ReportPropertyChanging("Carrier");
                _Carrier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Carrier");
                OnCarrierChanged();
            }
        }
        private global::System.String _Carrier;
        partial void OnCarrierChanging(global::System.String value);
        partial void OnCarrierChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="OrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderDetail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderDetail 对象。
        /// </summary>
        /// <param name="orderDetailID">OrderDetailID 属性的初始值。</param>
        public static OrderDetail CreateOrderDetail(global::System.Int32 orderDetailID)
        {
            OrderDetail orderDetail = new OrderDetail();
            orderDetail.OrderDetailID = orderDetailID;
            return orderDetail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderDetailID
        {
            get
            {
                return _OrderDetailID;
            }
            set
            {
                if (_OrderDetailID != value)
                {
                    OnOrderDetailIDChanging(value);
                    ReportPropertyChanging("OrderDetailID");
                    _OrderDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderDetailID");
                    OnOrderDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderDetailID;
        partial void OnOrderDetailIDChanging(global::System.Int32 value);
        partial void OnOrderDetailIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByItemID
        {
            get
            {
                return _GroupByItemID;
            }
            set
            {
                OnGroupByItemIDChanging(value);
                ReportPropertyChanging("GroupByItemID");
                _GroupByItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByItemID");
                OnGroupByItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByItemID;
        partial void OnGroupByItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LockBy
        {
            get
            {
                return _LockBy;
            }
            set
            {
                OnLockByChanging(value);
                ReportPropertyChanging("LockBy");
                _LockBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LockBy");
                OnLockByChanged();
            }
        }
        private global::System.String _LockBy;
        partial void OnLockByChanging(global::System.String value);
        partial void OnLockByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerID
        {
            get
            {
                return _BuyerID;
            }
            set
            {
                OnBuyerIDChanging(value);
                ReportPropertyChanging("BuyerID");
                _BuyerID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerID");
                OnBuyerIDChanged();
            }
        }
        private global::System.String _BuyerID;
        partial void OnBuyerIDChanging(global::System.String value);
        partial void OnBuyerIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerNick
        {
            get
            {
                return _BuyerNick;
            }
            set
            {
                OnBuyerNickChanging(value);
                ReportPropertyChanging("BuyerNick");
                _BuyerNick = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerNick");
                OnBuyerNickChanged();
            }
        }
        private global::System.String _BuyerNick;
        partial void OnBuyerNickChanging(global::System.String value);
        partial void OnBuyerNickChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShippingType
        {
            get
            {
                return _ShippingType;
            }
            set
            {
                OnShippingTypeChanging(value);
                ReportPropertyChanging("ShippingType");
                _ShippingType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShippingType");
                OnShippingTypeChanged();
            }
        }
        private global::System.String _ShippingType;
        partial void OnShippingTypeChanging(global::System.String value);
        partial void OnShippingTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tid
        {
            get
            {
                return _Tid;
            }
            set
            {
                OnTidChanging(value);
                ReportPropertyChanging("Tid");
                _Tid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tid");
                OnTidChanged();
            }
        }
        private global::System.String _Tid;
        partial void OnTidChanging(global::System.String value);
        partial void OnTidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Oid
        {
            get
            {
                return _Oid;
            }
            set
            {
                OnOidChanging(value);
                ReportPropertyChanging("Oid");
                _Oid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Oid");
                OnOidChanged();
            }
        }
        private global::System.String _Oid;
        partial void OnOidChanging(global::System.String value);
        partial void OnOidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlipayNo
        {
            get
            {
                return _AlipayNo;
            }
            set
            {
                OnAlipayNoChanging(value);
                ReportPropertyChanging("AlipayNo");
                _AlipayNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlipayNo");
                OnAlipayNoChanged();
            }
        }
        private global::System.String _AlipayNo;
        partial void OnAlipayNoChanging(global::System.String value);
        partial void OnAlipayNoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalFee
        {
            get
            {
                return _TotalFee;
            }
            set
            {
                OnTotalFeeChanging(value);
                ReportPropertyChanging("TotalFee");
                _TotalFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalFee");
                OnTotalFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalFee;
        partial void OnTotalFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalFeeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApplyRefundTime
        {
            get
            {
                return _ApplyRefundTime;
            }
            set
            {
                OnApplyRefundTimeChanging(value);
                ReportPropertyChanging("ApplyRefundTime");
                _ApplyRefundTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyRefundTime");
                OnApplyRefundTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApplyRefundTime;
        partial void OnApplyRefundTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnApplyRefundTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateRefundTime
        {
            get
            {
                return _UpdateRefundTime;
            }
            set
            {
                OnUpdateRefundTimeChanging(value);
                ReportPropertyChanging("UpdateRefundTime");
                _UpdateRefundTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateRefundTime");
                OnUpdateRefundTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateRefundTime;
        partial void OnUpdateRefundTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateRefundTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HasGoodReturn
        {
            get
            {
                return _HasGoodReturn;
            }
            set
            {
                OnHasGoodReturnChanging(value);
                ReportPropertyChanging("HasGoodReturn");
                _HasGoodReturn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HasGoodReturn");
                OnHasGoodReturnChanged();
            }
        }
        private global::System.String _HasGoodReturn;
        partial void OnHasGoodReturnChanging(global::System.String value);
        partial void OnHasGoodReturnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RefundFee
        {
            get
            {
                return _RefundFee;
            }
            set
            {
                OnRefundFeeChanging(value);
                ReportPropertyChanging("RefundFee");
                _RefundFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundFee");
                OnRefundFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _RefundFee;
        partial void OnRefundFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnRefundFeeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GoodReturnTime
        {
            get
            {
                return _GoodReturnTime;
            }
            set
            {
                OnGoodReturnTimeChanging(value);
                ReportPropertyChanging("GoodReturnTime");
                _GoodReturnTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoodReturnTime");
                OnGoodReturnTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GoodReturnTime;
        partial void OnGoodReturnTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGoodReturnTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PayTime
        {
            get
            {
                return _PayTime;
            }
            set
            {
                OnPayTimeChanging(value);
                ReportPropertyChanging("PayTime");
                _PayTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayTime");
                OnPayTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PayTime;
        partial void OnPayTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPayTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DealTime
        {
            get
            {
                return _DealTime;
            }
            set
            {
                OnDealTimeChanging(value);
                ReportPropertyChanging("DealTime");
                _DealTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealTime");
                OnDealTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DealTime;
        partial void OnDealTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDealTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockTime
        {
            get
            {
                return _LockTime;
            }
            set
            {
                OnLockTimeChanging(value);
                ReportPropertyChanging("LockTime");
                _LockTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockTime");
                OnLockTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockTime;
        partial void OnLockTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLockTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealBy
        {
            get
            {
                return _DealBy;
            }
            set
            {
                OnDealByChanging(value);
                ReportPropertyChanging("DealBy");
                _DealBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealBy");
                OnDealByChanged();
            }
        }
        private global::System.String _DealBy;
        partial void OnDealByChanging(global::System.String value);
        partial void OnDealByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderStatus
        {
            get
            {
                return _OrderStatus;
            }
            set
            {
                OnOrderStatusChanging(value);
                ReportPropertyChanging("OrderStatus");
                _OrderStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderStatus");
                OnOrderStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderStatus;
        partial void OnOrderStatusChanging(Nullable<global::System.Int32> value);
        partial void OnOrderStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RefundStatus
        {
            get
            {
                return _RefundStatus;
            }
            set
            {
                OnRefundStatusChanging(value);
                ReportPropertyChanging("RefundStatus");
                _RefundStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundStatus");
                OnRefundStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _RefundStatus;
        partial void OnRefundStatusChanging(Nullable<global::System.Int32> value);
        partial void OnRefundStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssueType
        {
            get
            {
                return _IssueType;
            }
            set
            {
                OnIssueTypeChanging(value);
                ReportPropertyChanging("IssueType");
                _IssueType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueType");
                OnIssueTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _IssueType;
        partial void OnIssueTypeChanging(Nullable<global::System.Int32> value);
        partial void OnIssueTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RefundTimeout
        {
            get
            {
                return _RefundTimeout;
            }
            set
            {
                OnRefundTimeoutChanging(value);
                ReportPropertyChanging("RefundTimeout");
                _RefundTimeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundTimeout");
                OnRefundTimeoutChanged();
            }
        }
        private Nullable<global::System.DateTime> _RefundTimeout;
        partial void OnRefundTimeoutChanging(Nullable<global::System.DateTime> value);
        partial void OnRefundTimeoutChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaobaoProductID
        {
            get
            {
                return _TaobaoProductID;
            }
            set
            {
                OnTaobaoProductIDChanging(value);
                ReportPropertyChanging("TaobaoProductID");
                _TaobaoProductID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaobaoProductID");
                OnTaobaoProductIDChanged();
            }
        }
        private global::System.String _TaobaoProductID;
        partial void OnTaobaoProductIDChanging(global::System.String value);
        partial void OnTaobaoProductIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerMessage
        {
            get
            {
                return _BuyerMessage;
            }
            set
            {
                OnBuyerMessageChanging(value);
                ReportPropertyChanging("BuyerMessage");
                _BuyerMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerMessage");
                OnBuyerMessageChanged();
            }
        }
        private global::System.String _BuyerMessage;
        partial void OnBuyerMessageChanging(global::System.String value);
        partial void OnBuyerMessageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OfflineDealStatus
        {
            get
            {
                return _OfflineDealStatus;
            }
            set
            {
                OnOfflineDealStatusChanging(value);
                ReportPropertyChanging("OfflineDealStatus");
                _OfflineDealStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfflineDealStatus");
                OnOfflineDealStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _OfflineDealStatus;
        partial void OnOfflineDealStatusChanging(Nullable<global::System.Int32> value);
        partial void OnOfflineDealStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OfflineReturnFee
        {
            get
            {
                return _OfflineReturnFee;
            }
            set
            {
                OnOfflineReturnFeeChanging(value);
                ReportPropertyChanging("OfflineReturnFee");
                _OfflineReturnFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfflineReturnFee");
                OnOfflineReturnFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _OfflineReturnFee;
        partial void OnOfflineReturnFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnOfflineReturnFeeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfflineDealBy
        {
            get
            {
                return _OfflineDealBy;
            }
            set
            {
                OnOfflineDealByChanging(value);
                ReportPropertyChanging("OfflineDealBy");
                _OfflineDealBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfflineDealBy");
                OnOfflineDealByChanged();
            }
        }
        private global::System.String _OfflineDealBy;
        partial void OnOfflineDealByChanging(global::System.String value);
        partial void OnOfflineDealByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OfflineDealDate
        {
            get
            {
                return _OfflineDealDate;
            }
            set
            {
                OnOfflineDealDateChanging(value);
                ReportPropertyChanging("OfflineDealDate");
                _OfflineDealDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfflineDealDate");
                OnOfflineDealDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OfflineDealDate;
        partial void OnOfflineDealDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOfflineDealDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemTitle
        {
            get
            {
                return _ItemTitle;
            }
            set
            {
                OnItemTitleChanging(value);
                ReportPropertyChanging("ItemTitle");
                _ItemTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemTitle");
                OnItemTitleChanged();
            }
        }
        private global::System.String _ItemTitle;
        partial void OnItemTitleChanging(global::System.String value);
        partial void OnItemTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RefundID
        {
            get
            {
                return _RefundID;
            }
            set
            {
                OnRefundIDChanging(value);
                ReportPropertyChanging("RefundID");
                _RefundID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RefundID");
                OnRefundIDChanged();
            }
        }
        private global::System.String _RefundID;
        partial void OnRefundIDChanging(global::System.String value);
        partial void OnRefundIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TradeFrom
        {
            get
            {
                return _TradeFrom;
            }
            set
            {
                OnTradeFromChanging(value);
                ReportPropertyChanging("TradeFrom");
                _TradeFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TradeFrom");
                OnTradeFromChanged();
            }
        }
        private global::System.String _TradeFrom;
        partial void OnTradeFromChanging(global::System.String value);
        partial void OnTradeFromChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TradeRate
        {
            get
            {
                return _TradeRate;
            }
            set
            {
                OnTradeRateChanging(value);
                ReportPropertyChanging("TradeRate");
                _TradeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeRate");
                OnTradeRateChanged();
            }
        }
        private Nullable<global::System.Int32> _TradeRate;
        partial void OnTradeRateChanging(Nullable<global::System.Int32> value);
        partial void OnTradeRateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CredentialPath
        {
            get
            {
                return _CredentialPath;
            }
            set
            {
                OnCredentialPathChanging(value);
                ReportPropertyChanging("CredentialPath");
                _CredentialPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CredentialPath");
                OnCredentialPathChanged();
            }
        }
        private global::System.String _CredentialPath;
        partial void OnCredentialPathChanging(global::System.String value);
        partial void OnCredentialPathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HasCSDeal
        {
            get
            {
                return _HasCSDeal;
            }
            set
            {
                OnHasCSDealChanging(value);
                ReportPropertyChanging("HasCSDeal");
                _HasCSDeal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasCSDeal");
                OnHasCSDealChanged();
            }
        }
        private Nullable<global::System.Int32> _HasCSDeal;
        partial void OnHasCSDealChanging(Nullable<global::System.Int32> value);
        partial void OnHasCSDealChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_OrderDetail_GroupByItem", "GroupByItem")]
        public GroupByItem GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_OrderDetail_GroupByItem", "GroupByItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_OrderDetail_GroupByItem", "GroupByItem").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByItem> GroupByItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_OrderDetail_GroupByItem", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_OrderDetail_GroupByItem", "GroupByItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Payment 对象。
        /// </summary>
        /// <param name="paymentID">PaymentID 属性的初始值。</param>
        public static Payment CreatePayment(global::System.Int32 paymentID)
        {
            Payment payment = new Payment();
            payment.PaymentID = paymentID;
            return payment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentID
        {
            get
            {
                return _PaymentID;
            }
            set
            {
                if (_PaymentID != value)
                {
                    OnPaymentIDChanging(value);
                    ReportPropertyChanging("PaymentID");
                    _PaymentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentID");
                    OnPaymentIDChanged();
                }
            }
        }
        private global::System.Int32 _PaymentID;
        partial void OnPaymentIDChanging(global::System.Int32 value);
        partial void OnPaymentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentPrice
        {
            get
            {
                return _PaymentPrice;
            }
            set
            {
                OnPaymentPriceChanging(value);
                ReportPropertyChanging("PaymentPrice");
                _PaymentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentPrice");
                OnPaymentPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentPrice;
        partial void OnPaymentPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentTime
        {
            get
            {
                return _PaymentTime;
            }
            set
            {
                OnPaymentTimeChanging(value);
                ReportPropertyChanging("PaymentTime");
                _PaymentTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentTime");
                OnPaymentTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentTime;
        partial void OnPaymentTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentProportion
        {
            get
            {
                return _PaymentProportion;
            }
            set
            {
                OnPaymentProportionChanging(value);
                ReportPropertyChanging("PaymentProportion");
                _PaymentProportion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentProportion");
                OnPaymentProportionChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentProportion;
        partial void OnPaymentProportionChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentProportionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDeadline
        {
            get
            {
                return _PaymentDeadline;
            }
            set
            {
                OnPaymentDeadlineChanging(value);
                ReportPropertyChanging("PaymentDeadline");
                _PaymentDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDeadline");
                OnPaymentDeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDeadline;
        partial void OnPaymentDeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDeadlineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentType
        {
            get
            {
                return _PaymentType;
            }
            set
            {
                OnPaymentTypeChanging(value);
                ReportPropertyChanging("PaymentType");
                _PaymentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentType");
                OnPaymentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentType;
        partial void OnPaymentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApprovalStatus
        {
            get
            {
                return _ApprovalStatus;
            }
            set
            {
                OnApprovalStatusChanging(value);
                ReportPropertyChanging("ApprovalStatus");
                _ApprovalStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalStatus");
                OnApprovalStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _ApprovalStatus;
        partial void OnApprovalStatusChanging(Nullable<global::System.Int32> value);
        partial void OnApprovalStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentStatus
        {
            get
            {
                return _PaymentStatus;
            }
            set
            {
                OnPaymentStatusChanging(value);
                ReportPropertyChanging("PaymentStatus");
                _PaymentStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentStatus");
                OnPaymentStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentStatus;
        partial void OnPaymentStatusChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificateImg
        {
            get
            {
                return _CertificateImg;
            }
            set
            {
                OnCertificateImgChanging(value);
                ReportPropertyChanging("CertificateImg");
                _CertificateImg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CertificateImg");
                OnCertificateImgChanged();
            }
        }
        private global::System.String _CertificateImg;
        partial void OnCertificateImgChanging(global::System.String value);
        partial void OnCertificateImgChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApplyDate
        {
            get
            {
                return _ApplyDate;
            }
            set
            {
                OnApplyDateChanging(value);
                ReportPropertyChanging("ApplyDate");
                _ApplyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyDate");
                OnApplyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApplyDate;
        partial void OnApplyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApplyDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Applicant
        {
            get
            {
                return _Applicant;
            }
            set
            {
                OnApplicantChanging(value);
                ReportPropertyChanging("Applicant");
                _Applicant = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Applicant");
                OnApplicantChanged();
            }
        }
        private global::System.String _Applicant;
        partial void OnApplicantChanging(global::System.String value);
        partial void OnApplicantChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Payer
        {
            get
            {
                return _Payer;
            }
            set
            {
                OnPayerChanging(value);
                ReportPropertyChanging("Payer");
                _Payer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Payer");
                OnPayerChanged();
            }
        }
        private global::System.String _Payer;
        partial void OnPayerChanging(global::System.String value);
        partial void OnPayerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupByItemID
        {
            get
            {
                return _GroupByItemID;
            }
            set
            {
                OnGroupByItemIDChanging(value);
                ReportPropertyChanging("GroupByItemID");
                _GroupByItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupByItemID");
                OnGroupByItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupByItemID;
        partial void OnGroupByItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupByItemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLastPayment
        {
            get
            {
                return _IsLastPayment;
            }
            set
            {
                OnIsLastPaymentChanging(value);
                ReportPropertyChanging("IsLastPayment");
                _IsLastPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLastPayment");
                OnIsLastPaymentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLastPayment;
        partial void OnIsLastPaymentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLastPaymentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualPaymentPrice
        {
            get
            {
                return _ActualPaymentPrice;
            }
            set
            {
                OnActualPaymentPriceChanging(value);
                ReportPropertyChanging("ActualPaymentPrice");
                _ActualPaymentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPaymentPrice");
                OnActualPaymentPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualPaymentPrice;
        partial void OnActualPaymentPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnActualPaymentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ActualPaymentProportion
        {
            get
            {
                return _ActualPaymentProportion;
            }
            set
            {
                OnActualPaymentProportionChanging(value);
                ReportPropertyChanging("ActualPaymentProportion");
                _ActualPaymentProportion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPaymentProportion");
                OnActualPaymentProportionChanged();
            }
        }
        private Nullable<global::System.Decimal> _ActualPaymentProportion;
        partial void OnActualPaymentProportionChanging(Nullable<global::System.Decimal> value);
        partial void OnActualPaymentProportionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActualPaymentDeadline
        {
            get
            {
                return _ActualPaymentDeadline;
            }
            set
            {
                OnActualPaymentDeadlineChanging(value);
                ReportPropertyChanging("ActualPaymentDeadline");
                _ActualPaymentDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPaymentDeadline");
                OnActualPaymentDeadlineChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActualPaymentDeadline;
        partial void OnActualPaymentDeadlineChanging(Nullable<global::System.DateTime> value);
        partial void OnActualPaymentDeadlineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentComment
        {
            get
            {
                return _PaymentComment;
            }
            set
            {
                OnPaymentCommentChanging(value);
                ReportPropertyChanging("PaymentComment");
                _PaymentComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentComment");
                OnPaymentCommentChanged();
            }
        }
        private global::System.String _PaymentComment;
        partial void OnPaymentCommentChanging(global::System.String value);
        partial void OnPaymentCommentChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_Payment_GroupByItem", "GroupByItem")]
        public GroupByItem GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_Payment_GroupByItem", "GroupByItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_Payment_GroupByItem", "GroupByItem").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupByItem> GroupByItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_Payment_GroupByItem", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupByItem>("DSHOrderManagementModel.FK_Payment_GroupByItem", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_FinApplyInstance_Payment", "FinApplyInstance")]
        public EntityCollection<FinApplyInstance> FinApplyInstance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FinApplyInstance>("DSHOrderManagementModel.FK_FinApplyInstance_Payment", "FinApplyInstance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FinApplyInstance>("DSHOrderManagementModel.FK_FinApplyInstance_Payment", "FinApplyInstance", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="PhoneFeeInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneFeeInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PhoneFeeInfo 对象。
        /// </summary>
        /// <param name="phoneFeeOrderID">PhoneFeeOrderID 属性的初始值。</param>
        public static PhoneFeeInfo CreatePhoneFeeInfo(global::System.Int32 phoneFeeOrderID)
        {
            PhoneFeeInfo phoneFeeInfo = new PhoneFeeInfo();
            phoneFeeInfo.PhoneFeeOrderID = phoneFeeOrderID;
            return phoneFeeInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneFeeOrderID
        {
            get
            {
                return _PhoneFeeOrderID;
            }
            set
            {
                if (_PhoneFeeOrderID != value)
                {
                    OnPhoneFeeOrderIDChanging(value);
                    ReportPropertyChanging("PhoneFeeOrderID");
                    _PhoneFeeOrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhoneFeeOrderID");
                    OnPhoneFeeOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _PhoneFeeOrderID;
        partial void OnPhoneFeeOrderIDChanging(global::System.Int32 value);
        partial void OnPhoneFeeOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.String _OrderID;
        partial void OnOrderIDChanging(global::System.String value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerName
        {
            get
            {
                return _BuyerName;
            }
            set
            {
                OnBuyerNameChanging(value);
                ReportPropertyChanging("BuyerName");
                _BuyerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuyerName");
                OnBuyerNameChanged();
            }
        }
        private global::System.String _BuyerName;
        partial void OnBuyerNameChanging(global::System.String value);
        partial void OnBuyerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Payment
        {
            get
            {
                return _Payment;
            }
            set
            {
                OnPaymentChanging(value);
                ReportPropertyChanging("Payment");
                _Payment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Payment");
                OnPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Payment;
        partial void OnPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GetGoodsAddr
        {
            get
            {
                return _GetGoodsAddr;
            }
            set
            {
                OnGetGoodsAddrChanging(value);
                ReportPropertyChanging("GetGoodsAddr");
                _GetGoodsAddr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GetGoodsAddr");
                OnGetGoodsAddrChanged();
            }
        }
        private global::System.String _GetGoodsAddr;
        partial void OnGetGoodsAddrChanging(global::System.String value);
        partial void OnGetGoodsAddrChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SalesNum
        {
            get
            {
                return _SalesNum;
            }
            set
            {
                OnSalesNumChanging(value);
                ReportPropertyChanging("SalesNum");
                _SalesNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesNum");
                OnSalesNumChanged();
            }
        }
        private Nullable<global::System.Int32> _SalesNum;
        partial void OnSalesNumChanging(Nullable<global::System.Int32> value);
        partial void OnSalesNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderDate;
        partial void OnOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RechargeDate
        {
            get
            {
                return _RechargeDate;
            }
            set
            {
                OnRechargeDateChanging(value);
                ReportPropertyChanging("RechargeDate");
                _RechargeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RechargeDate");
                OnRechargeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RechargeDate;
        partial void OnRechargeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRechargeDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Privilege")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Privilege : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Privilege 对象。
        /// </summary>
        /// <param name="privilegeID">PrivilegeID 属性的初始值。</param>
        public static Privilege CreatePrivilege(global::System.Int32 privilegeID)
        {
            Privilege privilege = new Privilege();
            privilege.PrivilegeID = privilegeID;
            return privilege;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrivilegeID
        {
            get
            {
                return _PrivilegeID;
            }
            set
            {
                if (_PrivilegeID != value)
                {
                    OnPrivilegeIDChanging(value);
                    ReportPropertyChanging("PrivilegeID");
                    _PrivilegeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivilegeID");
                    OnPrivilegeIDChanged();
                }
            }
        }
        private global::System.Int32 _PrivilegeID;
        partial void OnPrivilegeIDChanging(global::System.Int32 value);
        partial void OnPrivilegeIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FunctionID
        {
            get
            {
                return _FunctionID;
            }
            set
            {
                OnFunctionIDChanging(value);
                ReportPropertyChanging("FunctionID");
                _FunctionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FunctionID");
                OnFunctionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FunctionID;
        partial void OnFunctionIDChanging(Nullable<global::System.Int32> value);
        partial void OnFunctionIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_PRIVILEG_REFERENCE_FUNCTION", "Function")]
        public Function Function
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Function>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_FUNCTION", "Function").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Function>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_FUNCTION", "Function").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Function> FunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Function>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_FUNCTION", "Function");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Function>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_FUNCTION", "Function", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_PRIVILEG_REFERENCE_ROLE", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_ROLE", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_ROLE", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_ROLE", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_ROLE", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        public static Role CreateRole(global::System.Int32 roleID)
        {
            Role role = new Role();
            role.RoleID = roleID;
            return role;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_PRIVILEG_REFERENCE_ROLE", "Privilege")]
        public EntityCollection<Privilege> Privilege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Privilege>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_ROLE", "Privilege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Privilege>("DSHOrderManagementModel.FK_PRIVILEG_REFERENCE_ROLE", "Privilege", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERROLE_REFERENCE_ROLE", "UserRole")]
        public EntityCollection<UserRole> UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_ROLE", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_ROLE", "UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="SubIndustry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubIndustry : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SubIndustry 对象。
        /// </summary>
        /// <param name="subIndustryID">SubIndustryID 属性的初始值。</param>
        public static SubIndustry CreateSubIndustry(global::System.Int32 subIndustryID)
        {
            SubIndustry subIndustry = new SubIndustry();
            subIndustry.SubIndustryID = subIndustryID;
            return subIndustry;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubIndustryID
        {
            get
            {
                return _SubIndustryID;
            }
            set
            {
                if (_SubIndustryID != value)
                {
                    OnSubIndustryIDChanging(value);
                    ReportPropertyChanging("SubIndustryID");
                    _SubIndustryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubIndustryID");
                    OnSubIndustryIDChanged();
                }
            }
        }
        private global::System.Int32 _SubIndustryID;
        partial void OnSubIndustryIDChanging(global::System.Int32 value);
        partial void OnSubIndustryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryID;
        partial void OnIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubIndustryName
        {
            get
            {
                return _SubIndustryName;
            }
            set
            {
                OnSubIndustryNameChanging(value);
                ReportPropertyChanging("SubIndustryName");
                _SubIndustryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubIndustryName");
                OnSubIndustryNameChanged();
            }
        }
        private global::System.String _SubIndustryName;
        partial void OnSubIndustryNameChanging(global::System.String value);
        partial void OnSubIndustryNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_Customer_SubIndustry", "Customer")]
        public EntityCollection<Customer> Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("DSHOrderManagementModel.FK_Customer_SubIndustry", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("DSHOrderManagementModel.FK_Customer_SubIndustry", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_SubIndustry", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_SubIndustry", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_SubIndustry", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_SUBINDUS_REFERENCE_INDUSTRY", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DSHOrderManagementModel.FK_SUBINDUS_REFERENCE_INDUSTRY", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DSHOrderManagementModel.FK_SUBINDUS_REFERENCE_INDUSTRY", "Industry").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DSHOrderManagementModel.FK_SUBINDUS_REFERENCE_INDUSTRY", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("DSHOrderManagementModel.FK_SUBINDUS_REFERENCE_INDUSTRY", "Industry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="SystemParam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SystemParam : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SystemParam 对象。
        /// </summary>
        /// <param name="systemID">SystemID 属性的初始值。</param>
        public static SystemParam CreateSystemParam(global::System.Int32 systemID)
        {
            SystemParam systemParam = new SystemParam();
            systemParam.SystemID = systemID;
            return systemParam;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SystemID
        {
            get
            {
                return _SystemID;
            }
            set
            {
                if (_SystemID != value)
                {
                    OnSystemIDChanging(value);
                    ReportPropertyChanging("SystemID");
                    _SystemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SystemID");
                    OnSystemIDChanged();
                }
            }
        }
        private global::System.Int32 _SystemID;
        partial void OnSystemIDChanging(global::System.Int32 value);
        partial void OnSystemIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemName
        {
            get
            {
                return _SystemName;
            }
            set
            {
                OnSystemNameChanging(value);
                ReportPropertyChanging("SystemName");
                _SystemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemName");
                OnSystemNameChanged();
            }
        }
        private global::System.String _SystemName;
        partial void OnSystemNameChanging(global::System.String value);
        partial void OnSystemNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemValue
        {
            get
            {
                return _SystemValue;
            }
            set
            {
                OnSystemValueChanging(value);
                ReportPropertyChanging("SystemValue");
                _SystemValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemValue");
                OnSystemValueChanged();
            }
        }
        private global::System.String _SystemValue;
        partial void OnSystemValueChanging(global::System.String value);
        partial void OnSystemValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SystemDescription
        {
            get
            {
                return _SystemDescription;
            }
            set
            {
                OnSystemDescriptionChanging(value);
                ReportPropertyChanging("SystemDescription");
                _SystemDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SystemDescription");
                OnSystemDescriptionChanged();
            }
        }
        private global::System.String _SystemDescription;
        partial void OnSystemDescriptionChanging(global::System.String value);
        partial void OnSystemDescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="UploadFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UploadFile : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UploadFile 对象。
        /// </summary>
        /// <param name="uploadFileID">UploadFileID 属性的初始值。</param>
        /// <param name="typeCode">TypeCode 属性的初始值。</param>
        /// <param name="fileName">FileName 属性的初始值。</param>
        /// <param name="filePath">FilePath 属性的初始值。</param>
        public static UploadFile CreateUploadFile(global::System.Int32 uploadFileID, global::System.String typeCode, global::System.String fileName, global::System.String filePath)
        {
            UploadFile uploadFile = new UploadFile();
            uploadFile.UploadFileID = uploadFileID;
            uploadFile.TypeCode = typeCode;
            uploadFile.FileName = fileName;
            uploadFile.FilePath = filePath;
            return uploadFile;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadFileID
        {
            get
            {
                return _UploadFileID;
            }
            set
            {
                if (_UploadFileID != value)
                {
                    OnUploadFileIDChanging(value);
                    ReportPropertyChanging("UploadFileID");
                    _UploadFileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UploadFileID");
                    OnUploadFileIDChanged();
                }
            }
        }
        private global::System.Int32 _UploadFileID;
        partial void OnUploadFileIDChanging(global::System.Int32 value);
        partial void OnUploadFileIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeCode
        {
            get
            {
                return _TypeCode;
            }
            set
            {
                OnTypeCodeChanging(value);
                ReportPropertyChanging("TypeCode");
                _TypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeCode");
                OnTypeCodeChanged();
            }
        }
        private global::System.String _TypeCode;
        partial void OnTypeCodeChanging(global::System.String value);
        partial void OnTypeCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileName
        {
            get
            {
                return _OriginalFileName;
            }
            set
            {
                OnOriginalFileNameChanging(value);
                ReportPropertyChanging("OriginalFileName");
                _OriginalFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalFileName");
                OnOriginalFileNameChanged();
            }
        }
        private global::System.String _OriginalFileName;
        partial void OnOriginalFileNameChanging(global::System.String value);
        partial void OnOriginalFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeleteInd;
        partial void OnDeleteIndChanging(Nullable<global::System.Boolean> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastModifyBy
        {
            get
            {
                return _LastModifyBy;
            }
            set
            {
                OnLastModifyByChanging(value);
                ReportPropertyChanging("LastModifyBy");
                _LastModifyBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastModifyBy");
                OnLastModifyByChanged();
            }
        }
        private global::System.String _LastModifyBy;
        partial void OnLastModifyByChanging(global::System.String value);
        partial void OnLastModifyByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifyTime
        {
            get
            {
                return _LastModifyTime;
            }
            set
            {
                OnLastModifyTimeChanging(value);
                ReportPropertyChanging("LastModifyTime");
                _LastModifyTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifyTime");
                OnLastModifyTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifyTime;
        partial void OnLastModifyTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifyTimeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile1", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile1", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile1", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile2", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile2", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile2", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_UploadFile3", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile3", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_UploadFile3", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_UploadFile", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_UploadFile", "GroupByItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Int32> _Sex;
        partial void OnSexChanging(Nullable<global::System.Int32> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeleteInd
        {
            get
            {
                return _DeleteInd;
            }
            set
            {
                OnDeleteIndChanging(value);
                ReportPropertyChanging("DeleteInd");
                _DeleteInd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteInd");
                OnDeleteIndChanged();
            }
        }
        private Nullable<global::System.Int32> _DeleteInd = 0;
        partial void OnDeleteIndChanging(Nullable<global::System.Int32> value);
        partial void OnDeleteIndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_User_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_User_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_User_City", "City").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("DSHOrderManagementModel.FK_User_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("DSHOrderManagementModel.FK_User_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_User_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DSHOrderManagementModel.FK_User_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DSHOrderManagementModel.FK_User_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("DSHOrderManagementModel.FK_User_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("DSHOrderManagementModel.FK_User_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_DEPARTME_REFERENCE_USER", "Department")]
        public EntityCollection<Department> Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("DSHOrderManagementModel.FK_DEPARTME_REFERENCE_USER", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("DSHOrderManagementModel.FK_DEPARTME_REFERENCE_USER", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupBySales_User", "GroupBySales")]
        public EntityCollection<GroupBySales> GroupBySales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupBySales>("DSHOrderManagementModel.FK_GroupBySales_User", "GroupBySales");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupBySales>("DSHOrderManagementModel.FK_GroupBySales_User", "GroupBySales", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERDEPA_REFERENCE_USER", "UserDepartment")]
        public EntityCollection<UserDepartment> UserDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserDepartment>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_USER", "UserDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserDepartment>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_USER", "UserDepartment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERROLE_REFERENCE_USER", "UserRole")]
        public EntityCollection<UserRole> UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_USER", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_USER", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User1", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User1", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User1", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User2", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User2", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User2", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User3", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User3", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User3", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByGroup_User4", "GroupByGroup")]
        public EntityCollection<GroupByGroup> GroupByGroup4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User4", "GroupByGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByGroup>("DSHOrderManagementModel.FK_GroupByGroup_User4", "GroupByGroup", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User1", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User1", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User1", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User2", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User2", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User2", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User3", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User3", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User3", "GroupByItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_GroupByItem_User4", "GroupByItem")]
        public EntityCollection<GroupByItem> GroupByItem4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User4", "GroupByItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupByItem>("DSHOrderManagementModel.FK_GroupByItem_User4", "GroupByItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="UserDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDepartment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserDepartment 对象。
        /// </summary>
        /// <param name="userDepartmentID">UserDepartmentID 属性的初始值。</param>
        public static UserDepartment CreateUserDepartment(global::System.Int32 userDepartmentID)
        {
            UserDepartment userDepartment = new UserDepartment();
            userDepartment.UserDepartmentID = userDepartmentID;
            return userDepartment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserDepartmentID
        {
            get
            {
                return _UserDepartmentID;
            }
            set
            {
                if (_UserDepartmentID != value)
                {
                    OnUserDepartmentIDChanging(value);
                    ReportPropertyChanging("UserDepartmentID");
                    _UserDepartmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserDepartmentID");
                    OnUserDepartmentIDChanged();
                }
            }
        }
        private global::System.Int32 _UserDepartmentID;
        partial void OnUserDepartmentIDChanging(global::System.Int32 value);
        partial void OnUserDepartmentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentID;
        partial void OnDepartmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERDEPA_REFERENCE_DEPARTME", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_DEPARTME", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_DEPARTME", "Department").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_DEPARTME", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_DEPARTME", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERDEPA_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_USERDEPA_REFERENCE_USER", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DSHOrderManagementModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserRole 对象。
        /// </summary>
        /// <param name="userRoleID">UserRoleID 属性的初始值。</param>
        public static UserRole CreateUserRole(global::System.Int32 userRoleID)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleID = userRoleID;
            return userRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int32 value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERROLE_REFERENCE_ROLE", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_ROLE", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_ROLE", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_ROLE", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_ROLE", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DSHOrderManagementModel", "FK_USERROLE_REFERENCE_USER", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_USER", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_USER", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_USER", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DSHOrderManagementModel.FK_USERROLE_REFERENCE_USER", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
