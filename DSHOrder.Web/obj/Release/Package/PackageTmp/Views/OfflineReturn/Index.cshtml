@model DSHOrder.Web.Models.OrderDetailSearchModel
@using Webdiyer.WebControls.Mvc;
@{
    ViewBag.Title = "线下转款清单列表";
}
@helper ParseRefundStatus(string refundStatus)
    {
        if (!string.IsNullOrEmpty(refundStatus))
        {
            DSHOrder.Service.Interface.ICodeTableService cService = new DSHOrder.Service.CodeTableService();
            DSHOrder.Entity.CodeTable ct = cService.GetCodeTablesByType(3).SingleOrDefault<DSHOrder.Entity.CodeTable>(p => p.CodeValue.Equals(refundStatus));
    @ct.CodeDesc
        }
}
@helper ParseOrderStatus(string orderStatus)
    {
    if (!string.IsNullOrEmpty(orderStatus))
    {
        DSHOrder.Service.Interface.ICodeTableService cService = new DSHOrder.Service.CodeTableService();
        DSHOrder.Entity.CodeTable ct = cService.GetCodeTablesByType(5).SingleOrDefault<DSHOrder.Entity.CodeTable>(p => p.CodeValue.Equals(orderStatus));
    @ct.CodeDesc
    }
}

@helper ParseOfflineDealStatus(int? offlineStatus)
{
    if (offlineStatus.HasValue)
    { 
     DSHOrder.Service.Interface.ICodeTableService cService = new DSHOrder.Service.CodeTableService();
     DSHOrder.Entity.CodeTable ct = cService.GetCodeTablesByType(8).SingleOrDefault<DSHOrder.Entity.CodeTable>(p => p.CodeValue.Equals(offlineStatus.ToString()));
        @ct.CodeDesc
    }
    else{
        @:不需转款
    }
    
    }
<link rel="stylesheet" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
<script language="javascript" type="text/javascript" src="@Url.Content("~/My97DatePicker/WdatePicker.js")"></script>
 <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.metadata.js")"></script>
<script type="text/javascript" language="javascript">
    $(function () {
        $("#DealDateFrom").click(function () {
            WdatePicker();
        });
        $("#DealDateTo").click(function () {
            WdatePicker();
        });
    });

</script>

@using (Html.BeginForm("Index", "OfflineReturn", FormMethod.Get))
{
    <div>
        <table width="100%" border="0">
             <tr>
                <th>
                     团购编号
                </th>
                <td>@Html.TextBoxFor(modelItem => Model.GroupByNumber)
                </td>
                <th>
                    淘宝子订单号
                </th>
                <td>
                    @Html.TextBoxFor(modelItem => Model.TaobaoOrderID)
                </td>
            </tr>
            <tr>
                <th>
                    团购名称
                </th>
                <td>@Html.TextBoxFor(modelItem => Model.GroupByName)
                </td>
                <th>
                    买家应付金额
                </th>
                <td>
                    @Html.TextBoxFor(modelItem => Model.Price)
                </td>
            </tr>
            <tr>
                <th>
                    客户名称
                </th>
                <td>@Html.TextBoxFor(modelItem => Model.BuyerName)
                </td>
                <th>
                    地址/电话
                </th>
                <td>@Html.TextBoxFor(modelItem => Model.Addr)
                </td>
            </tr>
            <tr>
                <th>
                    办理日期 从
                </th>
                <td>@Html.TextBoxFor(modelItem => Model.DealDateFrom)
                </td>
                <th>到
                </th>
                <td>@Html.TextBoxFor(modelItem => Model.DealDateTo)
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <input type="submit" id="btnSearch" value="查询" class="button" name="search" />
                </td>
            </tr>
        </table>
    </div>
}
@using (Html.BeginForm())
{ 
    <div>
        <div class="content-box-header">
            <ul id="tabDealType" class="content-box-tabs" style="float: left">
                @if (Model.StatusType == 0)
                { 
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 0 })"  class="default-tab">
                        全部转款订单</a></li>
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 1 })">
                        未转款</a></li>
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 2 })">
                        成功转款</a></li>                
                }
                else if (Model.StatusType == 1)
                {
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 0 })">
                        全部转款订单</a></li>
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 1 })"  class="default-tab">
                        未转款</a></li>
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 2 })">
                        成功转款</a></li>            
                }
                else if (Model.StatusType == 2)
                {
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 0 })">
                        全部转款订单</a></li>
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 1 })">
                        未转款</a></li>
                    <li><a href="@Url.Action("Index", "OfflineReturn", new { @GroupByNumber = Request["GroupByNumber"], @TaobaoOrderID = Request["TaobaoOrderID"], @GroupByName = Request["GroupByName"], @Price = Request["Price"], @BuyerName = Request["BuyerName"], @Addr = Request["Addr"], @DealDateFrom = Request["DealDateFrom"], @DealDateTo = Request["DealDateTo"], @dealType = 2 })"   class="default-tab">
                        成功转款</a></li>            
                }
            </ul>
        </div>
        <div class="tab-content default-tab" id="tab">
            <table class="tbList">
                <tr>
                    <th>
                        买家昵称
                    </th>
                    <th>
                        买家应付金额
                    </th>
                    <th>
                        退换给买家金额
                    </th>
                    <th>
                        支付给卖家金额
                    </th>
                    <th>
                        线下转款金额
                    </th>
                    <th>
                        收款地址
                    </th>
                    <th>
                        订单状态
                    </th>
                    <th>
                        退款状态
                    </th>
                    <th>
                        线下转款状态
                    </th>
                    <th>
                        办理日期
                    </th>
                    <th>
                        办理人
                    </th>
                    <th>
                        备注
                    </th>
                    <th>
                    线下退款处理人
                    </th>
                    <th>
                    线下退款处理日期
                    </th>
                    <th>
                    </th>
                </tr>
                @foreach (var item in Model.OrderDetailList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.BuyerNick)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalFee)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RefundFee)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Payment)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OfflineReturnFee)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @ParseOrderStatus(Html.DisplayFor(modelItem => item.OrderStatus).ToString())
                        </td>
                        <td>
                            @ParseRefundStatus((Html.DisplayFor(modelItem => item.RefundStatus).ToString()))
                        </td>
                        <td>
                            @ParseOfflineDealStatus(item.OfflineDealStatus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DealTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DealBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Remark)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OfflineDealBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OfflineDealDate)
                        </td>
                        <td>
                            @if (item.OfflineDealStatus.HasValue)
                            { 
                            <input type="submit" id="edit:@item.OrderDetailID" value="转款" class="button" name="edit:@item.OrderDetailID"/>
                            }
                        </td>
                    </tr>
                }
            </table>
            @Html.Pager(Model.OrderDetailList, new PagerOptions { PageIndexParameterName = "pageIndex" }, new { @class = "pagination" })
        </div>
    </div>
}
