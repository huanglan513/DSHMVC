@model DSHOrder.Entity.OrderDetail
@{
    ViewBag.Title = "买家问题处理";
}
@helper ParseOrderStatus(int? orderStatus)
    {
        if (orderStatus.HasValue)
        {
            DSHOrder.Service.Interface.ICodeTableService cService = new DSHOrder.Service.CodeTableService();
            DSHOrder.Entity.CodeTable ct = cService.GetCodeTablesByType(5).SingleOrDefault<DSHOrder.Entity.CodeTable>(p => p.CodeValue.Equals(orderStatus.ToString()));
        @ct.CodeDesc   
        }
}

@helper ParseRefundStatus(int? refundStatus)
    {
        if (refundStatus.HasValue)
        {
            DSHOrder.Service.Interface.ICodeTableService cService = new DSHOrder.Service.CodeTableService();
            DSHOrder.Entity.CodeTable ct = cService.GetCodeTablesByType(3).SingleOrDefault<DSHOrder.Entity.CodeTable>(p => p.CodeValue.Equals(refundStatus.ToString()));
    @ct.CodeDesc
        }
}

@helper ParseIssueType(int? issueType)
    {
        foreach (SelectListItem sli in ViewData["IssueTypeList"] as SelectList)
        {
            if (sli.Value.Equals(issueType))
            { 
                @sli.Text
            }
        }
    }
@*<h2>
    买家问题处理</h2>*@
<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
<script language="javascript" type="text/javascript" src="@Url.Content("~/My97DatePicker/WdatePicker.js")"></script>
 <script type="text/javascript" src="@Url.Content("~/Scripts/autoNumeric.js")"></script>
 <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.metadata.js")"></script>
 <script language="javascript" type="text/javascript">
    $(function () {
        $(":text[id$='DealTime']").click(function () {
            WdatePicker();
        });
        $(":text[id$='RefundFee']").autoNumeric({ aSep: '', pSign: 's' });
   });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    <fieldset>
    @Html.HiddenFor(model => model.OrderDetailID)
    @Html.HiddenFor(model => model.GroupByItemID)
        <table width="100%" class="tbList">
            <tr>
                <td>
                    <label>
                        团购名称
                    </label>
                </td>
                <td colspan="3">
                    <label>@ViewData["GroupByName"]</label>
                </td>
            </tr>
            <tr>
                <td>
                    买家名称
                </td>
                <td>@Model.BuyerNick
                </td>
                <td>淘宝支付宝账号
                </td>
                <td>@Model.AlipayNo
                </td>
                 </tr>
                 <tr>
                <td>
                    订单编号
                </td>          
                <td>@Model.Oid
                </td> 
                <td>买家应付金额                
                </td>
                <td>@String.Format("{0:F}", Model.TotalFee) 元
                </td>
                
            </tr>
             <tr>
                <td>
                    <label>
                        买家地址
                    </label>
                </td>
                <td colspan="3">
                    @Model.Address
                </td>
            </tr>
             <tr>
                <td>
                    <label>
                        买家留言
                    </label>
                </td>
                <td colspan="3">
                    @Model.BuyerMessage
                </td>
            </tr>
            <tr>
                <td>订单状态
                </td>
                <td>@ParseOrderStatus(Model.OrderStatus)
                </td>
                <td>
                    退款状态
                </td>
                <td>
                @ParseRefundStatus(@Model.RefundStatus)
                @*@Html.DropDownListFor(model => model.RefundStatus, ViewData["RefundStatus"] as IEnumerable<SelectListItem>)*@
                </td>
            </tr>
            <tr>
               <td>需要退货
                </td>
                <td>@Model.HasGoodReturn
                </td>
                <td>退货时间
                </td>
                <td>@Model.GoodReturnTime.ToString()
                </td>
            </tr>
            <tr>
                <td>
                    问题类型
                </td>
                <td>
                 @if (ViewData["GroupByGroupStatus"] == null || Convert.ToInt32(ViewData["GroupByGroupStatus"]) <= 0)
                 {
                     @Html.DropDownList("IssueType", ViewData["IssueTypeList"] as SelectList)
             @*       @Html.DropDownListFor(model => model.IssueType, ViewData["IssueTypeList"] as SelectList)*@
                 }
                 else
                 {
                    @ParseIssueType(Model.IssueType)   
                 }
                </td>
                <td>
                    是否线下转款
                 </td>   
                 <td>                   
                    @if (Model.OfflineDealStatus > 0)
                    { 
                        @:是
                    }
                    else
                    { 
                    @Html.CheckBox("CheckOfflinePay", Model.OfflineDealStatus.HasValue)
                    }
                 </td>
            </tr>
             <tr>
                <td>退款原因
                </td>
                <td>@Model.Reason
                </td>
                <td>退款说明
                </td>
                <td>@Model.Desc
                </td>
            </tr>
            <tr>
            <td>退换给买家金额
                </td>
                <td>
                @String.Format("{0:F}", Model.RefundFee) 元
                </td>
                <td>
                支付给卖家金额
                </td>
                <td>
                @String.Format("{0:F}", Model.Payment) 元
                </td>
            </tr>            
            <tr>
               <td>
               申请退款时间
               </td>
               <td>
               @Model.ApplyRefundTime.ToString()
               </td>
               <td>退款更新时间
               </td>
               <td>
               @Model.UpdateRefundTime.ToString()
               </td>
            </tr>
            <tr>
                 @if (ViewData["GroupByGroupStatus"] == null || Convert.ToInt32(ViewData["GroupByGroupStatus"]) <= 0)
                 {
                     <td>
                        处理日期
                    </td>
                    <td>@Html.EditorFor(model => model.DealTime)
                    @Html.ValidationMessageFor(model => model.DealTime, "*")
                    </td>
                    <td>
                        备注
                    </td>
                    <td>@Html.TextAreaFor(model => model.Remark)
                    </td>
                 }
                 else
                 {
                    <td>
                    处理日期
                    </td>
                    <td>
                   @Model.DealTime.ToString()
                    </td>
                    <td>
                        备注
                    </td>
                    <td>
                    @Model.Remark
                    </td>
                 }
                
            </tr>
        </table>
        <p>
            @if (ViewData["GroupByGroupStatus"] == null || Convert.ToInt32(ViewData["GroupByGroupStatus"]) <= 0)
            {
                <input name="btnSave" id="btnSave" type="submit" value="保存" class="button" />    
            }
            <input name="btnUpdateFTaobao" id="btnUpdateFTaobao" type ="submit" value="更新订单" class="button" />    
        </p>
    </fieldset>
}
@using (Html.BeginForm("Back", "OrderDetail", new { orderDetailId = Model.OrderDetailID, groupByItemID = Model.GroupByItemID }, FormMethod.Post))
{
<p>
     <input type="submit" id="btnBack" value="返回" class="button"  />
 @*    onclick="window.location='@Url.Action("Index", "OrderDetail", new { id = Model.GroupByItemID })'"*@
</p>
}
