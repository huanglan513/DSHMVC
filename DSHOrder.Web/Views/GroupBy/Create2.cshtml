@model DSHOrder.Web.Models.GroupBySinglePlatForm

@{
    ViewBag.Title = "团购录入";
}
@using DSHOrder.Entity

<h2>团购录入</h2>
 <link rel="stylesheet" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
 <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui.min.js")"></script>
 <script type="text/javascript" src="@Url.Content("~/Scripts/DatePickerzh-cn.js")"></script>
<script language="javascript" type="text/javascript">
$(function(){

    $('#StartDate').datepicker({ dateFormat: 'yy-mm-dd',changeYear: true,changeMonth: true,yearRange: '2010:2040'});
    $('#EndDate').datepicker({ dateFormat: 'yy-mm-dd',changeYear: true,changeMonth: true,yearRange: '2010:2040'});
    $('#ExpireDate').datepicker({ dateFormat: 'yy-mm-dd',changeYear: true,changeMonth: true,yearRange: '2010:2040'});
    $('#firstPaymentDate').datepicker({ dateFormat: 'yy-mm-dd',changeYear: true,changeMonth: true,yearRange: '2010:2040'});
    $('#secondPaymentDate').datepicker({ dateFormat: 'yy-mm-dd',changeYear: true,changeMonth: true,yearRange: '2010:2040'});
    


        $("#IndustryID").change(function(){ //ORG3选项改变时激活
            var selec = $(this).val();  //获取改变的选项值
            var url ="@Url.Action("GetSubIndustry", "GroupBy", new { area = "SGManage" })";  //参数依次类型(action,Controller,area）

            $("#SubIndustryID").find("option").remove();  //清空

            $.getJSON(url, { 'industryID': selec }, function (data) {  //orgID是参数名和Controllers中的action参数名相同
            
                $.each(data, function (i, item) {
                    $("<option></option>").val(item["Value"]).text(item["Text"]).appendTo($("#SubIndustryID"));
                });  //如果url访问成功  则执行function(data)这个函数（看仔细了，这里该函数也是.getJSON的第三个参数）
            });     //function(data)获取了通过url返回来的值，并且循环读取出来

        });

        $("#DepartmentID").change(function(){ //ORG3选项改变时激活
            var selec = $(this).val();  //获取改变的选项值
            var url ="@Url.Action("GetUsersByDepartment", "GroupBy", new { area = "SGManage" })";  //参数依次类型(action,Controller,area）

            $("#divSeller").children().remove();  //清空
            //debugger;
            $.getJSON(url, { 'departmentID': selec }, function (data) {  //orgID是参数名和Controllers中的action参数名相同
            
                $.each(data, function (i, item) {
                    var id="cbxUser";
                    $("<input type='checkbox' />").val(item["Value"]).attr("id",id).attr("name",id).appendTo($("#divSeller"));
                    $("<span></span>").text(item["Text"]).appendTo($("#divSeller"));
                    $("<br/>").appendTo($("#divSeller"));
                });  //如果url访问成功  则执行function(data)这个函数（看仔细了，这里该函数也是.getJSON的第三个参数）
            });     //function(data)获取了通过url返回来的值，并且循环读取出来

        });

         $("#CustomerCityID").change(function(){ //City选项改变时激活
            var selec = $(this).val();  //获取改变的选项值
            var url ="@Url.Action("GetDistrict", "GroupBy", new { area = "SGManage" })";  //参数依次类型(action,Controller,area）

            $("#CustomerDistrictID").find("option").remove();  //清空
            var districtVal;
            $.ajaxSetup({ async: false});   //设置成同步
            $.getJSON(url, { 'cityID': selec }, function (data) {  //orgID是参数名和Controllers中的action参数名相同
                $.each(data, function (i, item) {
                    if(i==0)
                    {
                        districtVal=item["Value"];
                    }
                    $("<option></option>").val(item["Value"]).text(item["Text"]).appendTo($("#CustomerDistrictID"));
                });  
            });    
            var urlCustomer="@Url.Action("GetCustomer", "GroupBy", new { area = "SGManage" })";
            $("#CustomerID").find("option").remove();
          
            $.getJSON(urlCustomer,{'cityID':selec,'districtID':districtVal},function(data){
                $.each(data,function(i,item){
                    $("<option></option>").val(item["Value"]).text(item["Text"]).appendTo($("#CustomerID"));
                });
            });
        });

          $("#CustomerDistrictID").change(function(){ 
            var selec = $(this).val();  //获取改变的选项值
            var cityVal=$("#CustomerCityID").val();
             var urlCustomer="@Url.Action("GetCustomer", "GroupBy", new { area = "SGManage" })";
            $("#CustomerID").find("option").remove();
          
            $.getJSON(urlCustomer,{'cityID':cityVal,'districtID':selec},function(data){
                $.each(data,function(i,item){
                    $("<option></option>").val(item["Value"]).text(item["Text"]).appendTo($("#CustomerID"));
                });
            });
         });
    });

    function selectTag(showContent,selfObj)
    {
        if(!validGroupByBaseInfoRequired())
        {
            return;
        }
	    // 操作标签
	    var tag = document.getElementById("tags").getElementsByTagName("li");
	    var taglength = tag.length;
	    for(i=0; i<taglength; i++){
		    tag[i].className = "";
	    }
	    selfObj.parentNode.className = "selectTag";
	    // 操作内容
	    for(i=0; j=document.getElementById("tagContent"+i); i++){
		    j.style.display = "none";
	    }
	    document.getElementById(showContent).style.display = "block";
    }

    function validGroupByBaseInfoRequired()
    {
        
        if($(":checkbox[id^='cbxPortal'][checked=true]").length==0)
        {
            alert("请选择团购平台");
            return false;
        }
        if($("#GroupByName").val()=="")
        {
            alert("请输入团购名称");
            return false;
        }
        if($("#GroupByContactNo").val()=="")
        {
            alert("请输入团购合同号");
            return false;
        }
        if($("#groupByNo").val()=="")
        {
            alert("请输入团购编码");
            return false;
        }
        var lowestNumVal=$("#LowestNum").val();
        if(lowestNumVal=="")
        {
            alert("请输入团购最少数量");
            return false;
        }
        if(parseInt(lowestNumVal).toString()!=lowestNumVal)
        {
            alert("团购最少数量必须输入正数");
            return false;
        }
        var highestNumVal=$("#HighestNum").val();
        if(highestNumVal=="")
        {
            alert("请输入团购最多数量");
            return false;
        }
        if(parseInt(highestNumVal).toString()!=highestNumVal)
        {
            alert("团购最多数量必须输入正数");
            return false;
        }
     
        if($(":checkbox[id^='cbxUser'][checked=true]").length==0)
        {
            alert("请选择业务员");
            return false;
        }
        var startDateVal=$("#StartDate").val();
        var endDateVal=$("#EndDate").val();
        if(startDateVal=="")
        {
            alert("请输入上线日期");
            return false;
        }
        if(endDateVal=="")
        {
            alert("请输入下线日期");
            return false;
        }
        var startDateDt = Date.parse(startDateVal.replace('-','/'));
        var endDateDt = Date.parse(endDateVal.replace('-','/'));
        if (startDateDt > endDateDt) 
        {
            alert("下线日期应晚于上线日期");
            return false;
        }
        if(startDateDt<Date.parse(new Date()))
        {
            alert("上线日期应晚于今天");
            return false;
        }
        var expireDateVal=$("#ExpireDate").val();
        if(expireDateVal=="")
        {
            alert("请输入有效日期");
            return false;
        }
        if($("#CustomerID  option:selected").length==0)
        {
            alert("请选择商家");
            return false;
        }

        if($(":checkbox[id^='cbxCity'][checked=true]").length==0)
        {
            alert("请选择团购城市");
            return false;
        }
        if($("GroupByContent").val()=="")
        {
            alert("请输入团购描述");
            return false;
        }
        return true;
    }

    function validMoneyInfoRequired()
    {
        if($("#OriginalPrice").val=="")
        {
            alert("请输入底价");
            return false;
        }
        if($("SellingPrice").val=="")
        {
            alert("请输入团购价");
            return false;
        }
     
        return true;
    }

    function validRequired()
    {
        if(!validGroupByBaseInfoRequired())
        {
           // selectTag("tagContent0",$('#baseInfo'));
            return false;
        }
        if(!validMoneyInfoRequired())
        {
            //selectTag("tagContent1",$("#moneyInfo"));
            return false;
        }
        return true;
    }

    
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model=>model.GroupByItemID)
    @Html.HiddenFor(model=>model.GroupByGroupID)
    @Html.HiddenFor(model=>model.GroupByPortalID)
    <fieldset>
       @* <legend>GroupByItem</legend>*@
          <ul   id="tags" width="100%">
                    <li  class="selectTag"><a  id="baseInfo" onclick="selectTag('tagContent0',this)"  href="#">团购基本信息</a> </li>
                    <li><a  id="moneyInfo" onclick="selectTag('tagContent1',this)"  href="#">
                        财务相关信息</a></li>
                </ul>

                <div id="tagContent">
                        <div class="tagContent selectTag" id="tagContent0">
                    <table width="100%"><tr>
                    <td>团购平台</td>
                    <td>
                    @{
                        var k = 0;
                        foreach (GroupByPortal item in (IList<GroupByPortal>)ViewData["portal"])
                        {
                           // var cbxID = "cbxPortal" + k;
                             var cbxID = "cbxPortal";
                            if (Model != null && Model.GroupByPortalID == item.GroupByPortalID)
                            {
                                 <input  id="@cbxID" name="@cbxID" type="checkbox" value="@item.GroupByPortalID" checked="checked"/>@item.PortalName;
                            }
                            else
                            {
                                <input  id="@cbxID" name="@cbxID" type="checkbox" value="@item.GroupByPortalID" />@item.PortalName;

                            }
                            k++;
                        }
                      }
                        </td>
                   <td>团购编码</td>
                       <td>@Html.TextBox("groupByNo")</td>
                    </tr>
                    <tr>
                    <td>团购名称</td>
                   @* <td>@Html.TextBox("#groupByName")</td>*@
                   <td>@Html.EditorFor(model => model.GroupByName,new{@readonly="readonly"})</td>
                  

                      <td>所属部门</td>
                   @* <td>@Html.DropDownList("departmentSelectList")</td>*@
                   <td>@Html.DropDownListFor(model => model.DepartmentID, ViewData["departmentSelectList"] as IEnumerable<SelectListItem>)</td>
                    </tr>
                    <tr>
                      <td>团购合同号</td>
                   @* <td>@Html.TextBox("ContactNo")</td>*@
                   <td>@Html.EditorFor(model => model.GroupByContactNo)</td>
                     
                       <td rowspan="4">业务员</td>
                       <td rowspan="4">
                       <div id="divSeller" style="border:#ccc 1px solid; height:105px">
                       @{
    if (ViewData["userList"] != null)
                      {
                          var i = 0;
                          foreach (User item in (List<User>)ViewData["userList"])
                          {
                             // var cbxID = "cbxUser" + i;
                               var cbxID = "cbxUser";
                              if (Model != null && Model.Sellers != null && Model.Sellers.Contains(item.UserID))
                              {
                                  <input  id="@cbxID" name="@cbxID" type="checkbox" value="@item.UserID" checked="checked" /><span>@item.UserName</span><br />
                              }
                              else
                              {
                                 <input  id="@cbxID" name="@cbxID" type="checkbox" value="@item.UserID" /><span>@item.UserName</span><br />
                              }
                              i++;
                          }
                      }
}</div>
                       </td>
                    </tr>
                    <tr><td>团购最少数量</td>
                        <td>@Html.EditorFor(model=>model.LowestNum)</td>
                    </tr>
                      <tr><td>团购最多数量</td>
                        <td>@Html.EditorFor(model=>model.HighestNum)</td>
                    </tr>
                    <tr>
                        <td>上线日期</td>
                       @* <td>@Html.TextBox("startDate")</td>*@
                       <td>@Html.EditorFor(model => model.StartDate)</td>
                    </tr>
                    <tr><td>下线日期</td>
                      @*  <td>@Html.TextBox("endDate")</td>*@
                      <td>@Html.EditorFor(model => model.EndDate)</td>
                        <td>商家名称</td> 
                        <td>@Html.DropDownListFor(model => model.CustomerCityID, ViewData["citySelectList"] as IEnumerable<SelectListItem>)&nbsp;
                        @Html.DropDownListFor(model => model.CustomerDistrictID, ViewData["districtSelectList"] as IEnumerable<SelectListItem>)</td>
                    </tr>
                    <tr><td>有效期</td>
                      @*  <td>@Html.TextBox("expireDate")</td>*@
                      <td>@Html.EditorFor(model => model.ExpireDate)</td>
                        <td>&nbsp;</td>
                        <td>@Html.DropDownListFor(model=>model.CustomerID,ViewData["customerSelectList"] as IEnumerable<SelectListItem>, new { @style = "width:95%" })
                    <br /><br />@Html.ActionLink("新增商家", "Create", "Customer")</td>  
                    </tr>
                    <tr>
                        <td>所属行业</td>
                        <td>@Html.DropDownListFor(model => model.IndustryID, ViewData["industrySelectList"] as IEnumerable<SelectListItem>)</td>
                        <td>&nbsp;</td>
                          <td>&nbsp;</td>
                    </tr>
                    <tr>
                        <td>行业细类</td>
                        <td>@Html.DropDownListFor(model => model.SubIndustryID, ViewData["subIndustrySelectList"] as IEnumerable<SelectListItem>)</td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                    <tr>
                        <td>网站地址</td>
                       @* <td>@Html.TextBox("url")</td>*@
                       <td>@Html.EditorFor(model => model.Url)</td>
                        <td>参加团购城市</td>
                        <td>
                        @{
                      var j = 0;
                      foreach (City item in (IList<City>)ViewData["city"])
                      {
                        //  var cbxID = "cbxCity" + j;
                            var cbxID = "cbxCity";
                          if (Model != null && Model.Cities != null && Model.Cities.Contains(item.CityID))
                          {
                                            <input  id="@cbxID" name="@cbxID" type="checkbox" value="@item.CityID" checked="checked" />@item.CityName;
                          }
                          else
                          {
                                            <input  id="@cbxID" name="@cbxID" type="checkbox" value="@item.CityID" />@item.CityName;
                          }
                      }
                        }
                        </td>
                    </tr>
                    <tr>
                    <td valign="top">团购描述</td>
                    <td colspan="3">
                        @Html.TextAreaFor(model => model.GroupByContent)
                    </td>
                    </tr>
                    </table>
                    </div>
                </div>

                 <div class="tagContent selectTag" id="tagContent1">
                    <table width="100%"><tr><td>
                    底价
                    </td>
                   @* <td>@Html.TextBox("lowPrice")</td>*@
                   <td>@Html.EditorFor(model => model.OriginalPrice)</td>
                    <td>第一次计划打款日</td>
                    <td>@Html.TextBox("firstPaymentDate")</td>
                    </tr>
                    <tr>
                    <td>团购价</td>
                  @*  <td>@Html.TextBox("groupByPrice")</td>*@
                  <td>@Html.EditorFor(model => model.SellingPrice)</td>
                    <td>第二次计划打款日</td>
                    <td>@Html.TextBox("secondPaymentDate")</td>
                    </tr>
                    <tr>
                       <td>退款类型</td>
                       <td>@Html.DropDownListFor(model => model.RefundType, ViewData["refundTypeSelectList"] as IEnumerable<SelectListItem>)</td>
                       <td >&nbsp;</td>
                       <td>&nbsp;</td>
                    </tr>
                    <tr>
                        <td>商家名称</td>
                        <td colspan="3"><label id="lblCustomerName">@ViewData["customerName"]</label></td>
                    </tr>
                    <tr><td>结算方式</td>
                        <td>@Html.DropDownListFor(model => model.SettlementType, ViewData["paymentTypeSelectList"] as IEnumerable<SelectListItem>)</td>
                        <td>联系电话</td>
                        <td><label>@ViewData["contactPhoneNo"]</label></td>
                        
                    </tr>
                    <tr><td>收款银行</td>
                        <td><label id="lblBank">@ViewData["bank"]</label></td>
                        <td>收款人</td>
                        <td><label id="lblReciever">@ViewData["reciever"]</label></td>
                    </tr>
                    <tr>
                        <td>银行账户</td>
                        <td><label id="lblAccountNo">@ViewData["bankAccountNo"]</label></td>
                        <td>&nbsp;</td>
                          <td>&nbsp;</td>
                    </tr>
                    </table>
                </div>

        <p>
            <input type="submit" value="Create" onclick="return validRequired()" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>

