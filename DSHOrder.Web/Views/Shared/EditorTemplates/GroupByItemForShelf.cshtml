@model DSHOrder.Web.Models.GroupByItemForShelf

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script language="javascript" type="text/javascript">
    $(function () {

        $(":text[id$='ActualSellNum']").autoNumeric({ aSep: '', pSign: 's', mDec: '0' });
        $(":text[id$='ActualOnlineRefundNum']").autoNumeric({ aSep: '', pSign: 's', mDec: '0' });
        $(":text[id$='ActualOfflineRefundNum']").autoNumeric({ aSep: '', pSign: 's', mDec: '0' });
        $(":text[id$='ActualRefundPrice']").autoNumeric({ aSep: '', pSign: 's' });
        $(":text[id$='ActualTotalProfit']").autoNumeric({ aSep: '', pSign: 's' });
        $(":text[id$='ActualTotalPayment']").autoNumeric({ aSep: '', pSign: 's' });
        $(":text[id$='LogisticCharge']").autoNumeric({ aSep: '', pSign: 's' });
        $(":text[id$='OtherCharge']").autoNumeric({ aSep: '', pSign: 's' });


        $(":text[id$='LogisticCharge']").blur(function () {
            CalculateValue()
        });
        $(":text[id$='OtherCharge']").blur(function () {
            CalculateValue()
        });
    });

    function CalculateValue() {

        var logisticCharge = $(":text[id$='LogisticCharge']").val().replace(/,/g, "");
        var otherCharge = $(":text[id$='OtherCharge']").val().replace(/,/g, "");
        var onlineRefundNum = $("#spOnlineRefundNum").text().replace(/,/g, "");
        var offlineRefundNum = $("#spOfflineRefundNum").text().replace(/,/g, "");
        var sellNum = $("#spSellNum").text().replace(/,/g, "");
        var refundPrice = $("#spRefundPrice").text().replace(/,/g, "");
        var originalPrice = $("#spOriginalPrice").text().replace(/,/g, "");
        var sellingPrice = $("#spSellingPrice").text().replace(/,/g, "");

        if (isNaN(parseFloat(logisticCharge))) {
            logisticCharge = 0;
        }
        if (isNaN(parseFloat(otherCharge))) {
            otherCharge = 0;
        }

        var totalProfit = (parseFloat(sellingPrice) - parseFloat(originalPrice)) * parseFloat(sellNum) - parseFloat(refundPrice) - parseFloat(logisticCharge) - parseFloat(otherCharge);
        var totalPayment = parseFloat(originalPrice) * parseFloat(sellNum) - parseFloat(refundPrice) - parseFloat(logisticCharge) - parseFloat(otherCharge);
      
        $("#spTotalProfit").text(totalProfit.toFixed(2));
        $(":hidden[id$='TotalProfit']").val(totalProfit.toFixed(2));
        $("#spTotalPayment").text(totalPayment.toFixed(2));
        $(":hidden[id$='TotalPayment']").val(totalPayment.toFixed(2));

    }
</script> 

    <div style=" background-color:#DFF4F5; height:30px; vertical-align:middle"><label id="lblPlatForm" style="vertical-align:middle">
    <label  style="vertical-align:middle">@(Model.GroupByGroupName+" ("+Model.PortalName+" 平台)")</label>
    </label></div>
     @Html.HiddenFor(model=>model.GroupByItemID)
   
   <table  class="tbList" style="border: solid 1px  #BDBDBD;">
    <tr><td  style="width:120px">@Html.LabelFor(model=>model.GroupByGroupName)</td><td colspan="5">@Model.GroupByGroupName</td></tr>
     <tr><td>确认下线</td>
        <td colspan="5">
            @if (Model.Status.HasValue && Model.Status >= (int)DSHOrder.Common.Utils.GroupByItemStatus.Shelf)
            {
                @Html.CheckBox("cbxShelf", true, new { disabled = "disabled" }) 
            }
            else
            {
                 @Html.CheckBox("cbxShelf", false)
            }
            确认下线
            </td></tr>
     <tr>
        <td>@Html.LabelFor(model => model.OriginalPrice)</td>
        <td colspan="2"><span id="spOriginalPrice">@string.Format("{0:N}", Model.OriginalPrice)</span>  元</td>
        <td>@Html.LabelFor(model => model.LogisticCharge)</td>
        <td colspan="2">@Html.EditorFor(model => model.LogisticCharge) 元</td>
     </tr>
     <tr>
        <td>@Html.LabelFor(model => model.SellingPrice)</td>
        <td colspan="2"><span id="spSellingPrice">@Model.SellingPrice</span>  元</td>
        <td>@Html.LabelFor(model => model.OtherCharge)</td>
        <td colspan="2">@Html.EditorFor(model => model.OtherCharge) 元</td>
     </tr>
     <tr>
         <td  style="width:120px" rowspan="2">线上退款数量</td>
         <td style="width:120px">@Html.LabelFor(model => model.OnlineRefundNum)</td>
         <td style="width:200px"><span id="spOnlineRefundNum">@string.Format("{0:F}",Model.OnlineRefundNum)</span></td>
         <td  style="width:120px" rowspan="2">线下退款数量</td>
         <td style="width:120px">@Html.LabelFor(model => model.OfflineRefundNum)</td>
         <td style="width:200px"><span id="spOfflineRefundNum">@string.Format("{0:F}", Model.OfflineRefundNum)</span></td>
    </tr>
     <tr>
         <td style="width:120px">@Html.LabelFor(model => model.ActualOnlineRefundNum)</td>
         <td style="width:200px">@Html.EditorFor(model => model.ActualOnlineRefundNum)</td>
         <td style="width:120px">@Html.LabelFor(model => model.ActualOfflineRefundNum)</td>
         <td style="width:200px">@Html.EditorFor(model => model.ActualOfflineRefundNum)</td>
    </tr>
     <tr>
         <td rowspan="2">销售数量</td>
         <td>@Html.LabelFor(model => model.SellNum)</td>
         <td><span id="spSellNum">@string.Format("{0:F}", Model.SellNum)</span></td>
         <td rowspan="2">退款费用</td>
         <td>@Html.LabelFor(model => model.RefundPrice)</td>
         <td><span id="spRefundPrice">@string.Format("{0:N}", Model.RefundPrice)</span> 元</td>
    </tr>
      <tr>  
         <td>@Html.LabelFor(model => model.ActualSellNum)</td>
         <td>@Html.EditorFor(model => model.ActualSellNum)</td>
         <td>@Html.LabelFor(model => model.ActualRefundPrice)</td>
         <td>@Html.EditorFor(model => model.ActualRefundPrice) 元</td>
    </tr>
     <tr>
         <td rowspan="2">利润</td>
         <td>@Html.LabelFor(model => model.TotalProfit)</td>
         <td><span id="spTotalProfit">@string.Format("{0:N}", Model.TotalProfit) </span> 元
         @Html.HiddenFor(model=>model.TotalProfit)
         </td>
         <td rowspan="2">总付款金额</td>
         <td>@Html.LabelFor(model => model.TotalPayment)</td>
         <td><span id="spTotalPayment">@string.Format("{0:N}", Model.TotalPayment)</span> 元
         @Html.HiddenFor(model=>model.TotalPayment)
         </td>
    </tr>
      <tr>  
         <td>@Html.LabelFor(model => model.ActualTotalProfit)</td>
         <td>@Html.EditorFor(model => model.ActualTotalProfit) 元</td>
         <td>@Html.LabelFor(model => model.ActualTotalPayment)</td>
         <td>@Html.EditorFor(model => model.ActualTotalPayment) 元</td>
    </tr>
   </table>
        

